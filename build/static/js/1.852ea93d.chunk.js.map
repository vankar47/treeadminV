{"version":3,"sources":["../node_modules/reactstrap/es/CardHeader.js","../node_modules/jquery/dist/jquery.js","../node_modules/datatables.net-bs4/js/dataTables.bootstrap4.js","../node_modules/datatables.net/js/jquery.dataTables.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","className","a","string","cssModule","object","CardHeader","props","Tag","attributes","Object","classes","createElement","defaultProps","__webpack_exports__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","module","exports","document","w","Error","window","this","noGlobal","arr","getProto","getPrototypeOf","_slice","slice","flat","array","call","concat","apply","push","indexOf","class2type","toString","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","support","isFunction","obj","nodeType","item","isWindow","preservedScriptAttributes","type","src","nonce","noModule","DOMEval","code","node","doc","i","val","script","text","getAttribute","setAttribute","head","appendChild","parentNode","removeChild","toType","jQuery","selector","context","fn","init","isArrayLike","length","prototype","jquery","constructor","toArray","get","num","pushStack","elems","ret","merge","prevObject","each","callback","map","elem","arguments","first","eq","last","even","grep","_elem","odd","len","j","end","sort","splice","extend","options","name","copy","copyIsArray","clone","target","deep","isPlainObject","Array","isArray","undefined","expando","Math","random","replace","isReady","error","msg","noop","proto","Ctor","isEmptyObject","globalEval","makeArray","results","inArray","second","invert","matches","callbackExpect","arg","value","guid","Symbol","iterator","split","_i","toLowerCase","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","Date","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","nonnativeSelectorCache","sortOrder","b","pop","pushNative","list","booleans","whitespace","identifier","pseudos","rwhitespace","RegExp","rtrim","rcomma","rcombinators","rdescend","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rhtml","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","escape","nonHex","high","String","fromCharCode","rcssescape","fcssescape","ch","asCodePoint","charCodeAt","unloadHandler","inDisabledFieldset","addCombinator","disabled","nodeName","dir","next","childNodes","e","els","seed","m","nid","match","groups","newSelector","newContext","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","testContext","scope","toSelector","join","querySelectorAll","qsaError","removeAttribute","keys","cache","key","cacheLength","shift","markFunction","assert","el","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","namespace","namespaceURI","documentElement","hasCompare","subWindow","defaultView","top","addEventListener","attachEvent","createComment","getById","getElementsByName","filter","attrId","find","getAttributeNode","tmp","input","innerHTML","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","specified","sel","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo","relative",">"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","result","what","_argument","simple","forward","ofType","_context","xml","uniqueCache","outerCache","nodeIndex","start","parent","useCache","lastChild","uniqueID","pseudo","args","setFilters","idx","matched","not","matcher","unmatched","has","lang","elemLang","hash","location","root","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","empty","header","button","_matchIndexes","lt","gt","radio","checkbox","file","password","image","submit","reset","tokens","combinator","base","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","token","compiled","_name","defaultValue","unique","isXMLDoc","escapeSelector","_dir","until","truncate","is","_siblings","rneedsContext","rsingleTag","winnow","qualifier","self","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","children","contents","prev","sibling","targets","l","closest","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","content","reverse","rnothtmlwhite","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","method","promise","fail","then","Callbacks","_","flag","createOptions","firing","memory","_fired","_locked","queue","firingIndex","fire","once","stopOnFalse","remove","disable","lock","locked","fireWith","fired","Deferred","func","tuples","_state","_promise","state","always","deferred","catch","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","depth","special","that","mightThrow","TypeError","notifyWith","resolveWith","process","exceptionHook","stackTrace","rejectWith","getStackHook","setTimeout","stateString","when","singleValue","remaining","resolveContexts","resolveValues","primary","updateFunc","rerrorNames","stack","console","warn","message","readyException","readyList","completed","removeEventListener","readyWait","wait","readyState","doScroll","access","chainable","emptyGet","raw","bulk","_key","rmsPrefix","rdashAlpha","fcamelCase","_all","letter","toUpperCase","camelCase","acceptData","owner","Data","uid","defineProperty","configurable","set","data","prop","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","JSON","parse","getData","_data","removeData","_removeData","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","pnum","source","rcssNum","cssExpand","isAttached","composed","getRootNode","isHiddenWithinTree","style","display","css","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","body","showHide","show","values","hide","toggle","rcheckableType","rtagName","rscriptType","div","createDocumentFragment","checkClone","cloneNode","noCloneChecked","option","wrapMap","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","tbody","tfoot","colgroup","caption","th","optgroup","buildFragment","scripts","selection","ignored","wrap","attached","fragment","nodes","htmlPrefilter","createTextNode","rtypenamespace","returnTrue","returnFalse","expectSync","err","safeActiveElement","_on","types","one","origFn","event","off","leverageNative","notAsync","saved","isTrigger","delegateType","stopPropagation","stopImmediatePropagation","preventDefault","trigger","Event","handleObjIn","eventHandle","events","t","handleObj","handlers","namespaces","origType","elemData","create","handle","triggered","dispatch","bindType","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","postDispatch","_handlers","matchedHandlers","matchedSelectors","addProp","hook","enumerable","originalEvent","writable","load","noBubble","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","now","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","on","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","valueIsFunction","html","_evalUrl","_remove","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","rnumnonpx","getStyles","opener","getComputedStyle","swap","old","rboxStyle","curCSS","computed","width","minWidth","maxWidth","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","container","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","position","scrollboxSizeVal","offsetWidth","measure","round","parseFloat","reliableTrDimensionsVal","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","reliableTrDimensions","table","trChild","trStyle","height","parseInt","borderTopWidth","borderBottomWidth","offsetHeight","cssPrefixes","emptyStyle","vendorProps","finalPropName","final","cssProps","capName","vendorPropName","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","setPositiveNumber","subtract","max","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","ceil","getWidthOrHeight","valueIsBorderBox","offsetProp","getClientRects","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","order","orphans","widows","zIndex","zoom","origName","isCustomProp","setProperty","isFinite","getBoundingClientRect","scrollboxSizeBuggy","left","margin","padding","border","prefix","suffix","expand","expanded","parts","propHooks","run","percent","eased","duration","pos","step","fx","scrollTop","scrollLeft","linear","p","swing","cos","PI","fxNow","inProgress","rfxtypes","rrun","schedule","hidden","requestAnimationFrame","interval","tick","createFxNow","genFx","includeWidth","createTween","animation","Animation","tweeners","properties","stopped","prefilters","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","propFilter","bind","complete","timer","anim","*","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","tabindex","for","class","addClass","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","isValidValue","classNames","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","parentWindow","simulate","triggerHandler","attaches","rquery","parseXML","parserErrorElem","DOMParser","parseFromString","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","param","s","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","_statusCode","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","statusText","finalText","crossDomain","host","hasContent","ifModified","headers","beforeSend","success","send","nativeStatusText","responses","isSuccess","response","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","text script","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","visible","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","_callback","errorCallback","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","_callback2","scriptAttrs","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","unbind","delegate","undelegate","hover","fnOver","fnOut","proxy","holdReady","hold","parseJSON","isNumeric","isNaN","trim","_jQuery","_$","$","noConflict","__WEBPACK_AMD_DEFINE_ARRAY__","DataTable","dataTable","defaults","dom","renderer","ext","sWrapper","sFilterInput","sLengthSelect","sProcessing","sPageButton","pageButton","bootstrap","page","pages","btnDisplay","btnClass","activeEl","api","Api","oClasses","oLanguage","oPaginate","aria","oAria","paginate","counter","attach","ien","clickHandler","action","draw","sFirst","sPrevious","sNext","sLast","sTableId","aria-controls","aria-label","data-dt-idx","iTabIndex","oApi","_fnBindAction","_ext","_Api2","_api_register","_api_registerPlural","sSelector","oOpts","rows","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","row","flatten","fnAdjustColumnSizing","bRedraw","columns","adjust","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","fnDeleteRow","aoData","fnDestroy","destroy","fnDraw","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","cell","fnGetNodes","iRow","fnGetPosition","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","fnPageChange","mAction","fnSetColumnVis","iCol","bShow","fnSettings","fnSort","aaSort","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","internal","_fnExternApiFunc","iLen","oInit","_fnExtend","sId","bInitHandedOff","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","allSettings","nTable","nTHead","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","_unique","oSettings","models","sDestroyWidth","sInstance","_fnLanguageCompat","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","_iRecordsDisplay","_iRecordsTotal","sUrl","_fnCallbackFire","_fnInitialise","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","asDestroyStripes","aoColumnsInit","anThs","nThead","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","nTBody","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","_fnSaveState","bStateSave","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","_re_formatted_numeric","_empty","d","_intVal","integer","_numToDecimal","decimalPoint","_fnEscapeRegex","_isNumber","formatted","strType","_htmlNumeric","_isHtml","_stripHtml","_pluck","prop2","out","_pluck_order","_range","_removeEmpty","sorted","_areAllUnique","k","again","_includes","includes","_fnHungarianMap","o","newKey","_hungarianMap","user","force","hungarianKey","charAt","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","util","throttle","freq","frequency","escapeRegex","meta","setData","arrayNotation","funcNotation","innerSrc","_fnSplitObjNotation","aLast","__reArray","__reFn","jLen","fetchData","substring","_fnCompatMap","knew","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","outer","inner","barWidth","clientWidth","bScrollOversize","bScrollbarLeft","bBounding","oBrowser","iBarWidth","_fnReduce","inc","isSet","nTh","oDefaults","oCol","oColumn","sTitle","aoPreSearchCols","oOptions","sWidthOrig","mDataProp","sType","_sManualType","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","detect","_fnGetCellData","aoColDefs","aoCols","kLen","def","aTargets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","fomatters","_fnSetCellData","str","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","tds","objectRead","cellProcess","rowNode","nTrIn","nTd","_DT_RowIndex","sCellType","_DT_CellIndex","fnCreatedCell","DT_RowClass","__rowc","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","ajaxComplete","aPreDraw","anRows","iRowCount","iStripes","oLang","aoOpenRows","bServerSide","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","valign","colSpan","sRowEmpty","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","holding","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","substr","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","aLayout","nCell","iColShifted","bUnique","nTrs","fnShiftCol","nHeader","aReturn","bSortCellsTop","_fnBuildAjax","ajaxData","instance","jqXhr","_fnAjaxDataSrc","sError","newData","baseAjax","sServerMethod","_error","thrown","oAjaxData","fnServerData","sAjaxSource","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","write","dataSrc","sAjaxDataProp","tableId","language","previousSearch","f","sFilter","searchFn","return","searchDelay","jqFilter","sSearchPlaceholder","_fnThrottle","ev","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","displayRows","searchStr","smart","caseInsensitive","rpSearch","_fnFilterCreateSearch","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","__filter_div","__filter_div_textContent","filterData","wasInvalidated","innerText","_fnSearchToCamel","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","total","sInfoEmpty","sInfoFiltered","sInfoPostFix","_fnInfoMacros","fnInfoCallback","formatter","fnFormatNumber","all","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","Option","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","visRecords","_fnPageChange","records","floor","changed","r","scrollY","captionSide","headerClone","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","sScrollHeadInner","box-sizing","sXInner","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","tableEl","tableStyle","ie67","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","scrollBarVis","scrollHeight","clientHeight","_fnApplyToChildren","outerWidth","nToSize","iOuterWidth","bScrolling","an1","an2","nNode1","nNode2","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","_fnGetWidestNode","sContentPadding","holder","bounding","_reszEvt","bindResize","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","y","dataA","dataB","label","nextSort","ariaTitle","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","bSortMulti","sortIdx","attachTo","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","_bLoadingState","oSavedState","fnStateSaveCallback","fnStateLoadCallback","_fnImplementState","abStateLoad","iStateDuration","oLoadedState","level","tn","log","sErrMode","errMode","alert","mappedName","extender","breakRefs","sStore","callbackArr","eventName","__apiStruct","__arrayProto","ctxSettings","mixed","jq","tables","_toSettings","any","ctx","alwaysNew","items","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","reduce","reduceRight","to$","toJQuery","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","recordsDisplay","serverSide","__reload","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","selInt","cellIdx","rowObj","__row_selector","thatIdx","loopRow","loopCells","newRows","modRows","indexes","_detailsShow","childRows","ids","loaded","every","__details_remove","_details","__details_display","__details_events","drawEvent","_child_obj","klass","addRow","created","__details_add","_child_mth","__re_column_selector","__columnData","r1","r2","names","visColumns","jqResult","__column_selector","calc","__setColumnVis","__cell_selector","allCells","_flatten","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","caseInsen","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","foot","fnTables","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","removedMethod","arg1","arg2","arg3","arg4","plural","resolved","bScrollCollapse","toFormat","sessionStorage","localStorage","getItem","pathname","setItem","stringify","sScrollXInner","sScrollY","aoRowCallback","aoHeaderCallback","aoFooterCallback","aoRowCreatedCallback","aoPreDrawCallback","aoInitComplete","aoStateSaveParams","aoStateLoadParams","aoStateLoaded","aoStateSave","aoStateLoad","aoServerParams","aoDestroyCallback","min","oPlugins","builder","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","sPageButtonActive","sPageButtonDisabled","sSortAsc","sSortDesc","sSortJUIAsc","sSortJUIDesc","sSortJUIWrapper","sSortIcon","extPagination","_numbers","numbers","numbers_length","half","DT_el","full","simple_numbers","full_numbers","first_last_numbers","disabledClass","__numericReplace","decimalPlace","re1","re2","Infinity","num-fmt","html-num","html-num-fmt","date-pre","ts","html-pre","string-pre","string-asc","string-desc","jqueryui","__htmlEscapeEntities","render","number","thousands","precision","postfix","negative","flo","toFixed","abs","intPart","floatPart","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt"],"mappings":"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","file":"static/js/1.852ea93d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","/*!\n * jQuery JavaScript Library v3.6.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-03-02T17:08Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var _slice = arr.slice;\n  var flat = arr.flat ? function (array) {\n    return arr.flat.call(array);\n  } : function (array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n    // Plus for old WebKit, typeof returns \"function\" for HTML collections\n    // (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\" && typeof obj.item !== \"function\";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var document = window.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i,\n        val,\n        script = doc.createElement(\"script\");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don't support the \"nonce\" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = \"3.6.0\",\n      // Define a local copy of jQuery\n  jQuery = function jQuery(selector, context) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  };\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function toArray() {\n      return _slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function get(num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return _slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function pushStack(elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function each(callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function map(callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function slice() {\n      return this.pushStack(_slice.apply(this, arguments));\n    },\n    first: function first() {\n      return this.eq(0);\n    },\n    last: function last() {\n      return this.eq(-1);\n    },\n    even: function even() {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return (i + 1) % 2;\n      }));\n    },\n    odd: function odd() {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return i % 2;\n      }));\n    },\n    eq: function eq(i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function end() {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === \"boolean\") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (typeof target !== \"object\" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          copy = options[name]; // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n\n          if (name === \"__proto__\" || target === copy) {\n            continue;\n          } // Recurse if we're merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name]; // Ensure proper type for the source value\n\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n\n            copyIsArray = false; // Never move original objects, clone them\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function error(msg) {\n      throw new Error(msg);\n    },\n    noop: function noop() {},\n    isPlainObject: function isPlainObject(obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function isEmptyObject(obj) {\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function globalEval(code, options, doc) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      }, doc);\n    },\n    each: function each(obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // results is for internal usage only\n    makeArray: function makeArray(arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function inArray(elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function merge(first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function grep(elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function map(elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return flat(ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (_i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.6\n   * https://sizzlejs.com/\n   *\n   * Copyright JS Foundation and other contributors\n   * Released under the MIT license\n   * https://js.foundation/\n   *\n   * Date: 2021-02-16\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = \"sizzle\" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        nonnativeSelectorCache = createCache(),\n        sortOrder = function sortOrder(a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        pushNative = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it's faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function indexOf(list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" + \"ismap|loop|multiple|open|readonly|required|scoped\",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n        // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n    identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + // Operator (capture 2)\n    \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5]\n    // or strings [capture 3 or capture 4]\"\n    \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n        pseudos = \":(\" + identifier + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n    \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n    \".*\" + \")\\\\)|)\",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n        rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n        rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n        rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n        rdescend = new RegExp(whitespace + \"|>\"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n        matchExpr = {\n      \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n      \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n      \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n      \"ATTR\": new RegExp(\"^\" + attributes),\n      \"PSEUDO\": new RegExp(\"^\" + pseudos),\n      \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n      \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    },\n        rhtml = /HTML$/i,\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\"),\n        funescape = function funescape(escape, nonHex) {\n      var high = \"0x\" + escape.slice(1) - 0x10000;\n      return nonHex ? // Strip the backslash prefix from a non-hex escape sequence\n      nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point\n      // Support: IE <=11+\n      // For values outside the Basic Multilingual Plane (BMP), manually construct a\n      // surrogate pair\n      high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function fcssescape(ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === \"\\0\") {\n          return \"\\uFFFD\";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return \"\\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a \"Permission Denied\"\n    // error in IE\n    unloadHandler = function unloadHandler() {\n      setDocument();\n    },\n        inDisabledFieldset = addCombinator(function (elem) {\n      return elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n    }, {\n      dir: \"parentNode\",\n      next: \"legend\"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n      // eslint-disable-next-line no-unused-expressions\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          pushNative.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can't trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        setDocument(context);\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && ( // Support: IE 8 only\n          // Exclude object elements\n          nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\")) {\n            newSelector = selector;\n            newContext = context; // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // The technique has to be used as well when a leading combinator is used\n            // as such selectors are not recognized by querySelectorAll.\n            // Thanks to Andrew Dupont for this technique.\n\n            if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {\n              // Expand context for sibling selectors\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context; // We can use :scope instead of the ID hack if the browser\n              // supports it & if we're not changing the context.\n\n              if (newContext !== context || !support.scope) {\n                // Capture the context ID, setting it first if necessary\n                if (nid = context.getAttribute(\"id\")) {\n                  nid = nid.replace(rcssescape, fcssescape);\n                } else {\n                  context.setAttribute(\"id\", nid = expando);\n                }\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = (nid ? \"#\" + nid : \":scope\") + \" \" + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(\",\");\n            }\n\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute(\"id\");\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + \" \"] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split(\"|\"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      var namespace = elem && elem.namespaceURI,\n          docElem = elem && (elem.ownerDocument || elem).documentElement; // Support: IE <=8\n      // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n      // https://bugs.jquery.com/ticket/4833\n\n      return !rhtml.test(namespace || docElem && docElem.nodeName || \"HTML\");\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9 - 11+, Edge 12 - 18+\n      // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener(\"unload\", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent(\"onunload\", unloadHandler);\n        }\n      } // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n      // Safari 4 - 5 only, Opera <=11.6 - 12.x only\n      // IE/Edge & older browsers don't support the :scope pseudo-class.\n      // Support: Safari 6.0 only\n      // Safari 6.0 supports :scope but it's an alias of :root there.\n\n\n      support.scope = assert(function (el) {\n        docElem.appendChild(el).appendChild(document.createElement(\"div\"));\n        return typeof el.querySelectorAll !== \"undefined\" && !el.querySelectorAll(\":scope fieldset div\").length;\n      });\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n      support.attributes = assert(function (el) {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName(\"*\") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(\"\"));\n        return !el.getElementsByTagName(\"*\").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === \"*\") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          var input; // Select is set to empty string on purpose\n          // This is to test IE's treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n\n          docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but \"safe\" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Support: IE8\n          // Boolean attributes and \"value\" are not treated correctly\n\n\n          if (!el.querySelectorAll(\"[selected]\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n            rbuggyQSA.push(\"~=\");\n          } // Support: IE 11+, Edge 15 - 18+\n          // IE 11/Edge don't find elements on a `[name='']` query in some cases.\n          // Adding a temporary attribute to the document before the selection works\n          // around the issue.\n          // Interestingly, IE 10 & older don't seem to have the issue.\n\n\n          input = document.createElement(\"input\");\n          input.setAttribute(\"name\", \"\");\n          el.appendChild(input);\n\n          if (!el.querySelectorAll(\"[name='']\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(\":checked\").length) {\n            rbuggyQSA.push(\":checked\");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n            rbuggyQSA.push(\".#.+[+~]\");\n          } // Support: Firefox <=3.6 - 5 only\n          // Old Firefox doesn't throw on a badly-escaped identifier.\n\n\n          el.querySelectorAll(\"\\\\\\f\");\n          rbuggyQSA.push(\"[\\\\r\\\\n\\\\f]\");\n        });\n        assert(function (el) {\n          el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"hidden\");\n          el.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll(\"[name=d]\").length) {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(\":enabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: IE9-11+\n          // IE's :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(\":disabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: Opera 10 - 11 only\n          // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll(\"*,:x\");\n          rbuggyQSA.push(\",.*:\");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it's possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, \"*\"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, \"[s!='']:x\");\n          rbuggyMatches.push(\"!=\", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n\n\n        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          } // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n\n\n          if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n\n          /* eslint-disable eqeqeq */\n          return a == document ? -1 : b == document ? 1 :\n          /* eslint-enable eqeqeq */\n          aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n\n        /* eslint-disable eqeqeq */\n        ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 :\n        /* eslint-enable eqeqeq */\n        0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      setDocument(elem);\n\n      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((context.ownerDocument || context) != document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((elem.ownerDocument || elem) != document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don't get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + \"\").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = \"\",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === \"string\") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        \"ATTR\": function ATTR(match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n\n          return match.slice(0, 4);\n        },\n        \"CHILD\": function CHILD(match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        \"PSEUDO\": function PSEUDO(match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr[\"CHILD\"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        \"TAG\": function TAG(nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        \"CLASS\": function CLASS(className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        \"ATTR\": function ATTR(name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === \"!=\";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += \"\";\n            /* eslint-disable max-len */\n\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n            /* eslint-enable max-len */\n          };\n        },\n        \"CHILD\": function CHILD(type, what, _argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n              forward = type.slice(-4) !== \"last\",\n              ofType = what === \"of-type\";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, _context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        \"PSEUDO\": function PSEUDO(pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        \"not\": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, _context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        \"has\": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        \"contains\": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        \"lang\": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            Sizzle.error(\"unsupported lang: \" + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        \"target\": function target(elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        \"root\": function root(elem) {\n          return elem === docElem;\n        },\n        \"focus\": function focus(elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        \"enabled\": createDisabledPseudo(false),\n        \"disabled\": createDisabledPseudo(true),\n        \"checked\": function checked(elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n        },\n        \"selected\": function selected(elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            // eslint-disable-next-line no-unused-expressions\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        \"empty\": function empty(elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        \"parent\": function parent(elem) {\n          return !Expr.pseudos[\"empty\"](elem);\n        },\n        // Element/input types\n        \"header\": function header(elem) {\n          return rheader.test(elem.nodeName);\n        },\n        \"input\": function input(elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        \"button\": function button(elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n        \"text\": function text(elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n          // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        \"first\": createPositionalPseudo(function () {\n          return [0];\n        }),\n        \"last\": createPositionalPseudo(function (_matchIndexes, length) {\n          return [length - 1];\n        }),\n        \"eq\": createPositionalPseudo(function (_matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        \"even\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument > length ? length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + \" \"];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = \"\";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === \"parentNode\",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[\" \"],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function superMatcher(seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          outermostContext = context == document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0; // Support: IE 11+, Edge 17 - 18+\n            // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n            // two documents; shallow comparisons work.\n            // eslint-disable-next-line eqeqeq\n\n            if (!context && elem.ownerDocument != document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n        // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + \" \"];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === \"function\" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren't passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property \"interpolation\"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\") === \"#\";\n    })) {\n      addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute(\"value\")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\");\n      return el.firstChild.getAttribute(\"value\") === \"\";\n    })) {\n      addHandle(\"value\", function (elem, _name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute(\"disabled\") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function dir(elem, _dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[_dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var _siblings = function siblings(n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function find(selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function filter(selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function not(selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function is(selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === \"string\") {\n      if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function has(target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function closest(selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== \"string\" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function index(elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function add(selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function addBack(selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function parent(elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function parents(elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function parentsUntil(elem, _i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function next(elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function prev(elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function nextAll(elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function prevAll(elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function nextUntil(elem, _i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function prevUntil(elem, _i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function siblings(elem) {\n      return _siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function children(elem) {\n      return _siblings(elem.firstChild);\n    },\n    contents: function contents(elem) {\n      if (elem.contentDocument != null && // Support: IE 11+\n      // <object> elements with no `data` attribute has an object\n      // `contentDocument` with a `null` prototype.\n      getProto(elem.contentDocument)) {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n\n\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    _fired,\n        // Flag to prevent firing\n    _locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function fire() {\n      // Enforce single-firing\n      _locked = _locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      _fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn't re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we're done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we're done firing for good\n\n      if (_locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = \"\";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function add() {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== \"string\") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function remove() {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function has(fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function empty() {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function disable() {\n        _locked = queue = [];\n        list = memory = \"\";\n        return this;\n      },\n      disabled: function disabled() {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function lock() {\n        _locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = \"\";\n        }\n\n        return this;\n      },\n      locked: function locked() {\n        return !!_locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function fireWith(context, args) {\n        if (!_locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function fire() {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function fired() {\n        return !!_fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function Deferred(func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n          _state = \"pending\",\n          _promise = {\n        state: function state() {\n          return _state;\n        },\n        always: function always() {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        \"catch\": function _catch(fn) {\n          return _promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function\n          /* fnDone, fnFail, fnProgress */\n        pipe() {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (_i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function then(onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function mightThrow() {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError(\"Thenable self-resolution\");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && ( // Support: Promises/A+ section 2.3.4\n                // https://promisesaplus.com/#point-64\n                // Only check objects and functions for thenability\n                typeof returned === \"object\" || typeof returned === \"function\") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it's otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function promise(obj) {\n          return obj != null ? jQuery.extend(obj, _promise) : _promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        _promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            _state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      _promise.promise(deferred); // Call given func if any\n\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function when(singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = _slice.call(arguments),\n          // the primary Deferred\n      primary = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function updateFunc(i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;\n\n          if (! --remaining) {\n            primary.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (primary.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return primary.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), primary.reject);\n      }\n\n      return primary.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function ready(wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n\n\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener(\"load\", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n\n\n  var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === \"object\") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function fn(elem, _key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(_all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function acceptData(owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function cache(owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function set(owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function get(owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function access(owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function remove(owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there's no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function hasData(owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n\n    if (data === \"false\") {\n      return false;\n    }\n\n    if (data === \"null\") {\n      return null;\n    } // Only convert to a number if it doesn't change the string\n\n\n    if (data === +data + \"\") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function hasData(elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function data(elem, name, _data) {\n      return dataUser.access(elem, name, _data);\n    },\n    removeData: function removeData(elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function _data(elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function _removeData(elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function data(key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (typeof key === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn't exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function removeData(key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function queue(elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function dequeue(elem, type) {\n      type = type || \"fx\";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function next() {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function _queueHooks(elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function queue(type, data) {\n      var setter = 2;\n\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function dequeue(type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function clearQueue(type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function promise(type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function resolve() {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || \"fx\";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n  var documentElement = document.documentElement;\n\n  var isAttached = function isAttached(elem) {\n    return jQuery.contains(elem.ownerDocument, elem);\n  },\n      composed = {\n    composed: true\n  }; // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n  // Check attachment across shadow DOM boundaries when possible (gh-3504)\n  // Support: iOS 10.0-10.2 only\n  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n  // leading to errors. We need to check for `getRootNode`.\n\n\n  if (documentElement.getRootNode) {\n    isAttached = function isAttached(elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n\n  var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, \"\");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n\n    if (display === \"none\") {\n      display = \"block\";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\"; // Remember what we're overwriting\n\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function show() {\n      return showHide(this, true);\n    },\n    hide: function hide() {\n      return showHide(this);\n    },\n    toggle: function toggle(state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i;\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement(\"div\")),\n        input = document.createElement(\"input\"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue; // Support: IE <=9 only\n    // IE <=9 replaces <option> tags with their contents when inserted outside of\n    // the select element.\n\n    div.innerHTML = \"<option></option>\";\n    support.option = !!div.lastChild;\n  })(); // We have to close these tags to support XHTML (#13200)\n\n\n  var wrapMap = {\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  };\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td; // Support: IE <=9 only\n\n  if (!support.option) {\n    wrapMap.optgroup = wrapMap.option = [1, \"<select multiple='multiple'>\", \"</select>\"];\n  }\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        attached,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = \"\";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = \"\";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      attached = isAttached(elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n      if (attached) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  var rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 - 11+\n  // focus() and blur() are asynchronous, except when they are no-op.\n  // So expect focus to be synchronous when the element is already active,\n  // and blur to be synchronous when the element is not already active.\n  // (focus and blur are always synchronous in other supported browsers,\n  // this just defines when we can count on it).\n\n\n  function expectSync(elem, type) {\n    return elem === safeActiveElement() === (type === \"focus\");\n  } // Support: IE <=9 only\n  // Accessing document.activeElement can throw unexpectedly\n  // https://bugs.jquery.com/ticket/13393\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function _on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (typeof types === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        _on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function fn(event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function add(elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Only attach events to objects that accept data\n\n      if (!acceptData(elem)) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element's event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = Object.create(null);\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn); // Init the event handler queue if we're the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element's handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function remove(elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it's no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function dispatch(nativeEvent) {\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          // Make a writable jQuery.Event from the native event object\n      event = jQuery.event.fix(nativeEvent),\n          handlers = (dataPriv.get(this, \"events\") || Object.create(null))[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event's.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function handlers(event, _handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = _handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (#13208)\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = _handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + \" \";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < _handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: _handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function addProp(name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function set(value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function fix(originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function setup(data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Claim the first handler\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            // dataPriv.set( el, \"click\", ... )\n            leverageNative(el, \"click\", returnTrue);\n          } // Return false to allow normal processing in the caller\n\n\n          return false;\n        },\n        trigger: function trigger(data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Force setup before triggering a click\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            leverageNative(el, \"click\");\n          } // Return non-false to allow normal event-path propagation\n\n\n          return true;\n        },\n        // For cross-browser consistency, suppress native .click() on links\n        // Also prevent it if we're currently inside a leveraged native-event stack\n        _default: function _default(event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, \"input\") && dataPriv.get(target, \"click\") || nodeName(target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function postDispatch(event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  }; // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n\n  function leverageNative(el, type, expectSync) {\n    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n    if (!expectSync) {\n      if (dataPriv.get(el, type) === undefined) {\n        jQuery.event.add(el, type, returnTrue);\n      }\n\n      return;\n    } // Register the controller as a special universal handler for all event namespaces\n\n\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function handler(event) {\n        var notAsync,\n            result,\n            saved = dataPriv.get(this, type);\n\n        if (event.isTrigger & 1 && this[type]) {\n          // Interrupt processing of the outer synthetic .trigger()ed event\n          // Saved data should be false in such cases, but might be a leftover capture object\n          // from an async native handler (gh-4350)\n          if (!saved.length) {\n            // Store arguments for use when handling the inner native event\n            // There will always be at least one argument (an event object), so this array\n            // will not be confused with a leftover capture object.\n            saved = _slice.call(arguments);\n            dataPriv.set(this, type, saved); // Trigger the native event and capture its result\n            // Support: IE <=9 - 11+\n            // focus() and blur() are asynchronous\n\n            notAsync = expectSync(this, type);\n            this[type]();\n            result = dataPriv.get(this, type);\n\n            if (saved !== result || notAsync) {\n              dataPriv.set(this, type, false);\n            } else {\n              result = {};\n            }\n\n            if (saved !== result) {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation();\n              event.preventDefault(); // Support: Chrome 86+\n              // In Chrome, if an element having a focusout handler is blurred by\n              // clicking outside of it, it invokes the handler synchronously. If\n              // that handler calls `.remove()` on the element, the data is cleared,\n              // leaving `result` undefined. We need to guard against this.\n\n              return result && result.value;\n            } // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur), assume that the surrogate already propagated from triggering the\n            // native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base), but that seems\n            // less bad than duplication.\n\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          } // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n\n        } else if (saved.length) {\n          // ...and capture the result\n          dataPriv.set(this, type, {\n            value: jQuery.event.trigger( // Support: IE <=9 - 11+\n            // Extend with the prototype to reset the above stopImmediatePropagation()\n            jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)\n          }); // Abort handling of the native event\n\n          event.stopImmediatePropagation();\n        }\n      }\n    });\n  }\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn't have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function preventDefault() {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function stopPropagation() {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function stopImmediatePropagation() {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: true\n  }, jQuery.event.addProp);\n  jQuery.each({\n    focus: \"focusin\",\n    blur: \"focusout\"\n  }, function (type, delegateType) {\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function setup() {\n        // Claim the first handler\n        // dataPriv.set( this, \"focus\", ... )\n        // dataPriv.set( this, \"blur\", ... )\n        leverageNative(this, type, expectSync); // Return false to allow normal processing in the caller\n\n        return false;\n      },\n      trigger: function trigger() {\n        // Force setup before trigger\n        leverageNative(this, type); // Return non-false to allow normal event-path propagation\n\n        return true;\n      },\n      // Suppress native focus or blur as it's already being fired\n      // in leverageNative.\n      _default: function _default() {\n        return true;\n      },\n      delegateType: delegateType\n    };\n  }); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function handle(event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function on(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn);\n    },\n    one: function one(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn, 1);\n    },\n    off: function off(types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (typeof types === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked=\"checked\" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.get(src);\n      events = pdataOld.events;\n\n      if (events) {\n        dataPriv.remove(dest, \"handle events\");\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = flat(args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute(\"nonce\")\n                  }, doc);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function _remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function htmlPrefilter(html) {\n      return html;\n    },\n    clone: function clone(elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = isAttached(elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, \"script\");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function cleanData(elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function detach(selector) {\n      return _remove(this, selector, true);\n    },\n    remove: function remove(selector) {\n      return _remove(this, selector);\n    },\n    text: function text(value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function append() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function prepend() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function before() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function after() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function empty() {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = \"\";\n        }\n      }\n\n      return this;\n    },\n    clone: function clone(dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function html(value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function replaceWith() {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n  var getStyles = function getStyles(elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var swap = function swap(elem, options, callback) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.call(elem); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don't get tricked when zoom affects offsetWidth (gh-4029)\n\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableTrDimensionsVal,\n        reliableMarginLeftVal,\n        container = document.createElement(\"div\"),\n        div = document.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function boxSizingReliable() {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function pixelBoxStyles() {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function pixelPosition() {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function reliableMarginLeft() {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function scrollboxSize() {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      //\n      // Support: Firefox 70+\n      // Only Firefox includes border widths\n      // in computed dimensions. (gh-4529)\n      reliableTrDimensions: function reliableTrDimensions() {\n        var table, tr, trChild, trStyle;\n\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement(\"table\");\n          tr = document.createElement(\"tr\");\n          trChild = document.createElement(\"div\");\n          table.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n          tr.style.cssText = \"border:1px solid\"; // Support: Chrome 86+\n          // Height set through cssText does not get applied.\n          // Computed height then comes back as 0.\n\n          tr.style.height = \"1px\";\n          trChild.style.height = \"9px\"; // Support: Android 8 Chrome 86+\n          // In our bodyBackground.html iframe,\n          // display for all div elements is set to \"inline\",\n          // which causes a problem only in Android 8 Chrome 86.\n          // Ensuring the div is display: block\n          // gets around this issue.\n\n          trChild.style.display = \"block\";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;\n          documentElement.removeChild(table);\n        }\n\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function get() {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n      emptyStyle = document.createElement(\"div\").style,\n      vendorProps = {}; // Return a vendor-prefixed property or undefined\n\n  function vendorPropName(name) {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n\n\n  function finalPropName(name) {\n    var final = jQuery.cssProps[name] || vendorProps[name];\n\n    if (final) {\n      return final;\n    }\n\n    if (name in emptyStyle) {\n      return name;\n    }\n\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n\n  var // Swappable if display is none or starts with table\n  // except \"table\", \"table-cell\", or \"table-caption\"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: \"absolute\",\n    visibility: \"hidden\",\n    display: \"block\"\n  },\n      cssNormalTransform = {\n    letterSpacing: \"0\",\n    fontWeight: \"400\"\n  };\n\n  function setPositiveNumber(_elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === \"margin\") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // For \"border\" or \"margin\", add border\n\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        } // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        } // For \"content\" or \"padding\", subtract border\n\n\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5 // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964)\n      )) || 0;\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n    // Fake content-box until we know it's needed to know the true value.\n    boxSizingNeeded = !support.boxSizingReliable() || extra,\n        isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n        valueIsBorderBox = isBorderBox,\n        val = curCSS(elem, dimension, styles),\n        offsetProp = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1); // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = \"auto\";\n    } // Support: IE 9 - 11 only\n    // Use offsetWidth/offsetHeight for when box sizing is unreliable.\n    // In those cases, the computed value can be trusted to be border-box.\n\n\n    if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+\n    // IE/Edge misreport `getComputedStyle` of table rows with width/height\n    // set in CSS while `offset*` properties report correct values.\n    // Interestingly, in some cases IE 9 doesn't suffer from this issue.\n    !support.reliableTrDimensions() && nodeName(elem, \"tr\") || // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    val === \"auto\" || // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n    !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") && // Make sure the element is visible & connected\n    elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\"; // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n\n      valueIsBorderBox = offsetProp in elem;\n\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    } // Normalize \"\" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element's box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function get(elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"gridArea\": true,\n      \"gridColumn\": true,\n      \"gridColumnEnd\": true,\n      \"gridColumnStart\": true,\n      \"gridRow\": true,\n      \"gridRowEnd\": true,\n      \"gridRowStart\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function style(elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we're working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n      if (value !== undefined) {\n        type = typeof value; // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = \"number\";\n        } // Make sure that null and NaN values aren't set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // \"px\" to a few hardcoded values.\n\n\n        if (type === \"number\" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        } // background-* props affect original clone's values\n\n\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function css(elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert \"normal\" to computed value\n\n\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (_i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function get(elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && ( // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function set(elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            // Only read styles.position if the test has a chance to fail\n        // to avoid forcing a reflow.\n        scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === \"absolute\",\n            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n        boxSizingNeeded = scrollboxSizeBuggy || extra,\n            isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0; // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function expand(value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function css(name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function init(elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function cur() {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function run(percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function get(tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, \"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\n\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function set(tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function set(tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function linear(p) {\n      return p;\n    },\n    swing: function swing(p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = \"width\" in props || \"height\" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, \"fxshow\"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict \"overflow\" and \"display\" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n\n      display = jQuery.css(elem, \"display\");\n\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n\n          style.display = \"inline-block\";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, \"fxshow\");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don't match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function tick() {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function createTween(prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function stop(gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function tweener(props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function prefilter(callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> \"fx\"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function fadeTo(speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function animate(prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function doAnimation() {\n        // Operate on a copy of prop so per-property easing won't be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, \"finish\")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function stop(type, clearQueue, gotoEnd) {\n      var stopQueue = function stopQueue(hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue) {\n        this.queue(type || \"fx\", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + \"queueHooks\",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function finish(type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + \"queue\"],\n            hooks = data[type + \"queueHooks\"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (_i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement(\"input\"),\n        select = document.createElement(\"select\"),\n        opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n\n    support.checkOn = input.value !== \"\"; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function attr(name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function removeAttr(name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function attr(elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function set(elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function removeAttr(elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function set(elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (_i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function prop(name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function removeProp(name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function prop(elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function get(elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function get(elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function set(elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function addClass(value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                cur += clazz + \" \";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function removeClass(value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n                cur = cur.replace(\" \" + clazz + \" \", \" \");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function toggleClass(value, stateVal) {\n      var type = typeof value,\n          isValidValue = type === \"string\" || Array.isArray(value);\n\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          } // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function hasClass(selector) {\n      var className,\n          elem,\n          i = 0;\n      className = \" \" + selector + \" \";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function val(value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? \"\" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as \"\"; convert numbers to string\n\n\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function get(elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function get(elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === \"select-one\",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don't need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function set(elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function set(elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = \"onfocusin\" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function stopPropagationCallback(e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function trigger(event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, \"type\") ? event.type : event,\n          namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, \"events\") || Object.create(null))[event.type] && dataPriv.get(cur, \"handle\");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function simulate(type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function trigger(type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function triggerHandler(type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn't have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: \"focusin\",\n      blur: \"focusout\"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function handler(event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function setup() {\n          // Handle: regular nodes (via `this.ownerDocument`), window\n          // (via `this.document`) & document (via `this`).\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function teardown() {\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = {\n    guid: Date.now()\n  };\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml, parserErrorElem;\n\n    if (!data || typeof data !== \"string\") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {}\n\n    parserErrorElem = xml && xml.getElementsByTagName(\"parsererror\")[0];\n\n    if (!xml || parserErrorElem) {\n      jQuery.error(\"Invalid XML: \" + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function (el) {\n        return el.textContent;\n      }).join(\"\\n\") : data));\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function add(key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    };\n\n    if (a == null) {\n      return \"\";\n    } // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join(\"&\");\n  };\n\n  jQuery.fn.extend({\n    serialize: function serialize() {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function serializeArray() {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (_i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol \"*\" can be used\n   * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol \"*\" can be used\n   * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = \"*/\".concat(\"*\"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  } // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    } // Check if we're dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function ajaxSetup(target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function ajax(url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === \"object\") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks(\"once memory\"),\n          // Status-dependent callbacks\n      _statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = \"canceled\",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function getResponseHeader(key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase() + \" \"] = (responseHeaders[match[1].toLowerCase() + \" \"] || []).concat(match[2]);\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase() + \" \"];\n          }\n\n          return match == null ? null : match.join(\", \");\n        },\n        // Raw string\n        getAllResponseHeaders: function getAllResponseHeaders() {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function setRequestHeader(name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function overrideMimeType(type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function statusCode(map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                _statusCode[code] = [_statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function abort(statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"]; // A cross-domain request is in order when the origin doesn't match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, \"\"); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce.guid++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = \"abort\"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || \"\"; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Use a noop converter for missing script but not if jsonp\n\n\n        if (!isSuccess && jQuery.inArray(\"script\", s.dataTypes) > -1 && jQuery.inArray(\"json\", s.dataTypes) < 0) {\n          s.converters[\"text script\"] = function () {};\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader(\"etag\");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\"; // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\"; // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = \"error\";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(_statusCode);\n        _statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function getJSON(url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function getScript(url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (_i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n  jQuery.ajaxPrefilter(function (s) {\n    var i;\n\n    for (i in s.headers) {\n      if (i.toLowerCase() === \"content-type\") {\n        s.contentType = s.headers[i] || \"\";\n      }\n    }\n  });\n\n  jQuery._evalUrl = function (url, options, doc) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126)\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        \"text script\": function textScript() {}\n      },\n      dataFilter: function dataFilter(response) {\n        jQuery.globalEval(response, options, doc);\n      }\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function wrapAll(html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function wrapInner(html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function wrap(html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function unwrap(selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var _callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function send(headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n\n\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          _callback = function callback(type) {\n            return function () {\n              if (_callback) {\n                _callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = _callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = _callback(\"error\"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (_callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          _callback = _callback(\"abort\");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (_callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function abort() {\n          if (_callback) {\n            _callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function textScript(text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache's special case and crossDomain\n\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, _callback2;\n\n      return {\n        send: function send(_, complete) {\n          script = jQuery(\"<script>\").attr(s.scriptAttrs || {}).prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", _callback2 = function callback(evt) {\n            script.remove();\n            _callback2 = null;\n\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function abort() {\n          if (_callback2) {\n            _callback2();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function jsonpCallback() {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = \"json\"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return \"script\";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }(); // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(\" \");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it's a function\n\n\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  };\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function setOffset(elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, \"position\"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function offset(options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function position() {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function offsetParent() {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each([\"top\", \"left\"], function (_i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n            extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (_i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n  jQuery.fn.extend({\n    bind: function bind(types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function unbind(types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function delegate(selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function undelegate(selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    },\n    hover: function hover(fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (_i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  }); // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g; // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = _slice.call(arguments, 2);\n\n    proxy = function proxy() {\n      return fn.apply(context || this, args.concat(_slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") && // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  };\n\n  jQuery.trim = function (text) {\n    return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (typeof define === \"function\" && define.amd) {\n    define(\"jquery\", [], function () {\n      return jQuery;\n    });\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (typeof noGlobal === \"undefined\") {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});","/*! DataTables Bootstrap 4 integration\n * ©2011-2017 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * DataTables integration for Bootstrap 4. This requires Bootstrap 4 and\n * DataTables 1.10 or newer.\n *\n * This file sets the defaults and adds options to DataTables to style its\n * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap\n * for further information.\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        // Require DataTables, which attaches to jQuery, including\n        // jQuery if needed and have a $ property so we can access the\n        // jQuery object that is used\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable;\n  /* Set the defaults for DataTables initialisation */\n\n  $.extend(true, DataTable.defaults, {\n    dom: \"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>\" + \"<'row'<'col-sm-12'tr>>\" + \"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\n    renderer: 'bootstrap'\n  });\n  /* Default class modification */\n\n  $.extend(DataTable.ext.classes, {\n    sWrapper: \"dataTables_wrapper dt-bootstrap4\",\n    sFilterInput: \"form-control form-control-sm\",\n    sLengthSelect: \"custom-select custom-select-sm form-control form-control-sm\",\n    sProcessing: \"dataTables_processing card\",\n    sPageButton: \"paginate_button page-item\"\n  });\n  /* Bootstrap paging button renderer */\n\n  DataTable.ext.renderer.pageButton.bootstrap = function (settings, host, idx, buttons, page, pages) {\n    var api = new DataTable.Api(settings);\n    var classes = settings.oClasses;\n    var lang = settings.oLanguage.oPaginate;\n    var aria = settings.oLanguage.oAria.paginate || {};\n    var btnDisplay,\n        btnClass,\n        counter = 0;\n\n    var attach = function attach(container, buttons) {\n      var i, ien, node, button;\n\n      var clickHandler = function clickHandler(e) {\n        e.preventDefault();\n\n        if (!$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action) {\n          api.page(e.data.action).draw('page');\n        }\n      };\n\n      for (i = 0, ien = buttons.length; i < ien; i++) {\n        button = buttons[i];\n\n        if (Array.isArray(button)) {\n          attach(container, button);\n        } else {\n          btnDisplay = '';\n          btnClass = '';\n\n          switch (button) {\n            case 'ellipsis':\n              btnDisplay = '&#x2026;';\n              btnClass = 'disabled';\n              break;\n\n            case 'first':\n              btnDisplay = lang.sFirst;\n              btnClass = button + (page > 0 ? '' : ' disabled');\n              break;\n\n            case 'previous':\n              btnDisplay = lang.sPrevious;\n              btnClass = button + (page > 0 ? '' : ' disabled');\n              break;\n\n            case 'next':\n              btnDisplay = lang.sNext;\n              btnClass = button + (page < pages - 1 ? '' : ' disabled');\n              break;\n\n            case 'last':\n              btnDisplay = lang.sLast;\n              btnClass = button + (page < pages - 1 ? '' : ' disabled');\n              break;\n\n            default:\n              btnDisplay = button + 1;\n              btnClass = page === button ? 'active' : '';\n              break;\n          }\n\n          if (btnDisplay) {\n            node = $('<li>', {\n              'class': classes.sPageButton + ' ' + btnClass,\n              'id': idx === 0 && typeof button === 'string' ? settings.sTableId + '_' + button : null\n            }).append($('<a>', {\n              'href': '#',\n              'aria-controls': settings.sTableId,\n              'aria-label': aria[button],\n              'data-dt-idx': counter,\n              'tabindex': settings.iTabIndex,\n              'class': 'page-link'\n            }).html(btnDisplay)).appendTo(container);\n\n            settings.oApi._fnBindAction(node, {\n              action: button\n            }, clickHandler);\n\n            counter++;\n          }\n        }\n      }\n    }; // IE9 throws an 'unknown error' if document.activeElement is used\n    // inside an iframe or frame. \n\n\n    var activeEl;\n\n    try {\n      // Because this approach is destroying and recreating the paging\n      // elements, focus is lost on the select button which is bad for\n      // accessibility. So we want to restore focus once the draw has\n      // completed\n      activeEl = $(host).find(document.activeElement).data('dt-idx');\n    } catch (e) {}\n\n    attach($(host).empty().html('<ul class=\"pagination\"/>').children('ul'), buttons);\n\n    if (activeEl !== undefined) {\n      $(host).find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n    }\n  };\n\n  return DataTable;\n});","/*! DataTables 1.11.3\n * ©2008-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.11.3\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n(function (factory) {\n  \"use strict\";\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        // CommonJS environments without a window global must pass a\n        // root. This will give an error otherwise\n        root = window;\n      }\n\n      if (!$) {\n        $ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n        require('jquery') : require('jquery')(root);\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    window.DataTable = factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  \"use strict\";\n  /**\n   * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n   * flexible tool, based upon the foundations of progressive enhancement,\n   * which will add advanced interaction controls to any HTML table. For a\n   * full list of features please refer to\n   * [DataTables.net](href=\"http://datatables.net).\n   *\n   * Note that the `DataTable` object is not a global variable but is aliased\n   * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n   * be  accessed.\n   *\n   *  @class\n   *  @param {object} [init={}] Configuration object for DataTables. Options\n   *    are defined by {@link DataTable.defaults}\n   *  @requires jQuery 1.7+\n   *\n   *  @example\n   *    // Basic initialisation\n   *    $(document).ready( function {\n   *      $('#example').dataTable();\n   *    } );\n   *\n   *  @example\n   *    // Initialisation with configuration options - in this case, disable\n   *    // pagination and sorting.\n   *    $(document).ready( function {\n   *      $('#example').dataTable( {\n   *        \"paginate\": false,\n   *        \"sort\": false\n   *      } );\n   *    } );\n   */\n\n  var DataTable = function DataTable(selector, options) {\n    // When creating with `new`, create a new DataTable, returning the API instance\n    if (this instanceof DataTable) {\n      return $(selector).DataTable(options);\n    } else {\n      // Argument switching\n      options = selector;\n    }\n    /**\n     * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n     * return the resulting jQuery object.\n     *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n     *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n     *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n     *    criterion (\"applied\") or all TR elements (i.e. no filter).\n     *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n     *    Can be either 'current', whereby the current sorting of the table is used, or\n     *    'original' whereby the original order the data was read into the table is used.\n     *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n     *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n     *    'current' and filter is 'applied', regardless of what they might be given as.\n     *  @returns {object} jQuery object, filtered by the given selector.\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Highlight every second row\n     *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n     *    } );\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Filter to rows with 'Webkit' in them, add a background colour and then\n     *      // remove the filter, thus highlighting the 'Webkit' rows only.\n     *      oTable.fnFilter('Webkit');\n     *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n     *      oTable.fnFilter('');\n     *    } );\n     */\n\n\n    this.$ = function (sSelector, oOpts) {\n      return this.api(true).$(sSelector, oOpts);\n    };\n    /**\n     * Almost identical to $ in operation, but in this case returns the data for the matched\n     * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n     * rather than any descendants, so the data can be obtained for the row/cell. If matching\n     * rows are found, the data returned is the original data array/object that was used to\n     * create the row (or a generated array if from a DOM source).\n     *\n     * This method is often useful in-combination with $ where both functions are given the\n     * same parameters and the array indexes will match identically.\n     *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n     *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n     *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n     *    criterion (\"applied\") or all elements (i.e. no filter).\n     *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n     *    Can be either 'current', whereby the current sorting of the table is used, or\n     *    'original' whereby the original order the data was read into the table is used.\n     *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n     *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n     *    'current' and filter is 'applied', regardless of what they might be given as.\n     *  @returns {array} Data for the matched elements. If any elements, as a result of the\n     *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n     *    entry in the array.\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Get the data from the first row in the table\n     *      var data = oTable._('tr:first');\n     *\n     *      // Do something useful with the data\n     *      alert( \"First cell is: \"+data[0] );\n     *    } );\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Filter to 'Webkit' and get all data for\n     *      oTable.fnFilter('Webkit');\n     *      var data = oTable._('tr', {\"search\": \"applied\"});\n     *\n     *      // Do something with the data\n     *      alert( data.length+\" rows matched the search\" );\n     *    } );\n     */\n\n\n    this._ = function (sSelector, oOpts) {\n      return this.api(true).rows(sSelector, oOpts).data();\n    };\n    /**\n     * Create a DataTables Api instance, with the currently selected tables for\n     * the Api's context.\n     * @param {boolean} [traditional=false] Set the API instance's context to be\n     *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n     *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n     *   or if all tables captured in the jQuery object should be used.\n     * @return {DataTables.Api}\n     */\n\n\n    this.api = function (traditional) {\n      return traditional ? new _Api2(_fnSettingsFromNode(this[_ext.iApiIndex])) : new _Api2(this);\n    };\n    /**\n     * Add a single new row or multiple rows of data to the table. Please note\n     * that this is suitable for client-side processing only - if you are using\n     * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n     * must add it to the data source, i.e. the server-side, through an Ajax call.\n     *  @param {array|object} data The data to be added to the table. This can be:\n     *    <ul>\n     *      <li>1D array of data - add a single row with the data provided</li>\n     *      <li>2D array of arrays - add multiple rows in a single call</li>\n     *      <li>object - data object when using <i>mData</i></li>\n     *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n     *    </ul>\n     *  @param {bool} [redraw=true] redraw the table or not\n     *  @returns {array} An array of integers, representing the list of indexes in\n     *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n     *    the table.\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    // Global var for counter\n     *    var giCount = 2;\n     *\n     *    $(document).ready(function() {\n     *      $('#example').dataTable();\n     *    } );\n     *\n     *    function fnClickAddRow() {\n     *      $('#example').dataTable().fnAddData( [\n     *        giCount+\".1\",\n     *        giCount+\".2\",\n     *        giCount+\".3\",\n     *        giCount+\".4\" ]\n     *      );\n     *\n     *      giCount++;\n     *    }\n     */\n\n\n    this.fnAddData = function (data, redraw) {\n      var api = this.api(true);\n      /* Check if we want to add multiple rows or not */\n\n      var rows = Array.isArray(data) && (Array.isArray(data[0]) || $.isPlainObject(data[0])) ? api.rows.add(data) : api.row.add(data);\n\n      if (redraw === undefined || redraw) {\n        api.draw();\n      }\n\n      return rows.flatten().toArray();\n    };\n    /**\n     * This function will make DataTables recalculate the column sizes, based on the data\n     * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n     * through the sWidth parameter). This can be useful when the width of the table's\n     * parent element changes (for example a window resize).\n     *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable( {\n     *        \"sScrollY\": \"200px\",\n     *        \"bPaginate\": false\n     *      } );\n     *\n     *      $(window).on('resize', function () {\n     *        oTable.fnAdjustColumnSizing();\n     *      } );\n     *    } );\n     */\n\n\n    this.fnAdjustColumnSizing = function (bRedraw) {\n      var api = this.api(true).columns.adjust();\n      var settings = api.settings()[0];\n      var scroll = settings.oScroll;\n\n      if (bRedraw === undefined || bRedraw) {\n        api.draw(false);\n      } else if (scroll.sX !== \"\" || scroll.sY !== \"\") {\n        /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n        _fnScrollDraw(settings);\n      }\n    };\n    /**\n     * Quickly and simply clear a table\n     *  @param {bool} [bRedraw=true] redraw the table or not\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n     *      oTable.fnClearTable();\n     *    } );\n     */\n\n\n    this.fnClearTable = function (bRedraw) {\n      var api = this.api(true).clear();\n\n      if (bRedraw === undefined || bRedraw) {\n        api.draw();\n      }\n    };\n    /**\n     * The exact opposite of 'opening' a row, this function will close any rows which\n     * are currently 'open'.\n     *  @param {node} nTr the table row to 'close'\n     *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable;\n     *\n     *      // 'open' an information row when a row is clicked on\n     *      $('#example tbody tr').click( function () {\n     *        if ( oTable.fnIsOpen(this) ) {\n     *          oTable.fnClose( this );\n     *        } else {\n     *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n     *        }\n     *      } );\n     *\n     *      oTable = $('#example').dataTable();\n     *    } );\n     */\n\n\n    this.fnClose = function (nTr) {\n      this.api(true).row(nTr).child.hide();\n    };\n    /**\n     * Remove a row for the table\n     *  @param {mixed} target The index of the row from aoData to be deleted, or\n     *    the TR element you want to delete\n     *  @param {function|null} [callBack] Callback function\n     *  @param {bool} [redraw=true] Redraw the table or not\n     *  @returns {array} The row that was deleted\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Immediately remove the first row\n     *      oTable.fnDeleteRow( 0 );\n     *    } );\n     */\n\n\n    this.fnDeleteRow = function (target, callback, redraw) {\n      var api = this.api(true);\n      var rows = api.rows(target);\n      var settings = rows.settings()[0];\n      var data = settings.aoData[rows[0][0]];\n      rows.remove();\n\n      if (callback) {\n        callback.call(this, settings, data);\n      }\n\n      if (redraw === undefined || redraw) {\n        api.draw();\n      }\n\n      return data;\n    };\n    /**\n     * Restore the table to it's original state in the DOM by removing all of DataTables\n     * enhancements, alterations to the DOM structure of the table and event listeners.\n     *  @param {boolean} [remove=false] Completely remove the table from the DOM\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n     *      var oTable = $('#example').dataTable();\n     *      oTable.fnDestroy();\n     *    } );\n     */\n\n\n    this.fnDestroy = function (remove) {\n      this.api(true).destroy(remove);\n    };\n    /**\n     * Redraw the table\n     *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n     *      oTable.fnDraw();\n     *    } );\n     */\n\n\n    this.fnDraw = function (complete) {\n      // Note that this isn't an exact match to the old call to _fnDraw - it takes\n      // into account the new data, but can hold position.\n      this.api(true).draw(complete);\n    };\n    /**\n     * Filter the input based on data\n     *  @param {string} sInput String to filter the table on\n     *  @param {int|null} [iColumn] Column to limit filtering to\n     *  @param {bool} [bRegex=false] Treat as regular expression or not\n     *  @param {bool} [bSmart=true] Perform smart filtering or not\n     *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n     *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Sometime later - filter...\n     *      oTable.fnFilter( 'test string' );\n     *    } );\n     */\n\n\n    this.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {\n      var api = this.api(true);\n\n      if (iColumn === null || iColumn === undefined) {\n        api.search(sInput, bRegex, bSmart, bCaseInsensitive);\n      } else {\n        api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);\n      }\n\n      api.draw();\n    };\n    /**\n     * Get the data for the whole table, an individual row or an individual cell based on the\n     * provided parameters.\n     *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n     *    a TR node then the data source for the whole row will be returned. If given as a\n     *    TD/TH cell node then iCol will be automatically calculated and the data for the\n     *    cell returned. If given as an integer, then this is treated as the aoData internal\n     *    data index for the row (see fnGetPosition) and the data for that row used.\n     *  @param {int} [col] Optional column index that you want the data of.\n     *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n     *    returned. If mRow is defined, just data for that row, and is iCol is\n     *    defined, only data for the designated cell is returned.\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    // Row data\n     *    $(document).ready(function() {\n     *      oTable = $('#example').dataTable();\n     *\n     *      oTable.$('tr').click( function () {\n     *        var data = oTable.fnGetData( this );\n     *        // ... do something with the array / object of data for the row\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Individual cell data\n     *    $(document).ready(function() {\n     *      oTable = $('#example').dataTable();\n     *\n     *      oTable.$('td').click( function () {\n     *        var sData = oTable.fnGetData( this );\n     *        alert( 'The cell clicked on had the value of '+sData );\n     *      } );\n     *    } );\n     */\n\n\n    this.fnGetData = function (src, col) {\n      var api = this.api(true);\n\n      if (src !== undefined) {\n        var type = src.nodeName ? src.nodeName.toLowerCase() : '';\n        return col !== undefined || type == 'td' || type == 'th' ? api.cell(src, col).data() : api.row(src).data() || null;\n      }\n\n      return api.data().toArray();\n    };\n    /**\n     * Get an array of the TR nodes that are used in the table's body. Note that you will\n     * typically want to use the '$' API method in preference to this as it is more\n     * flexible.\n     *  @param {int} [iRow] Optional row index for the TR element you want\n     *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n     *    in the table's body, or iRow is defined, just the TR element requested.\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Get the nodes from the table\n     *      var nNodes = oTable.fnGetNodes( );\n     *    } );\n     */\n\n\n    this.fnGetNodes = function (iRow) {\n      var api = this.api(true);\n      return iRow !== undefined ? api.row(iRow).node() : api.rows().nodes().flatten().toArray();\n    };\n    /**\n     * Get the array indexes of a particular cell from it's DOM element\n     * and column index including hidden columns\n     *  @param {node} node this can either be a TR, TD or TH in the table's body\n     *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n     *    if given as a cell, an array of [row index, column index (visible),\n     *    column index (all)] is given.\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      $('#example tbody td').click( function () {\n     *        // Get the position of the current data from the node\n     *        var aPos = oTable.fnGetPosition( this );\n     *\n     *        // Get the data array for this row\n     *        var aData = oTable.fnGetData( aPos[0] );\n     *\n     *        // Update the data array and return the value\n     *        aData[ aPos[1] ] = 'clicked';\n     *        this.innerHTML = 'clicked';\n     *      } );\n     *\n     *      // Init DataTables\n     *      oTable = $('#example').dataTable();\n     *    } );\n     */\n\n\n    this.fnGetPosition = function (node) {\n      var api = this.api(true);\n      var nodeName = node.nodeName.toUpperCase();\n\n      if (nodeName == 'TR') {\n        return api.row(node).index();\n      } else if (nodeName == 'TD' || nodeName == 'TH') {\n        var cell = api.cell(node).index();\n        return [cell.row, cell.columnVisible, cell.column];\n      }\n\n      return null;\n    };\n    /**\n     * Check to see if a row is 'open' or not.\n     *  @param {node} nTr the table row to check\n     *  @returns {boolean} true if the row is currently open, false otherwise\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable;\n     *\n     *      // 'open' an information row when a row is clicked on\n     *      $('#example tbody tr').click( function () {\n     *        if ( oTable.fnIsOpen(this) ) {\n     *          oTable.fnClose( this );\n     *        } else {\n     *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n     *        }\n     *      } );\n     *\n     *      oTable = $('#example').dataTable();\n     *    } );\n     */\n\n\n    this.fnIsOpen = function (nTr) {\n      return this.api(true).row(nTr).child.isShown();\n    };\n    /**\n     * This function will place a new row directly after a row which is currently\n     * on display on the page, with the HTML contents that is passed into the\n     * function. This can be used, for example, to ask for confirmation that a\n     * particular record should be deleted.\n     *  @param {node} nTr The table row to 'open'\n     *  @param {string|node|jQuery} mHtml The HTML to put into the row\n     *  @param {string} sClass Class to give the new TD cell\n     *  @returns {node} The row opened. Note that if the table row passed in as the\n     *    first parameter, is not found in the table, this method will silently\n     *    return.\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable;\n     *\n     *      // 'open' an information row when a row is clicked on\n     *      $('#example tbody tr').click( function () {\n     *        if ( oTable.fnIsOpen(this) ) {\n     *          oTable.fnClose( this );\n     *        } else {\n     *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n     *        }\n     *      } );\n     *\n     *      oTable = $('#example').dataTable();\n     *    } );\n     */\n\n\n    this.fnOpen = function (nTr, mHtml, sClass) {\n      return this.api(true).row(nTr).child(mHtml, sClass).show().child()[0];\n    };\n    /**\n     * Change the pagination - provides the internal logic for pagination in a simple API\n     * function. With this function you can have a DataTables table go to the next,\n     * previous, first or last pages.\n     *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n     *    or page number to jump to (integer), note that page 0 is the first page.\n     *  @param {bool} [bRedraw=true] Redraw the table or not\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *      oTable.fnPageChange( 'next' );\n     *    } );\n     */\n\n\n    this.fnPageChange = function (mAction, bRedraw) {\n      var api = this.api(true).page(mAction);\n\n      if (bRedraw === undefined || bRedraw) {\n        api.draw(false);\n      }\n    };\n    /**\n     * Show a particular column\n     *  @param {int} iCol The column whose display should be changed\n     *  @param {bool} bShow Show (true) or hide (false) the column\n     *  @param {bool} [bRedraw=true] Redraw the table or not\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Hide the second column after initialisation\n     *      oTable.fnSetColumnVis( 1, false );\n     *    } );\n     */\n\n\n    this.fnSetColumnVis = function (iCol, bShow, bRedraw) {\n      var api = this.api(true).column(iCol).visible(bShow);\n\n      if (bRedraw === undefined || bRedraw) {\n        api.columns.adjust().draw();\n      }\n    };\n    /**\n     * Get the settings for a particular table for external manipulation\n     *  @returns {object} DataTables settings object. See\n     *    {@link DataTable.models.oSettings}\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *      var oSettings = oTable.fnSettings();\n     *\n     *      // Show an example parameter from the settings\n     *      alert( oSettings._iDisplayStart );\n     *    } );\n     */\n\n\n    this.fnSettings = function () {\n      return _fnSettingsFromNode(this[_ext.iApiIndex]);\n    };\n    /**\n     * Sort the table by a particular column\n     *  @param {int} iCol the data index to sort on. Note that this will not match the\n     *    'display index' if you have hidden data entries\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Sort immediately with columns 0 and 1\n     *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n     *    } );\n     */\n\n\n    this.fnSort = function (aaSort) {\n      this.api(true).order(aaSort).draw();\n    };\n    /**\n     * Attach a sort listener to an element for a given column\n     *  @param {node} nNode the element to attach the sort listener to\n     *  @param {int} iColumn the column that a click on this node will sort on\n     *  @param {function} [fnCallback] callback function when sort is run\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *\n     *      // Sort on column 1, when 'sorter' is clicked on\n     *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n     *    } );\n     */\n\n\n    this.fnSortListener = function (nNode, iColumn, fnCallback) {\n      this.api(true).order.listener(nNode, iColumn, fnCallback);\n    };\n    /**\n     * Update a table cell or row - this method will accept either a single value to\n     * update the cell with, an array of values with one element for each column or\n     * an object in the same format as the original data source. The function is\n     * self-referencing in order to make the multi column updates easier.\n     *  @param {object|array|string} mData Data to update the cell/row with\n     *  @param {node|int} mRow TR element you want to update or the aoData index\n     *  @param {int} [iColumn] The column to update, give as null or undefined to\n     *    update a whole row.\n     *  @param {bool} [bRedraw=true] Redraw the table or not\n     *  @param {bool} [bAction=true] Perform pre-draw actions or not\n     *  @returns {int} 0 on success, 1 on error\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n     *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n     *    } );\n     */\n\n\n    this.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction) {\n      var api = this.api(true);\n\n      if (iColumn === undefined || iColumn === null) {\n        api.row(mRow).data(mData);\n      } else {\n        api.cell(mRow, iColumn).data(mData);\n      }\n\n      if (bAction === undefined || bAction) {\n        api.columns.adjust();\n      }\n\n      if (bRedraw === undefined || bRedraw) {\n        api.draw();\n      }\n\n      return 0;\n    };\n    /**\n     * Provide a common method for plug-ins to check the version of DataTables being used, in order\n     * to ensure compatibility.\n     *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n     *    formats \"X\" and \"X.Y\" are also acceptable.\n     *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n     *    version, or false if this version of DataTales is not suitable\n     *  @method\n     *  @dtopt API\n     *  @deprecated Since v1.10\n     *\n     *  @example\n     *    $(document).ready(function() {\n     *      var oTable = $('#example').dataTable();\n     *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n     *    } );\n     */\n\n\n    this.fnVersionCheck = _ext.fnVersionCheck;\n\n    var _that = this;\n\n    var emptyInit = options === undefined;\n    var len = this.length;\n\n    if (emptyInit) {\n      options = {};\n    }\n\n    this.oApi = this.internal = _ext.internal; // Extend with old style plug-in API methods\n\n    for (var fn in DataTable.ext.internal) {\n      if (fn) {\n        this[fn] = _fnExternApiFunc(fn);\n      }\n    }\n\n    this.each(function () {\n      // For each initialisation we want to give it a clean initialisation\n      // object that can be bashed around\n      var o = {};\n      var oInit = len > 1 ? // optimisation for single table case\n      _fnExtend(o, options, true) : options;\n      /*global oInit,_that,emptyInit*/\n\n      var i = 0,\n          iLen,\n          j,\n          jLen,\n          k,\n          kLen;\n      var sId = this.getAttribute('id');\n      var bInitHandedOff = false;\n      var defaults = DataTable.defaults;\n      var $this = $(this);\n      /* Sanity check */\n\n      if (this.nodeName.toLowerCase() != 'table') {\n        _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n\n        return;\n      }\n      /* Backwards compatibility for the defaults */\n\n\n      _fnCompatOpts(defaults);\n\n      _fnCompatCols(defaults.column);\n      /* Convert the camel-case defaults to Hungarian */\n\n\n      _fnCamelToHungarian(defaults, defaults, true);\n\n      _fnCamelToHungarian(defaults.column, defaults.column, true);\n      /* Setting up the initialisation object */\n\n\n      _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()), true);\n      /* Check to see if we are re-initialising a table */\n\n\n      var allSettings = DataTable.settings;\n\n      for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n        var s = allSettings[i];\n        /* Base check on table node */\n\n        if (s.nTable == this || s.nTHead && s.nTHead.parentNode == this || s.nTFoot && s.nTFoot.parentNode == this) {\n          var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n          var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n          if (emptyInit || bRetrieve) {\n            return s.oInstance;\n          } else if (bDestroy) {\n            s.oInstance.fnDestroy();\n            break;\n          } else {\n            _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n\n            return;\n          }\n        }\n        /* If the element we are initialising has the same ID as a table which was previously\n         * initialised, but the table nodes don't match (from before) then we destroy the old\n         * instance by simply deleting it. This is under the assumption that the table has been\n         * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n         */\n\n\n        if (s.sTableId == this.id) {\n          allSettings.splice(i, 1);\n          break;\n        }\n      }\n      /* Ensure the table has an ID - required for accessibility */\n\n\n      if (sId === null || sId === \"\") {\n        sId = \"DataTables_Table_\" + DataTable.ext._unique++;\n        this.id = sId;\n      }\n      /* Create the settings object for this table and set some of the default parameters */\n\n\n      var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n        \"sDestroyWidth\": $this[0].style.width,\n        \"sInstance\": sId,\n        \"sTableId\": sId\n      });\n      oSettings.nTable = this;\n      oSettings.oApi = _that.internal;\n      oSettings.oInit = oInit;\n      allSettings.push(oSettings); // Need to add the instance after the instance after the settings object has been added\n      // to the settings array, so we can self reference the table instance if more than one\n\n      oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable(); // Backwards compatibility, before we apply all the defaults\n\n      _fnCompatOpts(oInit);\n\n      _fnLanguageCompat(oInit.oLanguage); // If the length menu is given, but the init display length is not, use the length menu\n\n\n      if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n        oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n      } // Apply the defaults and init options to make a single init object will all\n      // options defined from defaults and instance options.\n\n\n      oInit = _fnExtend($.extend(true, {}, defaults), oInit); // Map the initialisation options onto the settings object\n\n      _fnMap(oSettings.oFeatures, oInit, [\"bPaginate\", \"bLengthChange\", \"bFilter\", \"bSort\", \"bSortMulti\", \"bInfo\", \"bProcessing\", \"bAutoWidth\", \"bSortClasses\", \"bServerSide\", \"bDeferRender\"]);\n\n      _fnMap(oSettings, oInit, [\"asStripeClasses\", \"ajax\", \"fnServerData\", \"fnFormatNumber\", \"sServerMethod\", \"aaSorting\", \"aaSortingFixed\", \"aLengthMenu\", \"sPaginationType\", \"sAjaxSource\", \"sAjaxDataProp\", \"iStateDuration\", \"sDom\", \"bSortCellsTop\", \"iTabIndex\", \"fnStateLoadCallback\", \"fnStateSaveCallback\", \"renderer\", \"searchDelay\", \"rowId\", [\"iCookieDuration\", \"iStateDuration\"], // backwards compat\n      [\"oSearch\", \"oPreviousSearch\"], [\"aoSearchCols\", \"aoPreSearchCols\"], [\"iDisplayLength\", \"_iDisplayLength\"]]);\n\n      _fnMap(oSettings.oScroll, oInit, [[\"sScrollX\", \"sX\"], [\"sScrollXInner\", \"sXInner\"], [\"sScrollY\", \"sY\"], [\"bScrollCollapse\", \"bCollapse\"]]);\n\n      _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n      /* Callback functions which are array driven */\n\n\n      _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');\n\n      _fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');\n\n      _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');\n\n      _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');\n\n      _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');\n\n      _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');\n\n      _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');\n\n      _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');\n\n      _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');\n\n      _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');\n\n      _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');\n\n      oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n      /* Browser support detection */\n\n      _fnBrowserDetect(oSettings);\n\n      var oClasses = oSettings.oClasses;\n      $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n      $this.addClass(oClasses.sTable);\n\n      if (oSettings.iInitDisplayStart === undefined) {\n        /* Display start point, taking into account the save saving */\n        oSettings.iInitDisplayStart = oInit.iDisplayStart;\n        oSettings._iDisplayStart = oInit.iDisplayStart;\n      }\n\n      if (oInit.iDeferLoading !== null) {\n        oSettings.bDeferLoading = true;\n        var tmp = Array.isArray(oInit.iDeferLoading);\n        oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n        oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n      }\n      /* Language definitions */\n\n\n      var oLanguage = oSettings.oLanguage;\n      $.extend(true, oLanguage, oInit.oLanguage);\n\n      if (oLanguage.sUrl) {\n        /* Get the language definitions from a file - because this Ajax call makes the language\n         * get async to the remainder of this function we use bInitHandedOff to indicate that\n         * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n         */\n        $.ajax({\n          dataType: 'json',\n          url: oLanguage.sUrl,\n          success: function success(json) {\n            _fnCamelToHungarian(defaults.oLanguage, json);\n\n            _fnLanguageCompat(json);\n\n            $.extend(true, oLanguage, json);\n\n            _fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n\n            _fnInitialise(oSettings);\n          },\n          error: function error() {\n            // Error occurred loading language file, continue on as best we can\n            _fnInitialise(oSettings);\n          }\n        });\n        bInitHandedOff = true;\n      } else {\n        _fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n      }\n      /*\n       * Stripes\n       */\n\n\n      if (oInit.asStripeClasses === null) {\n        oSettings.asStripeClasses = [oClasses.sStripeOdd, oClasses.sStripeEven];\n      }\n      /* Remove row stripe classes if they are already on the table row */\n\n\n      var stripeClasses = oSettings.asStripeClasses;\n      var rowOne = $this.children('tbody').find('tr').eq(0);\n\n      if ($.inArray(true, $.map(stripeClasses, function (el, i) {\n        return rowOne.hasClass(el);\n      })) !== -1) {\n        $('tbody tr', this).removeClass(stripeClasses.join(' '));\n        oSettings.asDestroyStripes = stripeClasses.slice();\n      }\n      /*\n       * Columns\n       * See if we should load columns automatically or use defined ones\n       */\n\n\n      var anThs = [];\n      var aoColumnsInit;\n      var nThead = this.getElementsByTagName('thead');\n\n      if (nThead.length !== 0) {\n        _fnDetectHeader(oSettings.aoHeader, nThead[0]);\n\n        anThs = _fnGetUniqueThs(oSettings);\n      }\n      /* If not given a column array, generate one with nulls */\n\n\n      if (oInit.aoColumns === null) {\n        aoColumnsInit = [];\n\n        for (i = 0, iLen = anThs.length; i < iLen; i++) {\n          aoColumnsInit.push(null);\n        }\n      } else {\n        aoColumnsInit = oInit.aoColumns;\n      }\n      /* Add the columns */\n\n\n      for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {\n        _fnAddColumn(oSettings, anThs ? anThs[i] : null);\n      }\n      /* Apply the column definitions */\n\n\n      _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n        _fnColumnOptions(oSettings, iCol, oDef);\n      });\n      /* HTML5 attribute detection - build an mData object automatically if the\n       * attributes are found\n       */\n\n\n      if (rowOne.length) {\n        var a = function a(cell, name) {\n          return cell.getAttribute('data-' + name) !== null ? name : null;\n        };\n\n        $(rowOne[0]).children('th, td').each(function (i, cell) {\n          var col = oSettings.aoColumns[i];\n\n          if (col.mData === i) {\n            var sort = a(cell, 'sort') || a(cell, 'order');\n            var filter = a(cell, 'filter') || a(cell, 'search');\n\n            if (sort !== null || filter !== null) {\n              col.mData = {\n                _: i + '.display',\n                sort: sort !== null ? i + '.@data-' + sort : undefined,\n                type: sort !== null ? i + '.@data-' + sort : undefined,\n                filter: filter !== null ? i + '.@data-' + filter : undefined\n              };\n\n              _fnColumnOptions(oSettings, i);\n            }\n          }\n        });\n      }\n\n      var features = oSettings.oFeatures;\n\n      var loadedInit = function loadedInit() {\n        /*\n         * Sorting\n         * @todo For modularisation (1.11) this needs to do into a sort start up handler\n         */\n        // If aaSorting is not defined, then we use the first indicator in asSorting\n        // in case that has been altered, so the default sort reflects that option\n        if (oInit.aaSorting === undefined) {\n          var sorting = oSettings.aaSorting;\n\n          for (i = 0, iLen = sorting.length; i < iLen; i++) {\n            sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n          }\n        }\n        /* Do a first pass on the sorting classes (allows any size changes to be taken into\n         * account, and also will apply sorting disabled classes if disabled\n         */\n\n\n        _fnSortingClasses(oSettings);\n\n        if (features.bSort) {\n          _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n            if (oSettings.bSorted) {\n              var aSort = _fnSortFlatten(oSettings);\n\n              var sortedColumns = {};\n              $.each(aSort, function (i, val) {\n                sortedColumns[val.src] = val.dir;\n              });\n\n              _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns]);\n\n              _fnSortAria(oSettings);\n            }\n          });\n        }\n\n        _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n          if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n            _fnSortingClasses(oSettings);\n          }\n        }, 'sc');\n        /*\n         * Final init\n         * Cache the header, body and footer as required, creating them if needed\n         */\n        // Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\n\n        var captions = $this.children('caption').each(function () {\n          this._captionSide = $(this).css('caption-side');\n        });\n        var thead = $this.children('thead');\n\n        if (thead.length === 0) {\n          thead = $('<thead/>').appendTo($this);\n        }\n\n        oSettings.nTHead = thead[0];\n        var tbody = $this.children('tbody');\n\n        if (tbody.length === 0) {\n          tbody = $('<tbody/>').insertAfter(thead);\n        }\n\n        oSettings.nTBody = tbody[0];\n        var tfoot = $this.children('tfoot');\n\n        if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\")) {\n          // If we are a scrolling table, and no footer has been given, then we need to create\n          // a tfoot element for the caption element to be appended to\n          tfoot = $('<tfoot/>').appendTo($this);\n        }\n\n        if (tfoot.length === 0 || tfoot.children().length === 0) {\n          $this.addClass(oClasses.sNoFooter);\n        } else if (tfoot.length > 0) {\n          oSettings.nTFoot = tfoot[0];\n\n          _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);\n        }\n        /* Check if there is data passing into the constructor */\n\n\n        if (oInit.aaData) {\n          for (i = 0; i < oInit.aaData.length; i++) {\n            _fnAddData(oSettings, oInit.aaData[i]);\n          }\n        } else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {\n          /* Grab the data from the page - only do this when deferred loading or no Ajax\n           * source since there is no point in reading the DOM data if we are then going\n           * to replace it with Ajax data\n           */\n          _fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));\n        }\n        /* Copy the data index array */\n\n\n        oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n        /* Initialisation complete - table can be drawn */\n\n        oSettings.bInitialised = true;\n        /* Check if we need to initialise the table (it might not have been handed off to the\n         * language processor)\n         */\n\n        if (bInitHandedOff === false) {\n          _fnInitialise(oSettings);\n        }\n      };\n      /* Must be done after everything which can be overridden by the state saving! */\n\n\n      _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');\n\n      if (oInit.bStateSave) {\n        features.bStateSave = true;\n\n        _fnLoadState(oSettings, oInit, loadedInit);\n      } else {\n        loadedInit();\n      }\n    });\n    _that = null;\n    return this;\n  };\n  /*\n   * It is useful to have variables which are scoped locally so only the\n   * DataTables functions can access them and they don't leak into global space.\n   * At the same time these functions are often useful over multiple files in the\n   * core and API, so we list, or at least document, all variables which are used\n   * by DataTables as private variables here. This also ensures that there is no\n   * clashing of variable names and that they can easily referenced for reuse.\n   */\n  // Defined else where\n  //  _selector_run\n  //  _selector_opts\n  //  _selector_first\n  //  _selector_row_indexes\n\n\n  var _ext; // DataTable.ext\n\n\n  var _Api2; // DataTable.Api\n\n\n  var _api_register; // DataTable.Api.register\n\n\n  var _api_registerPlural; // DataTable.Api.registerPlural\n\n\n  var _re_dic = {};\n  var _re_new_lines = /[\\r\\n\\u2028]/g;\n  var _re_html = /<.*?>/g; // This is not strict ISO8601 - Date.parse() is quite lax, although\n  // implementations differ between browsers.\n\n  var _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/; // Escape regular expression special characters\n\n  var _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g'); // http://en.wikipedia.org/wiki/Foreign_exchange_market\n  // - \\u20BD - Russian ruble.\n  // - \\u20a9 - South Korean Won\n  // - \\u20BA - Turkish Lira\n  // - \\u20B9 - Indian Rupee\n  // - R - Brazil (R$) and South Africa\n  // - fr - Swiss Franc\n  // - kr - Swedish krona, Norwegian krone and Danish krone\n  // - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n  // - Ƀ - Bitcoin\n  // - Ξ - Ethereum\n  //   standards as thousands separators.\n\n\n  var _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\n  var _empty = function _empty(d) {\n    return !d || d === true || d === '-' ? true : false;\n  };\n\n  var _intVal = function _intVal(s) {\n    var integer = parseInt(s, 10);\n    return !isNaN(integer) && isFinite(s) ? integer : null;\n  }; // Convert from a formatted number with characters other than `.` as the\n  // decimal place, to a Javascript number\n\n\n  var _numToDecimal = function _numToDecimal(num, decimalPoint) {\n    // Cache created regular expressions for speed as this function is called often\n    if (!_re_dic[decimalPoint]) {\n      _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n    }\n\n    return typeof num === 'string' && decimalPoint !== '.' ? num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') : num;\n  };\n\n  var _isNumber = function _isNumber(d, decimalPoint, formatted) {\n    var strType = typeof d === 'string'; // If empty return immediately so there must be a number if it is a\n    // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n    // as a formatted number for currency\n\n    if (_empty(d)) {\n      return true;\n    }\n\n    if (decimalPoint && strType) {\n      d = _numToDecimal(d, decimalPoint);\n    }\n\n    if (formatted && strType) {\n      d = d.replace(_re_formatted_numeric, '');\n    }\n\n    return !isNaN(parseFloat(d)) && isFinite(d);\n  }; // A string without HTML in it can be considered to be HTML still\n\n\n  var _isHtml = function _isHtml(d) {\n    return _empty(d) || typeof d === 'string';\n  };\n\n  var _htmlNumeric = function _htmlNumeric(d, decimalPoint, formatted) {\n    if (_empty(d)) {\n      return true;\n    }\n\n    var html = _isHtml(d);\n\n    return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted) ? true : null;\n  };\n\n  var _pluck = function _pluck(a, prop, prop2) {\n    var out = [];\n    var i = 0,\n        ien = a.length; // Could have the test in the loop for slightly smaller code, but speed\n    // is essential here\n\n    if (prop2 !== undefined) {\n      for (; i < ien; i++) {\n        if (a[i] && a[i][prop]) {\n          out.push(a[i][prop][prop2]);\n        }\n      }\n    } else {\n      for (; i < ien; i++) {\n        if (a[i]) {\n          out.push(a[i][prop]);\n        }\n      }\n    }\n\n    return out;\n  }; // Basically the same as _pluck, but rather than looping over `a` we use `order`\n  // as the indexes to pick from `a`\n\n\n  var _pluck_order = function _pluck_order(a, order, prop, prop2) {\n    var out = [];\n    var i = 0,\n        ien = order.length; // Could have the test in the loop for slightly smaller code, but speed\n    // is essential here\n\n    if (prop2 !== undefined) {\n      for (; i < ien; i++) {\n        if (a[order[i]][prop]) {\n          out.push(a[order[i]][prop][prop2]);\n        }\n      }\n    } else {\n      for (; i < ien; i++) {\n        out.push(a[order[i]][prop]);\n      }\n    }\n\n    return out;\n  };\n\n  var _range = function _range(len, start) {\n    var out = [];\n    var end;\n\n    if (start === undefined) {\n      start = 0;\n      end = len;\n    } else {\n      end = start;\n      start = len;\n    }\n\n    for (var i = start; i < end; i++) {\n      out.push(i);\n    }\n\n    return out;\n  };\n\n  var _removeEmpty = function _removeEmpty(a) {\n    var out = [];\n\n    for (var i = 0, ien = a.length; i < ien; i++) {\n      if (a[i]) {\n        // careful - will remove all falsy values!\n        out.push(a[i]);\n      }\n    }\n\n    return out;\n  };\n\n  var _stripHtml = function _stripHtml(d) {\n    return d.replace(_re_html, '');\n  };\n  /**\n   * Determine if all values in the array are unique. This means we can short\n   * cut the _unique method at the cost of a single loop. A sorted array is used\n   * to easily check the values.\n   *\n   * @param  {array} src Source array\n   * @return {boolean} true if all unique, false otherwise\n   * @ignore\n   */\n\n\n  var _areAllUnique = function _areAllUnique(src) {\n    if (src.length < 2) {\n      return true;\n    }\n\n    var sorted = src.slice().sort();\n    var last = sorted[0];\n\n    for (var i = 1, ien = sorted.length; i < ien; i++) {\n      if (sorted[i] === last) {\n        return false;\n      }\n\n      last = sorted[i];\n    }\n\n    return true;\n  };\n  /**\n   * Find the unique elements in a source array.\n   *\n   * @param  {array} src Source array\n   * @return {array} Array of unique items\n   * @ignore\n   */\n\n\n  var _unique = function _unique(src) {\n    if (_areAllUnique(src)) {\n      return src.slice();\n    } // A faster unique method is to use object keys to identify used values,\n    // but this doesn't work with arrays or objects, which we must also\n    // consider. See jsperf.com/compare-array-unique-versions/4 for more\n    // information.\n\n\n    var out = [],\n        val,\n        i,\n        ien = src.length,\n        j,\n        k = 0;\n\n    again: for (i = 0; i < ien; i++) {\n      val = src[i];\n\n      for (j = 0; j < k; j++) {\n        if (out[j] === val) {\n          continue again;\n        }\n      }\n\n      out.push(val);\n      k++;\n    }\n\n    return out;\n  }; // Surprisingly this is faster than [].concat.apply\n  // https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n\n\n  var _flatten = function _flatten(out, val) {\n    if (Array.isArray(val)) {\n      for (var i = 0; i < val.length; i++) {\n        _flatten(out, val[i]);\n      }\n    } else {\n      out.push(val);\n    }\n\n    return out;\n  };\n\n  var _includes = function _includes(search, start) {\n    if (start === undefined) {\n      start = 0;\n    }\n\n    return this.indexOf(search, start) !== -1;\n  }; // Array.isArray polyfill.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\n\n  if (!Array.isArray) {\n    Array.isArray = function (arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n  }\n\n  if (!Array.prototype.includes) {\n    Array.prototype.includes = _includes;\n  } // .trim() polyfill\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n\n\n  if (!String.prototype.trim) {\n    String.prototype.trim = function () {\n      return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n    };\n  }\n\n  if (!String.prototype.includes) {\n    String.prototype.includes = _includes;\n  }\n  /**\n   * DataTables utility methods\n   * \n   * This namespace provides helper methods that DataTables uses internally to\n   * create a DataTable, but which are not exclusively used only for DataTables.\n   * These methods can be used by extension authors to save the duplication of\n   * code.\n   *\n   *  @namespace\n   */\n\n\n  DataTable.util = {\n    /**\n     * Throttle the calls to a function. Arguments and context are maintained\n     * for the throttled function.\n     *\n     * @param {function} fn Function to be called\n     * @param {integer} freq Call frequency in mS\n     * @return {function} Wrapped function\n     */\n    throttle: function throttle(fn, freq) {\n      var frequency = freq !== undefined ? freq : 200,\n          last,\n          timer;\n      return function () {\n        var that = this,\n            now = +new Date(),\n            args = arguments;\n\n        if (last && now < last + frequency) {\n          clearTimeout(timer);\n          timer = setTimeout(function () {\n            last = undefined;\n            fn.apply(that, args);\n          }, frequency);\n        } else {\n          last = now;\n          fn.apply(that, args);\n        }\n      };\n    },\n\n    /**\n     * Escape a string such that it can be used in a regular expression\n     *\n     *  @param {string} val string to escape\n     *  @returns {string} escaped string\n     */\n    escapeRegex: function escapeRegex(val) {\n      return val.replace(_re_escape_regex, '\\\\$1');\n    },\n\n    /**\n     * Create a function that will write to a nested object or array\n     * @param {*} source JSON notation string\n     * @returns Write function\n     */\n    set: function set(source) {\n      if ($.isPlainObject(source)) {\n        /* Unlike get, only the underscore (global) option is used for for\n         * setting data since we don't know the type here. This is why an object\n         * option is not documented for `mData` (which is read/write), but it is\n         * for `mRender` which is read only.\n         */\n        return DataTable.util.set(source._);\n      } else if (source === null) {\n        // Nothing to do when the data source is null\n        return function () {};\n      } else if (typeof source === 'function') {\n        return function (data, val, meta) {\n          source(data, 'set', val, meta);\n        };\n      } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n        // Like the get, we need to get data from a nested object\n        var setData = function setData(data, val, src) {\n          var a = _fnSplitObjNotation(src),\n              b;\n\n          var aLast = a[a.length - 1];\n          var arrayNotation, funcNotation, o, innerSrc;\n\n          for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n            // Protect against prototype pollution\n            if (a[i] === '__proto__' || a[i] === 'constructor') {\n              throw new Error('Cannot set prototype values');\n            } // Check if we are dealing with an array notation request\n\n\n            arrayNotation = a[i].match(__reArray);\n            funcNotation = a[i].match(__reFn);\n\n            if (arrayNotation) {\n              a[i] = a[i].replace(__reArray, '');\n              data[a[i]] = []; // Get the remainder of the nested object to set so we can recurse\n\n              b = a.slice();\n              b.splice(0, i + 1);\n              innerSrc = b.join('.'); // Traverse each entry in the array setting the properties requested\n\n              if (Array.isArray(val)) {\n                for (var j = 0, jLen = val.length; j < jLen; j++) {\n                  o = {};\n                  setData(o, val[j], innerSrc);\n                  data[a[i]].push(o);\n                }\n              } else {\n                // We've been asked to save data to an array, but it\n                // isn't array data to be saved. Best that can be done\n                // is to just save the value.\n                data[a[i]] = val;\n              } // The inner call to setData has already traversed through the remainder\n              // of the source and has set the data, thus we can exit here\n\n\n              return;\n            } else if (funcNotation) {\n              // Function call\n              a[i] = a[i].replace(__reFn, '');\n              data = data[a[i]](val);\n            } // If the nested object doesn't currently exist - since we are\n            // trying to set the value - create it\n\n\n            if (data[a[i]] === null || data[a[i]] === undefined) {\n              data[a[i]] = {};\n            }\n\n            data = data[a[i]];\n          } // Last item in the input - i.e, the actual set\n\n\n          if (aLast.match(__reFn)) {\n            // Function call\n            data = data[aLast.replace(__reFn, '')](val);\n          } else {\n            // If array notation is used, we just want to strip it and use the property name\n            // and assign the value. If it isn't used, then we get the result we want anyway\n            data[aLast.replace(__reArray, '')] = val;\n          }\n        };\n\n        return function (data, val) {\n          // meta is also passed in, but not used\n          return setData(data, val, source);\n        };\n      } else {\n        // Array or flat object mapping\n        return function (data, val) {\n          // meta is also passed in, but not used\n          data[source] = val;\n        };\n      }\n    },\n\n    /**\n     * Create a function that will read nested objects from arrays, based on JSON notation\n     * @param {*} source JSON notation string\n     * @returns Value read\n     */\n    get: function get(source) {\n      if ($.isPlainObject(source)) {\n        // Build an object of get functions, and wrap them in a single call\n        var o = {};\n        $.each(source, function (key, val) {\n          if (val) {\n            o[key] = DataTable.util.get(val);\n          }\n        });\n        return function (data, type, row, meta) {\n          var t = o[type] || o._;\n          return t !== undefined ? t(data, type, row, meta) : data;\n        };\n      } else if (source === null) {\n        // Give an empty string for rendering / sorting etc\n        return function (data) {\n          // type, row and meta also passed, but not used\n          return data;\n        };\n      } else if (typeof source === 'function') {\n        return function (data, type, row, meta) {\n          return source(data, type, row, meta);\n        };\n      } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n        /* If there is a . in the source string then the data source is in a\n         * nested object so we loop over the data for each level to get the next\n         * level down. On each loop we test for undefined, and if found immediately\n         * return. This allows entire objects to be missing and sDefaultContent to\n         * be used if defined, rather than throwing an error\n         */\n        var fetchData = function fetchData(data, type, src) {\n          var arrayNotation, funcNotation, out, innerSrc;\n\n          if (src !== \"\") {\n            var a = _fnSplitObjNotation(src);\n\n            for (var i = 0, iLen = a.length; i < iLen; i++) {\n              // Check if we are dealing with special notation\n              arrayNotation = a[i].match(__reArray);\n              funcNotation = a[i].match(__reFn);\n\n              if (arrayNotation) {\n                // Array notation\n                a[i] = a[i].replace(__reArray, ''); // Condition allows simply [] to be passed in\n\n                if (a[i] !== \"\") {\n                  data = data[a[i]];\n                }\n\n                out = []; // Get the remainder of the nested object to get\n\n                a.splice(0, i + 1);\n                innerSrc = a.join('.'); // Traverse each entry in the array getting the properties requested\n\n                if (Array.isArray(data)) {\n                  for (var j = 0, jLen = data.length; j < jLen; j++) {\n                    out.push(fetchData(data[j], type, innerSrc));\n                  }\n                } // If a string is given in between the array notation indicators, that\n                // is used to join the strings together, otherwise an array is returned\n\n\n                var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n                data = join === \"\" ? out : out.join(join); // The inner call to fetchData has already traversed through the remainder\n                // of the source requested, so we exit from the loop\n\n                break;\n              } else if (funcNotation) {\n                // Function call\n                a[i] = a[i].replace(__reFn, '');\n                data = data[a[i]]();\n                continue;\n              }\n\n              if (data === null || data[a[i]] === undefined) {\n                return undefined;\n              }\n\n              data = data[a[i]];\n            }\n          }\n\n          return data;\n        };\n\n        return function (data, type) {\n          // row and meta also passed, but not used\n          return fetchData(data, type, source);\n        };\n      } else {\n        // Array or flat object mapping\n        return function (data, type) {\n          // row and meta also passed, but not used\n          return data[source];\n        };\n      }\n    }\n  };\n  /**\n   * Create a mapping object that allows camel case parameters to be looked up\n   * for their Hungarian counterparts. The mapping is stored in a private\n   * parameter called `_hungarianMap` which can be accessed on the source object.\n   *  @param {object} o\n   *  @memberof DataTable#oApi\n   */\n\n  function _fnHungarianMap(o) {\n    var hungarian = 'a aa ai ao as b fn i m o s ',\n        match,\n        newKey,\n        map = {};\n    $.each(o, function (key, val) {\n      match = key.match(/^([^A-Z]+?)([A-Z])/);\n\n      if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n        newKey = key.replace(match[0], match[2].toLowerCase());\n        map[newKey] = key;\n\n        if (match[1] === 'o') {\n          _fnHungarianMap(o[key]);\n        }\n      }\n    });\n    o._hungarianMap = map;\n  }\n  /**\n   * Convert from camel case parameters to Hungarian, based on a Hungarian map\n   * created by _fnHungarianMap.\n   *  @param {object} src The model object which holds all parameters that can be\n   *    mapped.\n   *  @param {object} user The object to convert from camel case to Hungarian.\n   *  @param {boolean} force When set to `true`, properties which already have a\n   *    Hungarian value in the `user` object will be overwritten. Otherwise they\n   *    won't be.\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnCamelToHungarian(src, user, force) {\n    if (!src._hungarianMap) {\n      _fnHungarianMap(src);\n    }\n\n    var hungarianKey;\n    $.each(user, function (key, val) {\n      hungarianKey = src._hungarianMap[key];\n\n      if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n        // For objects, we need to buzz down into the object to copy parameters\n        if (hungarianKey.charAt(0) === 'o') {\n          // Copy the camelCase options over to the hungarian\n          if (!user[hungarianKey]) {\n            user[hungarianKey] = {};\n          }\n\n          $.extend(true, user[hungarianKey], user[key]);\n\n          _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n        } else {\n          user[hungarianKey] = user[key];\n        }\n      }\n    });\n  }\n  /**\n   * Language compatibility - when certain options are given, and others aren't, we\n   * need to duplicate the values over, in order to provide backwards compatibility\n   * with older language files.\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnLanguageCompat(lang) {\n    // Note the use of the Hungarian notation for the parameters in this method as\n    // this is called after the mapping of camelCase to Hungarian\n    var defaults = DataTable.defaults.oLanguage; // Default mapping\n\n    var defaultDecimal = defaults.sDecimal;\n\n    if (defaultDecimal) {\n      _addNumericSort(defaultDecimal);\n    }\n\n    if (lang) {\n      var zeroRecords = lang.sZeroRecords; // Backwards compatibility - if there is no sEmptyTable given, then use the same as\n      // sZeroRecords - assuming that is given.\n\n      if (!lang.sEmptyTable && zeroRecords && defaults.sEmptyTable === \"No data available in table\") {\n        _fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable');\n      } // Likewise with loading records\n\n\n      if (!lang.sLoadingRecords && zeroRecords && defaults.sLoadingRecords === \"Loading...\") {\n        _fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords');\n      } // Old parameter name of the thousands separator mapped onto the new\n\n\n      if (lang.sInfoThousands) {\n        lang.sThousands = lang.sInfoThousands;\n      }\n\n      var decimal = lang.sDecimal;\n\n      if (decimal && defaultDecimal !== decimal) {\n        _addNumericSort(decimal);\n      }\n    }\n  }\n  /**\n   * Map one parameter onto another\n   *  @param {object} o Object to map\n   *  @param {*} knew The new parameter name\n   *  @param {*} old The old parameter name\n   */\n\n\n  var _fnCompatMap = function _fnCompatMap(o, knew, old) {\n    if (o[knew] !== undefined) {\n      o[old] = o[knew];\n    }\n  };\n  /**\n   * Provide backwards compatibility for the main DT options. Note that the new\n   * options are mapped onto the old parameters, so this is an external interface\n   * change only.\n   *  @param {object} init Object to map\n   */\n\n\n  function _fnCompatOpts(init) {\n    _fnCompatMap(init, 'ordering', 'bSort');\n\n    _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n\n    _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n\n    _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n\n    _fnCompatMap(init, 'order', 'aaSorting');\n\n    _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n\n    _fnCompatMap(init, 'paging', 'bPaginate');\n\n    _fnCompatMap(init, 'pagingType', 'sPaginationType');\n\n    _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n\n    _fnCompatMap(init, 'searching', 'bFilter'); // Boolean initialisation of x-scrolling\n\n\n    if (typeof init.sScrollX === 'boolean') {\n      init.sScrollX = init.sScrollX ? '100%' : '';\n    }\n\n    if (typeof init.scrollX === 'boolean') {\n      init.scrollX = init.scrollX ? '100%' : '';\n    } // Column search objects are in an array, so it needs to be converted\n    // element by element\n\n\n    var searchCols = init.aoSearchCols;\n\n    if (searchCols) {\n      for (var i = 0, ien = searchCols.length; i < ien; i++) {\n        if (searchCols[i]) {\n          _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Provide backwards compatibility for column options. Note that the new options\n   * are mapped onto the old parameters, so this is an external interface change\n   * only.\n   *  @param {object} init Object to map\n   */\n\n\n  function _fnCompatCols(init) {\n    _fnCompatMap(init, 'orderable', 'bSortable');\n\n    _fnCompatMap(init, 'orderData', 'aDataSort');\n\n    _fnCompatMap(init, 'orderSequence', 'asSorting');\n\n    _fnCompatMap(init, 'orderDataType', 'sortDataType'); // orderData can be given as an integer\n\n\n    var dataSort = init.aDataSort;\n\n    if (typeof dataSort === 'number' && !Array.isArray(dataSort)) {\n      init.aDataSort = [dataSort];\n    }\n  }\n  /**\n   * Browser feature detection for capabilities, quirks\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnBrowserDetect(settings) {\n    // We don't need to do this every time DataTables is constructed, the values\n    // calculated are specific to the browser and OS configuration which we\n    // don't expect to change between initialisations\n    if (!DataTable.__browser) {\n      var browser = {};\n      DataTable.__browser = browser; // Scrolling feature / quirks detection\n\n      var n = $('<div/>').css({\n        position: 'fixed',\n        top: 0,\n        left: $(window).scrollLeft() * -1,\n        // allow for scrolling\n        height: 1,\n        width: 1,\n        overflow: 'hidden'\n      }).append($('<div/>').css({\n        position: 'absolute',\n        top: 1,\n        left: 1,\n        width: 100,\n        overflow: 'scroll'\n      }).append($('<div/>').css({\n        width: '100%',\n        height: 10\n      }))).appendTo('body');\n      var outer = n.children();\n      var inner = outer.children(); // Numbers below, in order, are:\n      // inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n      //\n      // IE6 XP:                           100 100 100  83\n      // IE7 Vista:                        100 100 100  83\n      // IE 8+ Windows:                     83  83 100  83\n      // Evergreen Windows:                 83  83 100  83\n      // Evergreen Mac with scrollbars:     85  85 100  85\n      // Evergreen Mac without scrollbars: 100 100 100 100\n      // Get scrollbar width\n\n      browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth; // IE6/7 will oversize a width 100% element inside a scrolling element, to\n      // include the width of the scrollbar, while other browsers ensure the inner\n      // element is contained without forcing scrolling\n\n      browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100; // In rtl text layout, some browsers (most, but not all) will place the\n      // scrollbar on the left, rather than the right.\n\n      browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1; // IE8- don't provide height and width for getBoundingClientRect\n\n      browser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n      n.remove();\n    }\n\n    $.extend(settings.oBrowser, DataTable.__browser);\n    settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n  }\n  /**\n   * Array.prototype reduce[Right] method, used for browsers which don't support\n   * JS 1.6. Done this way to reduce code size, since we iterate either way\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnReduce(that, fn, init, start, end, inc) {\n    var i = start,\n        value,\n        isSet = false;\n\n    if (init !== undefined) {\n      value = init;\n      isSet = true;\n    }\n\n    while (i !== end) {\n      if (!that.hasOwnProperty(i)) {\n        continue;\n      }\n\n      value = isSet ? fn(value, that[i], i, that) : that[i];\n      isSet = true;\n      i += inc;\n    }\n\n    return value;\n  }\n  /**\n   * Add a column to the list used for the table with default values\n   *  @param {object} oSettings dataTables settings object\n   *  @param {node} nTh The th element for this column\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnAddColumn(oSettings, nTh) {\n    // Add column to aoColumns array\n    var oDefaults = DataTable.defaults.column;\n    var iCol = oSettings.aoColumns.length;\n    var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n      \"nTh\": nTh ? nTh : document.createElement('th'),\n      \"sTitle\": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',\n      \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n      \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n      idx: iCol\n    });\n    oSettings.aoColumns.push(oCol); // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n    // passed into extend can be undefined. This allows the user to give a default\n    // with only some of the parameters defined, and also not give a default\n\n    var searchCols = oSettings.aoPreSearchCols;\n    searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]); // Use the default column options function to initialise classes etc\n\n    _fnColumnOptions(oSettings, iCol, $(nTh).data());\n  }\n  /**\n   * Apply options for a column\n   *  @param {object} oSettings dataTables settings object\n   *  @param {int} iCol column index to consider\n   *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnColumnOptions(oSettings, iCol, oOptions) {\n    var oCol = oSettings.aoColumns[iCol];\n    var oClasses = oSettings.oClasses;\n    var th = $(oCol.nTh); // Try to get width information from the DOM. We can't get it from CSS\n    // as we'd need to parse the CSS stylesheet. `width` option can override\n\n    if (!oCol.sWidthOrig) {\n      // Width attribute\n      oCol.sWidthOrig = th.attr('width') || null; // Style attribute\n\n      var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\n      if (t) {\n        oCol.sWidthOrig = t[1];\n      }\n    }\n    /* User specified column options */\n\n\n    if (oOptions !== undefined && oOptions !== null) {\n      // Backwards compatibility\n      _fnCompatCols(oOptions); // Map camel case parameters to their Hungarian counterparts\n\n\n      _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n      /* Backwards compatibility for mDataProp */\n\n\n      if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n        oOptions.mData = oOptions.mDataProp;\n      }\n\n      if (oOptions.sType) {\n        oCol._sManualType = oOptions.sType;\n      } // `class` is a reserved word in Javascript, so we need to provide\n      // the ability to use a valid name for the camel case input\n\n\n      if (oOptions.className && !oOptions.sClass) {\n        oOptions.sClass = oOptions.className;\n      }\n\n      if (oOptions.sClass) {\n        th.addClass(oOptions.sClass);\n      }\n\n      $.extend(oCol, oOptions);\n\n      _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n      /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n       * priority if defined\n       */\n\n\n      if (oOptions.iDataSort !== undefined) {\n        oCol.aDataSort = [oOptions.iDataSort];\n      }\n\n      _fnMap(oCol, oOptions, \"aDataSort\");\n    }\n    /* Cache the data get and set functions for speed */\n\n\n    var mDataSrc = oCol.mData;\n\n    var mData = _fnGetObjectDataFn(mDataSrc);\n\n    var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n\n    var attrTest = function attrTest(src) {\n      return typeof src === 'string' && src.indexOf('@') !== -1;\n    };\n\n    oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));\n    oCol._setter = null;\n\n    oCol.fnGetData = function (rowData, type, meta) {\n      var innerData = mData(rowData, type, undefined, meta);\n      return mRender && type ? mRender(innerData, type, rowData, meta) : innerData;\n    };\n\n    oCol.fnSetData = function (rowData, val, meta) {\n      return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n    }; // Indicate if DataTables should read DOM data as an object or array\n    // Used in _fnGetRowElements\n\n\n    if (typeof mDataSrc !== 'number') {\n      oSettings._rowReadObject = true;\n    }\n    /* Feature sorting overrides column specific when off */\n\n\n    if (!oSettings.oFeatures.bSort) {\n      oCol.bSortable = false;\n      th.addClass(oClasses.sSortableNone); // Have to add class here as order event isn't called\n    }\n    /* Check that the class assignment is correct for sorting */\n\n\n    var bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n    var bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\n    if (!oCol.bSortable || !bAsc && !bDesc) {\n      oCol.sSortingClass = oClasses.sSortableNone;\n      oCol.sSortingClassJUI = \"\";\n    } else if (bAsc && !bDesc) {\n      oCol.sSortingClass = oClasses.sSortableAsc;\n      oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n    } else if (!bAsc && bDesc) {\n      oCol.sSortingClass = oClasses.sSortableDesc;\n      oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n    } else {\n      oCol.sSortingClass = oClasses.sSortable;\n      oCol.sSortingClassJUI = oClasses.sSortJUI;\n    }\n  }\n  /**\n   * Adjust the table column widths for new data. Note: you would probably want to\n   * do a redraw after calling this function!\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnAdjustColumnSizing(settings) {\n    /* Not interested in doing column width calculation if auto-width is disabled */\n    if (settings.oFeatures.bAutoWidth !== false) {\n      var columns = settings.aoColumns;\n\n      _fnCalculateColumnWidths(settings);\n\n      for (var i = 0, iLen = columns.length; i < iLen; i++) {\n        columns[i].nTh.style.width = columns[i].sWidth;\n      }\n    }\n\n    var scroll = settings.oScroll;\n\n    if (scroll.sY !== '' || scroll.sX !== '') {\n      _fnScrollDraw(settings);\n    }\n\n    _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n  }\n  /**\n   * Convert the index of a visible column to the index in the data array (take account\n   * of hidden columns)\n   *  @param {object} oSettings dataTables settings object\n   *  @param {int} iMatch Visible column index to lookup\n   *  @returns {int} i the data index\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnVisibleToColumnIndex(oSettings, iMatch) {\n    var aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n    return typeof aiVis[iMatch] === 'number' ? aiVis[iMatch] : null;\n  }\n  /**\n   * Convert the index of an index in the data array and convert it to the visible\n   *   column index (take account of hidden columns)\n   *  @param {int} iMatch Column index to lookup\n   *  @param {object} oSettings dataTables settings object\n   *  @returns {int} i the data index\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnColumnIndexToVisible(oSettings, iMatch) {\n    var aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n    var iPos = $.inArray(iMatch, aiVis);\n    return iPos !== -1 ? iPos : null;\n  }\n  /**\n   * Get the number of visible columns\n   *  @param {object} oSettings dataTables settings object\n   *  @returns {int} i the number of visible columns\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnVisbleColumns(oSettings) {\n    var vis = 0; // No reduce in IE8, use a loop for now\n\n    $.each(oSettings.aoColumns, function (i, col) {\n      if (col.bVisible && $(col.nTh).css('display') !== 'none') {\n        vis++;\n      }\n    });\n    return vis;\n  }\n  /**\n   * Get an array of column indexes that match a given property\n   *  @param {object} oSettings dataTables settings object\n   *  @param {string} sParam Parameter in aoColumns to look for - typically\n   *    bVisible or bSearchable\n   *  @returns {array} Array of indexes with matched properties\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnGetColumns(oSettings, sParam) {\n    var a = [];\n    $.map(oSettings.aoColumns, function (val, i) {\n      if (val[sParam]) {\n        a.push(i);\n      }\n    });\n    return a;\n  }\n  /**\n   * Calculate the 'type' of a column\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnColumnTypes(settings) {\n    var columns = settings.aoColumns;\n    var data = settings.aoData;\n    var types = DataTable.ext.type.detect;\n    var i, ien, j, jen, k, ken;\n    var col, cell, detectedType, cache; // For each column, spin over the \n\n    for (i = 0, ien = columns.length; i < ien; i++) {\n      col = columns[i];\n      cache = [];\n\n      if (!col.sType && col._sManualType) {\n        col.sType = col._sManualType;\n      } else if (!col.sType) {\n        for (j = 0, jen = types.length; j < jen; j++) {\n          for (k = 0, ken = data.length; k < ken; k++) {\n            // Use a cache array so we only need to get the type data\n            // from the formatter once (when using multiple detectors)\n            if (cache[k] === undefined) {\n              cache[k] = _fnGetCellData(settings, k, i, 'type');\n            }\n\n            detectedType = types[j](cache[k], settings); // If null, then this type can't apply to this column, so\n            // rather than testing all cells, break out. There is an\n            // exception for the last type which is `html`. We need to\n            // scan all rows since it is possible to mix string and HTML\n            // types\n\n            if (!detectedType && j !== types.length - 1) {\n              break;\n            } // Only a single match is needed for html type since it is\n            // bottom of the pile and very similar to string - but it\n            // must not be empty\n\n\n            if (detectedType === 'html' && !_empty(cache[k])) {\n              break;\n            }\n          } // Type is valid for all data points in the column - use this\n          // type\n\n\n          if (detectedType) {\n            col.sType = detectedType;\n            break;\n          }\n        } // Fall back - if no type was detected, always use string\n\n\n        if (!col.sType) {\n          col.sType = 'string';\n        }\n      }\n    }\n  }\n  /**\n   * Take the column definitions and static columns arrays and calculate how\n   * they relate to column indexes. The callback function will then apply the\n   * definition found for a column to a suitable configuration object.\n   *  @param {object} oSettings dataTables settings object\n   *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n   *  @param {array} aoCols The aoColumns array that defines columns individually\n   *  @param {function} fn Callback function - takes two parameters, the calculated\n   *    column index and the definition for that column.\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {\n    var i, iLen, j, jLen, k, kLen, def;\n    var columns = oSettings.aoColumns; // Column definitions with aTargets\n\n    if (aoColDefs) {\n      /* Loop over the definitions array - loop in reverse so first instance has priority */\n      for (i = aoColDefs.length - 1; i >= 0; i--) {\n        def = aoColDefs[i];\n        /* Each definition can target multiple columns, as it is an array */\n\n        var aTargets = def.targets !== undefined ? def.targets : def.aTargets;\n\n        if (!Array.isArray(aTargets)) {\n          aTargets = [aTargets];\n        }\n\n        for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n          if (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {\n            /* Add columns that we don't yet know about */\n            while (columns.length <= aTargets[j]) {\n              _fnAddColumn(oSettings);\n            }\n            /* Integer, basic index */\n\n\n            fn(aTargets[j], def);\n          } else if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {\n            /* Negative integer, right to left column counting */\n            fn(columns.length + aTargets[j], def);\n          } else if (typeof aTargets[j] === 'string') {\n            /* Class name matching on TH element */\n            for (k = 0, kLen = columns.length; k < kLen; k++) {\n              if (aTargets[j] == \"_all\" || $(columns[k].nTh).hasClass(aTargets[j])) {\n                fn(k, def);\n              }\n            }\n          }\n        }\n      }\n    } // Statically defined columns array\n\n\n    if (aoCols) {\n      for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n        fn(i, aoCols[i]);\n      }\n    }\n  }\n  /**\n   * Add a data array to the table, creating DOM node etc. This is the parallel to\n   * _fnGatherData, but for adding rows from a Javascript source, rather than a\n   * DOM source.\n   *  @param {object} oSettings dataTables settings object\n   *  @param {array} aData data array to be added\n   *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n   *    DataTables will create a row automatically\n   *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n   *    if nTr is.\n   *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnAddData(oSettings, aDataIn, nTr, anTds) {\n    /* Create the object for storing information about this new row */\n    var iRow = oSettings.aoData.length;\n    var oData = $.extend(true, {}, DataTable.models.oRow, {\n      src: nTr ? 'dom' : 'data',\n      idx: iRow\n    });\n    oData._aData = aDataIn;\n    oSettings.aoData.push(oData);\n    /* Create the cells */\n\n    var nTd, sThisType;\n    var columns = oSettings.aoColumns; // Invalidate the column types as the new data needs to be revalidated\n\n    for (var i = 0, iLen = columns.length; i < iLen; i++) {\n      columns[i].sType = null;\n    }\n    /* Add to the display array */\n\n\n    oSettings.aiDisplayMaster.push(iRow);\n    var id = oSettings.rowIdFn(aDataIn);\n\n    if (id !== undefined) {\n      oSettings.aIds[id] = oData;\n    }\n    /* Create the DOM information, or register it if already present */\n\n\n    if (nTr || !oSettings.oFeatures.bDeferRender) {\n      _fnCreateTr(oSettings, iRow, nTr, anTds);\n    }\n\n    return iRow;\n  }\n  /**\n   * Add one or more TR elements to the table. Generally we'd expect to\n   * use this for reading data from a DOM sourced table, but it could be\n   * used for an TR element. Note that if a TR is given, it is used (i.e.\n   * it is not cloned).\n   *  @param {object} settings dataTables settings object\n   *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n   *  @returns {array} Array of indexes for the added rows\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnAddTr(settings, trs) {\n    var row; // Allow an individual node to be passed in\n\n    if (!(trs instanceof $)) {\n      trs = $(trs);\n    }\n\n    return trs.map(function (i, el) {\n      row = _fnGetRowElements(settings, el);\n      return _fnAddData(settings, row.data, el, row.cells);\n    });\n  }\n  /**\n   * Take a TR element and convert it to an index in aoData\n   *  @param {object} oSettings dataTables settings object\n   *  @param {node} n the TR element to find\n   *  @returns {int} index if the node is found, null if not\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnNodeToDataIndex(oSettings, n) {\n    return n._DT_RowIndex !== undefined ? n._DT_RowIndex : null;\n  }\n  /**\n   * Take a TD element and convert it into a column data index (not the visible index)\n   *  @param {object} oSettings dataTables settings object\n   *  @param {int} iRow The row number the TD/TH can be found in\n   *  @param {node} n The TD/TH element to find\n   *  @returns {int} index if the node is found, -1 if not\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnNodeToColumnIndex(oSettings, iRow, n) {\n    return $.inArray(n, oSettings.aoData[iRow].anCells);\n  }\n  /**\n   * Get the data for a given cell from the internal cache, taking into account data mapping\n   *  @param {object} settings dataTables settings object\n   *  @param {int} rowIdx aoData row id\n   *  @param {int} colIdx Column index\n   *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n   *  @returns {*} Cell data\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnGetCellData(settings, rowIdx, colIdx, type) {\n    if (type === 'search') {\n      type = 'filter';\n    } else if (type === 'order') {\n      type = 'sort';\n    }\n\n    var draw = settings.iDraw;\n    var col = settings.aoColumns[colIdx];\n    var rowData = settings.aoData[rowIdx]._aData;\n    var defaultContent = col.sDefaultContent;\n    var cellData = col.fnGetData(rowData, type, {\n      settings: settings,\n      row: rowIdx,\n      col: colIdx\n    });\n\n    if (cellData === undefined) {\n      if (settings.iDrawError != draw && defaultContent === null) {\n        _fnLog(settings, 0, \"Requested unknown parameter \" + (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") + \" for row \" + rowIdx + \", column \" + colIdx, 4);\n\n        settings.iDrawError = draw;\n      }\n\n      return defaultContent;\n    } // When the data source is null and a specific data type is requested (i.e.\n    // not the original data), we can use default column data\n\n\n    if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n      cellData = defaultContent;\n    } else if (typeof cellData === 'function') {\n      // If the data source is a function, then we run it and use the return,\n      // executing in the scope of the data object (for instances)\n      return cellData.call(rowData);\n    }\n\n    if (cellData === null && type === 'display') {\n      return '';\n    }\n\n    if (type === 'filter') {\n      var fomatters = DataTable.ext.type.search;\n\n      if (fomatters[col.sType]) {\n        cellData = fomatters[col.sType](cellData);\n      }\n    }\n\n    return cellData;\n  }\n  /**\n   * Set the value for a specific cell, into the internal data cache\n   *  @param {object} settings dataTables settings object\n   *  @param {int} rowIdx aoData row id\n   *  @param {int} colIdx Column index\n   *  @param {*} val Value to set\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnSetCellData(settings, rowIdx, colIdx, val) {\n    var col = settings.aoColumns[colIdx];\n    var rowData = settings.aoData[rowIdx]._aData;\n    col.fnSetData(rowData, val, {\n      settings: settings,\n      row: rowIdx,\n      col: colIdx\n    });\n  } // Private variable that is used to match action syntax in the data property object\n\n\n  var __reArray = /\\[.*?\\]$/;\n  var __reFn = /\\(\\)$/;\n  /**\n   * Split string on periods, taking into account escaped periods\n   * @param  {string} str String to split\n   * @return {array} Split string\n   */\n\n  function _fnSplitObjNotation(str) {\n    return $.map(str.match(/(\\\\.|[^\\.])+/g) || [''], function (s) {\n      return s.replace(/\\\\\\./g, '.');\n    });\n  }\n  /**\n   * Return a function that can be used to get data from a source object, taking\n   * into account the ability to use nested objects as a source\n   *  @param {string|int|function} mSource The data source for the object\n   *  @returns {function} Data get function\n   *  @memberof DataTable#oApi\n   */\n\n\n  var _fnGetObjectDataFn = DataTable.util.get;\n  /**\n   * Return a function that can be used to set data from a source object, taking\n   * into account the ability to use nested objects as a source\n   *  @param {string|int|function} mSource The data source for the object\n   *  @returns {function} Data set function\n   *  @memberof DataTable#oApi\n   */\n\n  var _fnSetObjectDataFn = DataTable.util.set;\n  /**\n   * Return an array with the full table data\n   *  @param {object} oSettings dataTables settings object\n   *  @returns array {array} aData Master data array\n   *  @memberof DataTable#oApi\n   */\n\n  function _fnGetDataMaster(settings) {\n    return _pluck(settings.aoData, '_aData');\n  }\n  /**\n   * Nuke the table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnClearTable(settings) {\n    settings.aoData.length = 0;\n    settings.aiDisplayMaster.length = 0;\n    settings.aiDisplay.length = 0;\n    settings.aIds = {};\n  }\n  /**\n  * Take an array of integers (index array) and remove a target integer (value - not\n  * the key!)\n  *  @param {array} a Index array to target\n  *  @param {int} iTarget value to find\n  *  @memberof DataTable#oApi\n  */\n\n\n  function _fnDeleteIndex(a, iTarget, splice) {\n    var iTargetIndex = -1;\n\n    for (var i = 0, iLen = a.length; i < iLen; i++) {\n      if (a[i] == iTarget) {\n        iTargetIndex = i;\n      } else if (a[i] > iTarget) {\n        a[i]--;\n      }\n    }\n\n    if (iTargetIndex != -1 && splice === undefined) {\n      a.splice(iTargetIndex, 1);\n    }\n  }\n  /**\n   * Mark cached data as invalid such that a re-read of the data will occur when\n   * the cached data is next requested. Also update from the data source object.\n   *\n   * @param {object} settings DataTables settings object\n   * @param {int}    rowIdx   Row index to invalidate\n   * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n   *     or 'data'\n   * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n   *     row will be invalidated\n   * @memberof DataTable#oApi\n   *\n   * @todo For the modularisation of v1.11 this will need to become a callback, so\n   *   the sort and filter methods can subscribe to it. That will required\n   *   initialisation options for sorting, which is why it is not already baked in\n   */\n\n\n  function _fnInvalidate(settings, rowIdx, src, colIdx) {\n    var row = settings.aoData[rowIdx];\n    var i, ien;\n\n    var cellWrite = function cellWrite(cell, col) {\n      // This is very frustrating, but in IE if you just write directly\n      // to innerHTML, and elements that are overwritten are GC'ed,\n      // even if there is a reference to them elsewhere\n      while (cell.childNodes.length) {\n        cell.removeChild(cell.firstChild);\n      }\n\n      cell.innerHTML = _fnGetCellData(settings, rowIdx, col, 'display');\n    }; // Are we reading last data from DOM or the data object?\n\n\n    if (src === 'dom' || (!src || src === 'auto') && row.src === 'dom') {\n      // Read the data from the DOM\n      row._aData = _fnGetRowElements(settings, row, colIdx, colIdx === undefined ? undefined : row._aData).data;\n    } else {\n      // Reading from data object, update the DOM\n      var cells = row.anCells;\n\n      if (cells) {\n        if (colIdx !== undefined) {\n          cellWrite(cells[colIdx], colIdx);\n        } else {\n          for (i = 0, ien = cells.length; i < ien; i++) {\n            cellWrite(cells[i], i);\n          }\n        }\n      }\n    } // For both row and cell invalidation, the cached data for sorting and\n    // filtering is nulled out\n\n\n    row._aSortData = null;\n    row._aFilterData = null; // Invalidate the type for a specific column (if given) or all columns since\n    // the data might have changed\n\n    var cols = settings.aoColumns;\n\n    if (colIdx !== undefined) {\n      cols[colIdx].sType = null;\n    } else {\n      for (i = 0, ien = cols.length; i < ien; i++) {\n        cols[i].sType = null;\n      } // Update DataTables special `DT_*` attributes for the row\n\n\n      _fnRowAttributes(settings, row);\n    }\n  }\n  /**\n   * Build a data source object from an HTML row, reading the contents of the\n   * cells that are in the row.\n   *\n   * @param {object} settings DataTables settings object\n   * @param {node|object} TR element from which to read data or existing row\n   *   object from which to re-read the data from the cells\n   * @param {int} [colIdx] Optional column index\n   * @param {array|object} [d] Data source object. If `colIdx` is given then this\n   *   parameter should also be given and will be used to write the data into.\n   *   Only the column in question will be written\n   * @returns {object} Object with two parameters: `data` the data read, in\n   *   document order, and `cells` and array of nodes (they can be useful to the\n   *   caller, so rather than needing a second traversal to get them, just return\n   *   them from here).\n   * @memberof DataTable#oApi\n   */\n\n\n  function _fnGetRowElements(settings, row, colIdx, d) {\n    var tds = [],\n        td = row.firstChild,\n        name,\n        col,\n        o,\n        i = 0,\n        contents,\n        columns = settings.aoColumns,\n        objectRead = settings._rowReadObject; // Allow the data object to be passed in, or construct\n\n    d = d !== undefined ? d : objectRead ? {} : [];\n\n    var attr = function attr(str, td) {\n      if (typeof str === 'string') {\n        var idx = str.indexOf('@');\n\n        if (idx !== -1) {\n          var attr = str.substring(idx + 1);\n\n          var setter = _fnSetObjectDataFn(str);\n\n          setter(d, td.getAttribute(attr));\n        }\n      }\n    }; // Read data from a cell and store into the data object\n\n\n    var cellProcess = function cellProcess(cell) {\n      if (colIdx === undefined || colIdx === i) {\n        col = columns[i];\n        contents = cell.innerHTML.trim();\n\n        if (col && col._bAttrSrc) {\n          var setter = _fnSetObjectDataFn(col.mData._);\n\n          setter(d, contents);\n          attr(col.mData.sort, cell);\n          attr(col.mData.type, cell);\n          attr(col.mData.filter, cell);\n        } else {\n          // Depending on the `data` option for the columns the data can\n          // be read to either an object or an array.\n          if (objectRead) {\n            if (!col._setter) {\n              // Cache the setter function\n              col._setter = _fnSetObjectDataFn(col.mData);\n            }\n\n            col._setter(d, contents);\n          } else {\n            d[i] = contents;\n          }\n        }\n      }\n\n      i++;\n    };\n\n    if (td) {\n      // `tr` element was passed in\n      while (td) {\n        name = td.nodeName.toUpperCase();\n\n        if (name == \"TD\" || name == \"TH\") {\n          cellProcess(td);\n          tds.push(td);\n        }\n\n        td = td.nextSibling;\n      }\n    } else {\n      // Existing row object passed in\n      tds = row.anCells;\n\n      for (var j = 0, jen = tds.length; j < jen; j++) {\n        cellProcess(tds[j]);\n      }\n    } // Read the ID from the DOM if present\n\n\n    var rowNode = row.firstChild ? row : row.nTr;\n\n    if (rowNode) {\n      var id = rowNode.getAttribute('id');\n\n      if (id) {\n        _fnSetObjectDataFn(settings.rowId)(d, id);\n      }\n    }\n\n    return {\n      data: d,\n      cells: tds\n    };\n  }\n  /**\n   * Create a new TR element (and it's TD children) for a row\n   *  @param {object} oSettings dataTables settings object\n   *  @param {int} iRow Row to consider\n   *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n   *    DataTables will create a row automatically\n   *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n   *    if nTr is.\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n    var row = oSettings.aoData[iRow],\n        rowData = row._aData,\n        cells = [],\n        nTr,\n        nTd,\n        oCol,\n        i,\n        iLen,\n        create;\n\n    if (row.nTr === null) {\n      nTr = nTrIn || document.createElement('tr');\n      row.nTr = nTr;\n      row.anCells = cells;\n      /* Use a private property on the node to allow reserve mapping from the node\n       * to the aoData array for fast look up\n       */\n\n      nTr._DT_RowIndex = iRow;\n      /* Special parameters can be given by the data source to be used on the row */\n\n      _fnRowAttributes(oSettings, row);\n      /* Process each column */\n\n\n      for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n        oCol = oSettings.aoColumns[i];\n        create = nTrIn ? false : true;\n        nTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n        nTd._DT_CellIndex = {\n          row: iRow,\n          column: i\n        };\n        cells.push(nTd); // Need to create the HTML if new, or if a rendering function is defined\n\n        if (create || (oCol.mRender || oCol.mData !== i) && (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')) {\n          nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display');\n        }\n        /* Add user defined class */\n\n\n        if (oCol.sClass) {\n          nTd.className += ' ' + oCol.sClass;\n        } // Visibility - add or remove as required\n\n\n        if (oCol.bVisible && !nTrIn) {\n          nTr.appendChild(nTd);\n        } else if (!oCol.bVisible && nTrIn) {\n          nTd.parentNode.removeChild(nTd);\n        }\n\n        if (oCol.fnCreatedCell) {\n          oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i);\n        }\n      }\n\n      _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells]);\n    }\n  }\n  /**\n   * Add attributes to a row based on the special `DT_*` parameters in a data\n   * source object.\n   *  @param {object} settings DataTables settings object\n   *  @param {object} DataTables row object for the row to be modified\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnRowAttributes(settings, row) {\n    var tr = row.nTr;\n    var data = row._aData;\n\n    if (tr) {\n      var id = settings.rowIdFn(data);\n\n      if (id) {\n        tr.id = id;\n      }\n\n      if (data.DT_RowClass) {\n        // Remove any classes added by DT_RowClass before\n        var a = data.DT_RowClass.split(' ');\n        row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;\n        $(tr).removeClass(row.__rowc.join(' ')).addClass(data.DT_RowClass);\n      }\n\n      if (data.DT_RowAttr) {\n        $(tr).attr(data.DT_RowAttr);\n      }\n\n      if (data.DT_RowData) {\n        $(tr).data(data.DT_RowData);\n      }\n    }\n  }\n  /**\n   * Create the HTML header for the table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnBuildHead(oSettings) {\n    var i, ien, cell, row, column;\n    var thead = oSettings.nTHead;\n    var tfoot = oSettings.nTFoot;\n    var createHeader = $('th, td', thead).length === 0;\n    var classes = oSettings.oClasses;\n    var columns = oSettings.aoColumns;\n\n    if (createHeader) {\n      row = $('<tr/>').appendTo(thead);\n    }\n\n    for (i = 0, ien = columns.length; i < ien; i++) {\n      column = columns[i];\n      cell = $(column.nTh).addClass(column.sClass);\n\n      if (createHeader) {\n        cell.appendTo(row);\n      } // 1.11 move into sorting\n\n\n      if (oSettings.oFeatures.bSort) {\n        cell.addClass(column.sSortingClass);\n\n        if (column.bSortable !== false) {\n          cell.attr('tabindex', oSettings.iTabIndex).attr('aria-controls', oSettings.sTableId);\n\n          _fnSortAttachListener(oSettings, column.nTh, i);\n        }\n      }\n\n      if (column.sTitle != cell[0].innerHTML) {\n        cell.html(column.sTitle);\n      }\n\n      _fnRenderer(oSettings, 'header')(oSettings, cell, column, classes);\n    }\n\n    if (createHeader) {\n      _fnDetectHeader(oSettings.aoHeader, thead);\n    }\n    /* Deal with the footer - add classes if required */\n\n\n    $(thead).children('tr').children('th, td').addClass(classes.sHeaderTH);\n    $(tfoot).children('tr').children('th, td').addClass(classes.sFooterTH); // Cache the footer cells. Note that we only take the cells from the first\n    // row in the footer. If there is more than one row the user wants to\n    // interact with, they need to use the table().foot() method. Note also this\n    // allows cells to be used for multiple columns using colspan\n\n    if (tfoot !== null) {\n      var cells = oSettings.aoFooter[0];\n\n      for (i = 0, ien = cells.length; i < ien; i++) {\n        column = columns[i];\n        column.nTf = cells[i].cell;\n\n        if (column.sClass) {\n          $(column.nTf).addClass(column.sClass);\n        }\n      }\n    }\n  }\n  /**\n   * Draw the header (or footer) element based on the column visibility states. The\n   * methodology here is to use the layout array from _fnDetectHeader, modified for\n   * the instantaneous column visibility, to construct the new layout. The grid is\n   * traversed over cell at a time in a rows x columns grid fashion, although each\n   * cell insert can cover multiple elements in the grid - which is tracks using the\n   * aApplied array. Cell inserts in the grid will only occur where there isn't\n   * already a cell in that position.\n   *  @param {object} oSettings dataTables settings object\n   *  @param array {objects} aoSource Layout array from _fnDetectHeader\n   *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnDrawHead(oSettings, aoSource, bIncludeHidden) {\n    var i, iLen, j, jLen, k, kLen, n, nLocalTr;\n    var aoLocal = [];\n    var aApplied = [];\n    var iColumns = oSettings.aoColumns.length;\n    var iRowspan, iColspan;\n\n    if (!aoSource) {\n      return;\n    }\n\n    if (bIncludeHidden === undefined) {\n      bIncludeHidden = false;\n    }\n    /* Make a copy of the master layout array, but without the visible columns in it */\n\n\n    for (i = 0, iLen = aoSource.length; i < iLen; i++) {\n      aoLocal[i] = aoSource[i].slice();\n      aoLocal[i].nTr = aoSource[i].nTr;\n      /* Remove any columns which are currently hidden */\n\n      for (j = iColumns - 1; j >= 0; j--) {\n        if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {\n          aoLocal[i].splice(j, 1);\n        }\n      }\n      /* Prep the applied array - it needs an element for each row */\n\n\n      aApplied.push([]);\n    }\n\n    for (i = 0, iLen = aoLocal.length; i < iLen; i++) {\n      nLocalTr = aoLocal[i].nTr;\n      /* All cells are going to be replaced, so empty out the row */\n\n      if (nLocalTr) {\n        while (n = nLocalTr.firstChild) {\n          nLocalTr.removeChild(n);\n        }\n      }\n\n      for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {\n        iRowspan = 1;\n        iColspan = 1;\n        /* Check to see if there is already a cell (row/colspan) covering our target\n         * insert point. If there is, then there is nothing to do.\n         */\n\n        if (aApplied[i][j] === undefined) {\n          nLocalTr.appendChild(aoLocal[i][j].cell);\n          aApplied[i][j] = 1;\n          /* Expand the cell to cover as many rows as needed */\n\n          while (aoLocal[i + iRowspan] !== undefined && aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {\n            aApplied[i + iRowspan][j] = 1;\n            iRowspan++;\n          }\n          /* Expand the cell to cover as many columns as needed */\n\n\n          while (aoLocal[i][j + iColspan] !== undefined && aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {\n            /* Must update the applied array over the rows for the columns */\n            for (k = 0; k < iRowspan; k++) {\n              aApplied[i + k][j + iColspan] = 1;\n            }\n\n            iColspan++;\n          }\n          /* Do the actual expansion in the DOM */\n\n\n          $(aoLocal[i][j].cell).attr('rowspan', iRowspan).attr('colspan', iColspan);\n        }\n      }\n    }\n  }\n  /**\n   * Insert the required TR nodes into the table for display\n   *  @param {object} oSettings dataTables settings object\n   *  @param ajaxComplete true after ajax call to complete rendering\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnDraw(oSettings, ajaxComplete) {\n    /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n    var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n\n    if ($.inArray(false, aPreDraw) !== -1) {\n      _fnProcessingDisplay(oSettings, false);\n\n      return;\n    }\n\n    var i, iLen, n;\n    var anRows = [];\n    var iRowCount = 0;\n    var asStripeClasses = oSettings.asStripeClasses;\n    var iStripes = asStripeClasses.length;\n    var iOpenRows = oSettings.aoOpenRows.length;\n    var oLang = oSettings.oLanguage;\n    var iInitDisplayStart = oSettings.iInitDisplayStart;\n    var bServerSide = _fnDataSource(oSettings) == 'ssp';\n    var aiDisplay = oSettings.aiDisplay;\n    oSettings.bDrawing = true;\n    /* Check and see if we have an initial draw position from state saving */\n\n    if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n      oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;\n      oSettings.iInitDisplayStart = -1;\n    }\n\n    var iDisplayStart = oSettings._iDisplayStart;\n    var iDisplayEnd = oSettings.fnDisplayEnd();\n    /* Server-side processing draw intercept */\n\n    if (oSettings.bDeferLoading) {\n      oSettings.bDeferLoading = false;\n      oSettings.iDraw++;\n\n      _fnProcessingDisplay(oSettings, false);\n    } else if (!bServerSide) {\n      oSettings.iDraw++;\n    } else if (!oSettings.bDestroying && !ajaxComplete) {\n      _fnAjaxUpdate(oSettings);\n\n      return;\n    }\n\n    if (aiDisplay.length !== 0) {\n      var iStart = bServerSide ? 0 : iDisplayStart;\n      var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n      for (var j = iStart; j < iEnd; j++) {\n        var iDataIndex = aiDisplay[j];\n        var aoData = oSettings.aoData[iDataIndex];\n\n        if (aoData.nTr === null) {\n          _fnCreateTr(oSettings, iDataIndex);\n        }\n\n        var nRow = aoData.nTr;\n        /* Remove the old striping classes and then add the new one */\n\n        if (iStripes !== 0) {\n          var sStripe = asStripeClasses[iRowCount % iStripes];\n\n          if (aoData._sRowStripe != sStripe) {\n            $(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);\n            aoData._sRowStripe = sStripe;\n          }\n        } // Row callback functions - might want to manipulate the row\n        // iRowCount and j are not currently documented. Are they at all\n        // useful?\n\n\n        _fnCallbackFire(oSettings, 'aoRowCallback', null, [nRow, aoData._aData, iRowCount, j, iDataIndex]);\n\n        anRows.push(nRow);\n        iRowCount++;\n      }\n    } else {\n      /* Table is empty - create a row with an empty message in it */\n      var sZero = oLang.sZeroRecords;\n\n      if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax') {\n        sZero = oLang.sLoadingRecords;\n      } else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {\n        sZero = oLang.sEmptyTable;\n      }\n\n      anRows[0] = $('<tr/>', {\n        'class': iStripes ? asStripeClasses[0] : ''\n      }).append($('<td />', {\n        'valign': 'top',\n        'colSpan': _fnVisbleColumns(oSettings),\n        'class': oSettings.oClasses.sRowEmpty\n      }).html(sZero))[0];\n    }\n    /* Header and footer callbacks */\n\n\n    _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n    _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n    var body = $(oSettings.nTBody);\n    body.children().detach();\n    body.append($(anRows));\n    /* Call all required callback functions for the end of a draw */\n\n    _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);\n    /* Draw is complete, sorting and filtering must be as well */\n\n\n    oSettings.bSorted = false;\n    oSettings.bFiltered = false;\n    oSettings.bDrawing = false;\n  }\n  /**\n   * Redraw the table - taking account of the various features which are enabled\n   *  @param {object} oSettings dataTables settings object\n   *  @param {boolean} [holdPosition] Keep the current paging position. By default\n   *    the paging is reset to the first page\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnReDraw(settings, holdPosition) {\n    var features = settings.oFeatures,\n        sort = features.bSort,\n        filter = features.bFilter;\n\n    if (sort) {\n      _fnSort(settings);\n    }\n\n    if (filter) {\n      _fnFilterComplete(settings, settings.oPreviousSearch);\n    } else {\n      // No filtering, so we want to just use the display master\n      settings.aiDisplay = settings.aiDisplayMaster.slice();\n    }\n\n    if (holdPosition !== true) {\n      settings._iDisplayStart = 0;\n    } // Let any modules know about the draw hold position state (used by\n    // scrolling internally)\n\n\n    settings._drawHold = holdPosition;\n\n    _fnDraw(settings);\n\n    settings._drawHold = false;\n  }\n  /**\n   * Add the options to the page HTML for the table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnAddOptionsHtml(oSettings) {\n    var classes = oSettings.oClasses;\n    var table = $(oSettings.nTable);\n    var holding = $('<div/>').insertBefore(table); // Holding element for speed\n\n    var features = oSettings.oFeatures; // All DataTables are wrapped in a div\n\n    var insert = $('<div/>', {\n      id: oSettings.sTableId + '_wrapper',\n      'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)\n    });\n    oSettings.nHolding = holding[0];\n    oSettings.nTableWrapper = insert[0];\n    oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n    /* Loop over the user set positioning and place the elements as needed */\n\n    var aDom = oSettings.sDom.split('');\n    var featureNode, cOption, nNewNode, cNext, sAttr, j;\n\n    for (var i = 0; i < aDom.length; i++) {\n      featureNode = null;\n      cOption = aDom[i];\n\n      if (cOption == '<') {\n        /* New container div */\n        nNewNode = $('<div/>')[0];\n        /* Check to see if we should append an id and/or a class name to the container */\n\n        cNext = aDom[i + 1];\n\n        if (cNext == \"'\" || cNext == '\"') {\n          sAttr = \"\";\n          j = 2;\n\n          while (aDom[i + j] != cNext) {\n            sAttr += aDom[i + j];\n            j++;\n          }\n          /* Replace jQuery UI constants @todo depreciated */\n\n\n          if (sAttr == \"H\") {\n            sAttr = classes.sJUIHeader;\n          } else if (sAttr == \"F\") {\n            sAttr = classes.sJUIFooter;\n          }\n          /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n           * breaks the string into parts and applies them as needed\n           */\n\n\n          if (sAttr.indexOf('.') != -1) {\n            var aSplit = sAttr.split('.');\n            nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);\n            nNewNode.className = aSplit[1];\n          } else if (sAttr.charAt(0) == \"#\") {\n            nNewNode.id = sAttr.substr(1, sAttr.length - 1);\n          } else {\n            nNewNode.className = sAttr;\n          }\n\n          i += j;\n          /* Move along the position array */\n        }\n\n        insert.append(nNewNode);\n        insert = $(nNewNode);\n      } else if (cOption == '>') {\n        /* End container div */\n        insert = insert.parent();\n      } // @todo Move options into their own plugins?\n      else if (cOption == 'l' && features.bPaginate && features.bLengthChange) {\n        /* Length */\n        featureNode = _fnFeatureHtmlLength(oSettings);\n      } else if (cOption == 'f' && features.bFilter) {\n        /* Filter */\n        featureNode = _fnFeatureHtmlFilter(oSettings);\n      } else if (cOption == 'r' && features.bProcessing) {\n        /* pRocessing */\n        featureNode = _fnFeatureHtmlProcessing(oSettings);\n      } else if (cOption == 't') {\n        /* Table */\n        featureNode = _fnFeatureHtmlTable(oSettings);\n      } else if (cOption == 'i' && features.bInfo) {\n        /* Info */\n        featureNode = _fnFeatureHtmlInfo(oSettings);\n      } else if (cOption == 'p' && features.bPaginate) {\n        /* Pagination */\n        featureNode = _fnFeatureHtmlPaginate(oSettings);\n      } else if (DataTable.ext.feature.length !== 0) {\n        /* Plug-in features */\n        var aoFeatures = DataTable.ext.feature;\n\n        for (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {\n          if (cOption == aoFeatures[k].cFeature) {\n            featureNode = aoFeatures[k].fnInit(oSettings);\n            break;\n          }\n        }\n      }\n      /* Add to the 2D features array */\n\n\n      if (featureNode) {\n        var aanFeatures = oSettings.aanFeatures;\n\n        if (!aanFeatures[cOption]) {\n          aanFeatures[cOption] = [];\n        }\n\n        aanFeatures[cOption].push(featureNode);\n        insert.append(featureNode);\n      }\n    }\n    /* Built our DOM structure - replace the holding div with what we want */\n\n\n    holding.replaceWith(insert);\n    oSettings.nHolding = null;\n  }\n  /**\n   * Use the DOM source to create up an array of header cells. The idea here is to\n   * create a layout grid (array) of rows x columns, which contains a reference\n   * to the cell that that point in the grid (regardless of col/rowspan), such that\n   * any column / row could be removed and the new grid constructed\n   *  @param array {object} aLayout Array to store the calculated layout in\n   *  @param {node} nThead The header/footer element for the table\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnDetectHeader(aLayout, nThead) {\n    var nTrs = $(nThead).children('tr');\n    var nTr, nCell;\n    var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n    var bUnique;\n\n    var fnShiftCol = function fnShiftCol(a, i, j) {\n      var k = a[i];\n\n      while (k[j]) {\n        j++;\n      }\n\n      return j;\n    };\n\n    aLayout.splice(0, aLayout.length);\n    /* We know how many rows there are in the layout - so prep it */\n\n    for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n      aLayout.push([]);\n    }\n    /* Calculate a layout array */\n\n\n    for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n      nTr = nTrs[i];\n      iColumn = 0;\n      /* For every cell in the row... */\n\n      nCell = nTr.firstChild;\n\n      while (nCell) {\n        if (nCell.nodeName.toUpperCase() == \"TD\" || nCell.nodeName.toUpperCase() == \"TH\") {\n          /* Get the col and rowspan attributes from the DOM and sanitise them */\n          iColspan = nCell.getAttribute('colspan') * 1;\n          iRowspan = nCell.getAttribute('rowspan') * 1;\n          iColspan = !iColspan || iColspan === 0 || iColspan === 1 ? 1 : iColspan;\n          iRowspan = !iRowspan || iRowspan === 0 || iRowspan === 1 ? 1 : iRowspan;\n          /* There might be colspan cells already in this row, so shift our target\n           * accordingly\n           */\n\n          iColShifted = fnShiftCol(aLayout, i, iColumn);\n          /* Cache calculation for unique columns */\n\n          bUnique = iColspan === 1 ? true : false;\n          /* If there is col / rowspan, copy the information into the layout grid */\n\n          for (l = 0; l < iColspan; l++) {\n            for (k = 0; k < iRowspan; k++) {\n              aLayout[i + k][iColShifted + l] = {\n                \"cell\": nCell,\n                \"unique\": bUnique\n              };\n              aLayout[i + k].nTr = nTr;\n            }\n          }\n        }\n\n        nCell = nCell.nextSibling;\n      }\n    }\n  }\n  /**\n   * Get an array of unique th elements, one for each column\n   *  @param {object} oSettings dataTables settings object\n   *  @param {node} nHeader automatically detect the layout from this node - optional\n   *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n   *  @returns array {node} aReturn list of unique th's\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnGetUniqueThs(oSettings, nHeader, aLayout) {\n    var aReturn = [];\n\n    if (!aLayout) {\n      aLayout = oSettings.aoHeader;\n\n      if (nHeader) {\n        aLayout = [];\n\n        _fnDetectHeader(aLayout, nHeader);\n      }\n    }\n\n    for (var i = 0, iLen = aLayout.length; i < iLen; i++) {\n      for (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {\n        if (aLayout[i][j].unique && (!aReturn[j] || !oSettings.bSortCellsTop)) {\n          aReturn[j] = aLayout[i][j].cell;\n        }\n      }\n    }\n\n    return aReturn;\n  }\n  /**\n   * Create an Ajax call based on the table's settings, taking into account that\n   * parameters can have multiple forms, and backwards compatibility.\n   *\n   * @param {object} oSettings dataTables settings object\n   * @param {array} data Data to send to the server, required by\n   *     DataTables - may be augmented by developer callbacks\n   * @param {function} fn Callback function to run when data is obtained\n   */\n\n\n  function _fnBuildAjax(oSettings, data, fn) {\n    // Compatibility with 1.9-, allow fnServerData and event to manipulate\n    _fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data]); // Convert to object based for 1.10+ if using the old array scheme which can\n    // come from server-side processing or serverParams\n\n\n    if (data && Array.isArray(data)) {\n      var tmp = {};\n      var rbracket = /(.*?)\\[\\]$/;\n      $.each(data, function (key, val) {\n        var match = val.name.match(rbracket);\n\n        if (match) {\n          // Support for arrays\n          var name = match[0];\n\n          if (!tmp[name]) {\n            tmp[name] = [];\n          }\n\n          tmp[name].push(val.value);\n        } else {\n          tmp[val.name] = val.value;\n        }\n      });\n      data = tmp;\n    }\n\n    var ajaxData;\n    var ajax = oSettings.ajax;\n    var instance = oSettings.oInstance;\n\n    var callback = function callback(json) {\n      var status = oSettings.jqXhr ? oSettings.jqXhr.status : null;\n\n      if (json === null || typeof status === 'number' && status == 204) {\n        json = {};\n\n        _fnAjaxDataSrc(oSettings, json, []);\n      }\n\n      var error = json.error || json.sError;\n\n      if (error) {\n        _fnLog(oSettings, 0, error);\n      }\n\n      oSettings.json = json;\n\n      _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR]);\n\n      fn(json);\n    };\n\n    if ($.isPlainObject(ajax) && ajax.data) {\n      ajaxData = ajax.data;\n      var newData = typeof ajaxData === 'function' ? ajaxData(data, oSettings) : // fn can manipulate data or return\n      ajaxData; // an object object or array to merge\n      // If the function returned something, use that alone\n\n      data = typeof ajaxData === 'function' && newData ? newData : $.extend(true, data, newData); // Remove the data property as we've resolved it already and don't want\n      // jQuery to do it again (it is restored at the end of the function)\n\n      delete ajax.data;\n    }\n\n    var baseAjax = {\n      \"data\": data,\n      \"success\": callback,\n      \"dataType\": \"json\",\n      \"cache\": false,\n      \"type\": oSettings.sServerMethod,\n      \"error\": function error(xhr, _error, thrown) {\n        var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR]);\n\n        if ($.inArray(true, ret) === -1) {\n          if (_error == \"parsererror\") {\n            _fnLog(oSettings, 0, 'Invalid JSON response', 1);\n          } else if (xhr.readyState === 4) {\n            _fnLog(oSettings, 0, 'Ajax error', 7);\n          }\n        }\n\n        _fnProcessingDisplay(oSettings, false);\n      }\n    }; // Store the data submitted for the API\n\n    oSettings.oAjaxData = data; // Allow plug-ins and external processes to modify the data\n\n    _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data]);\n\n    if (oSettings.fnServerData) {\n      // DataTables 1.9- compatibility\n      oSettings.fnServerData.call(instance, oSettings.sAjaxSource, $.map(data, function (val, key) {\n        // Need to convert back to 1.9 trad format\n        return {\n          name: key,\n          value: val\n        };\n      }), callback, oSettings);\n    } else if (oSettings.sAjaxSource || typeof ajax === 'string') {\n      // DataTables 1.9- compatibility\n      oSettings.jqXHR = $.ajax($.extend(baseAjax, {\n        url: ajax || oSettings.sAjaxSource\n      }));\n    } else if (typeof ajax === 'function') {\n      // Is a function - let the caller define what needs to be done\n      oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n    } else {\n      // Object to extend the base settings\n      oSettings.jqXHR = $.ajax($.extend(baseAjax, ajax)); // Restore for next time around\n\n      ajax.data = ajaxData;\n    }\n  }\n  /**\n   * Update the table using an Ajax call\n   *  @param {object} settings dataTables settings object\n   *  @returns {boolean} Block the table drawing or not\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnAjaxUpdate(settings) {\n    settings.iDraw++;\n\n    _fnProcessingDisplay(settings, true);\n\n    _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n      _fnAjaxUpdateDraw(settings, json);\n    });\n  }\n  /**\n   * Build up the parameters in an object needed for a server-side processing\n   * request. Note that this is basically done twice, is different ways - a modern\n   * method which is used by default in DataTables 1.10 which uses objects and\n   * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n   * the sAjaxSource option is used in the initialisation, or the legacyAjax\n   * option is set.\n   *  @param {object} oSettings dataTables settings object\n   *  @returns {bool} block the table drawing or not\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnAjaxParameters(settings) {\n    var columns = settings.aoColumns,\n        columnCount = columns.length,\n        features = settings.oFeatures,\n        preSearch = settings.oPreviousSearch,\n        preColSearch = settings.aoPreSearchCols,\n        i,\n        data = [],\n        dataProp,\n        column,\n        columnSearch,\n        sort = _fnSortFlatten(settings),\n        displayStart = settings._iDisplayStart,\n        displayLength = features.bPaginate !== false ? settings._iDisplayLength : -1;\n\n    var param = function param(name, value) {\n      data.push({\n        'name': name,\n        'value': value\n      });\n    }; // DataTables 1.9- compatible method\n\n\n    param('sEcho', settings.iDraw);\n    param('iColumns', columnCount);\n    param('sColumns', _pluck(columns, 'sName').join(','));\n    param('iDisplayStart', displayStart);\n    param('iDisplayLength', displayLength); // DataTables 1.10+ method\n\n    var d = {\n      draw: settings.iDraw,\n      columns: [],\n      order: [],\n      start: displayStart,\n      length: displayLength,\n      search: {\n        value: preSearch.sSearch,\n        regex: preSearch.bRegex\n      }\n    };\n\n    for (i = 0; i < columnCount; i++) {\n      column = columns[i];\n      columnSearch = preColSearch[i];\n      dataProp = typeof column.mData == \"function\" ? 'function' : column.mData;\n      d.columns.push({\n        data: dataProp,\n        name: column.sName,\n        searchable: column.bSearchable,\n        orderable: column.bSortable,\n        search: {\n          value: columnSearch.sSearch,\n          regex: columnSearch.bRegex\n        }\n      });\n      param(\"mDataProp_\" + i, dataProp);\n\n      if (features.bFilter) {\n        param('sSearch_' + i, columnSearch.sSearch);\n        param('bRegex_' + i, columnSearch.bRegex);\n        param('bSearchable_' + i, column.bSearchable);\n      }\n\n      if (features.bSort) {\n        param('bSortable_' + i, column.bSortable);\n      }\n    }\n\n    if (features.bFilter) {\n      param('sSearch', preSearch.sSearch);\n      param('bRegex', preSearch.bRegex);\n    }\n\n    if (features.bSort) {\n      $.each(sort, function (i, val) {\n        d.order.push({\n          column: val.col,\n          dir: val.dir\n        });\n        param('iSortCol_' + i, val.col);\n        param('sSortDir_' + i, val.dir);\n      });\n      param('iSortingCols', sort.length);\n    } // If the legacy.ajax parameter is null, then we automatically decide which\n    // form to use, based on sAjaxSource\n\n\n    var legacy = DataTable.ext.legacy.ajax;\n\n    if (legacy === null) {\n      return settings.sAjaxSource ? data : d;\n    } // Otherwise, if legacy has been specified then we use that to decide on the\n    // form\n\n\n    return legacy ? data : d;\n  }\n  /**\n   * Data the data from the server (nuking the old) and redraw the table\n   *  @param {object} oSettings dataTables settings object\n   *  @param {object} json json data return from the server.\n   *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n   *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n   *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n   *  @param {array} json.aaData The data to display on this page\n   *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnAjaxUpdateDraw(settings, json) {\n    // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n    // Support both\n    var compat = function compat(old, modern) {\n      return json[old] !== undefined ? json[old] : json[modern];\n    };\n\n    var data = _fnAjaxDataSrc(settings, json);\n\n    var draw = compat('sEcho', 'draw');\n    var recordsTotal = compat('iTotalRecords', 'recordsTotal');\n    var recordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered');\n\n    if (draw !== undefined) {\n      // Protect against out of sequence returns\n      if (draw * 1 < settings.iDraw) {\n        return;\n      }\n\n      settings.iDraw = draw * 1;\n    } // No data in returned object, so rather than an array, we show an empty table\n\n\n    if (!data) {\n      data = [];\n    }\n\n    _fnClearTable(settings);\n\n    settings._iRecordsTotal = parseInt(recordsTotal, 10);\n    settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n    for (var i = 0, ien = data.length; i < ien; i++) {\n      _fnAddData(settings, data[i]);\n    }\n\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n    _fnDraw(settings, true);\n\n    if (!settings._bInitComplete) {\n      _fnInitComplete(settings, json);\n    }\n\n    _fnProcessingDisplay(settings, false);\n  }\n  /**\n   * Get the data from the JSON data source to use for drawing a table. Using\n   * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n   * source object, or from a processing function.\n   *  @param {object} oSettings dataTables settings object\n   *  @param  {object} json Data source object / array from the server\n   *  @return {array} Array of data to use\n   */\n\n\n  function _fnAjaxDataSrc(oSettings, json, write) {\n    var dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ? oSettings.ajax.dataSrc : oSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n    if (!write) {\n      if (dataSrc === 'data') {\n        // If the default, then we still want to support the old style, and safely ignore\n        // it if possible\n        return json.aaData || json[dataSrc];\n      }\n\n      return dataSrc !== \"\" ? _fnGetObjectDataFn(dataSrc)(json) : json;\n    } // set\n\n\n    _fnSetObjectDataFn(dataSrc)(json, write);\n  }\n  /**\n   * Generate the node required for filtering text\n   *  @returns {node} Filter control element\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFeatureHtmlFilter(settings) {\n    var classes = settings.oClasses;\n    var tableId = settings.sTableId;\n    var language = settings.oLanguage;\n    var previousSearch = settings.oPreviousSearch;\n    var features = settings.aanFeatures;\n    var input = '<input type=\"search\" class=\"' + classes.sFilterInput + '\"/>';\n    var str = language.sSearch;\n    str = str.match(/_INPUT_/) ? str.replace('_INPUT_', input) : str + input;\n    var filter = $('<div/>', {\n      'id': !features.f ? tableId + '_filter' : null,\n      'class': classes.sFilter\n    }).append($('<label/>').append(str));\n\n    var searchFn = function searchFn(event) {\n      /* Update all other filter input elements for the new display */\n      var n = features.f;\n      var val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\n      if (previousSearch.return && event.key !== \"Enter\") {\n        return;\n      }\n      /* Now do the filter */\n\n\n      if (val != previousSearch.sSearch) {\n        _fnFilterComplete(settings, {\n          \"sSearch\": val,\n          \"bRegex\": previousSearch.bRegex,\n          \"bSmart\": previousSearch.bSmart,\n          \"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n          \"return\": previousSearch.return\n        }); // Need to redraw, without resorting\n\n\n        settings._iDisplayStart = 0;\n\n        _fnDraw(settings);\n      }\n    };\n\n    var searchDelay = settings.searchDelay !== null ? settings.searchDelay : _fnDataSource(settings) === 'ssp' ? 400 : 0;\n    var jqFilter = $('input', filter).val(previousSearch.sSearch).attr('placeholder', language.sSearchPlaceholder).on('keyup.DT search.DT input.DT paste.DT cut.DT', searchDelay ? _fnThrottle(searchFn, searchDelay) : searchFn).on('mouseup', function (e) {\n      // Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n      // on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n      // checks the value to see if it has changed. In other browsers it won't have.\n      setTimeout(function () {\n        searchFn.call(jqFilter[0], e);\n      }, 10);\n    }).on('keypress.DT', function (e) {\n      /* Prevent form submission */\n      if (e.keyCode == 13) {\n        return false;\n      }\n    }).attr('aria-controls', tableId); // Update the input elements whenever the table is filtered\n\n    $(settings.nTable).on('search.dt.DT', function (ev, s) {\n      if (settings === s) {\n        // IE9 throws an 'unknown error' if document.activeElement is used\n        // inside an iframe or frame...\n        try {\n          if (jqFilter[0] !== document.activeElement) {\n            jqFilter.val(previousSearch.sSearch);\n          }\n        } catch (e) {}\n      }\n    });\n    return filter[0];\n  }\n  /**\n   * Filter the table using both the global filter and column based filtering\n   *  @param {object} oSettings dataTables settings object\n   *  @param {object} oSearch search information\n   *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFilterComplete(oSettings, oInput, iForce) {\n    var oPrevSearch = oSettings.oPreviousSearch;\n    var aoPrevSearch = oSettings.aoPreSearchCols;\n\n    var fnSaveFilter = function fnSaveFilter(oFilter) {\n      /* Save the filtering values */\n      oPrevSearch.sSearch = oFilter.sSearch;\n      oPrevSearch.bRegex = oFilter.bRegex;\n      oPrevSearch.bSmart = oFilter.bSmart;\n      oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n      oPrevSearch.return = oFilter.return;\n    };\n\n    var fnRegex = function fnRegex(o) {\n      // Backwards compatibility with the bEscapeRegex option\n      return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n    }; // Resolve any column types that are unknown due to addition or invalidation\n    // @todo As per sort - can this be moved into an event handler?\n\n\n    _fnColumnTypes(oSettings);\n    /* In server-side processing all filtering is done by the server, so no point hanging around here */\n\n\n    if (_fnDataSource(oSettings) != 'ssp') {\n      /* Global filter */\n      _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return);\n\n      fnSaveFilter(oInput);\n      /* Now do the individual column filter */\n\n      for (var i = 0; i < aoPrevSearch.length; i++) {\n        _fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]), aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);\n      }\n      /* Custom filtering */\n\n\n      _fnFilterCustom(oSettings);\n    } else {\n      fnSaveFilter(oInput);\n    }\n    /* Tell the draw function we have been filtering */\n\n\n    oSettings.bFiltered = true;\n\n    _fnCallbackFire(oSettings, null, 'search', [oSettings]);\n  }\n  /**\n   * Apply custom filtering functions\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFilterCustom(settings) {\n    var filters = DataTable.ext.search;\n    var displayRows = settings.aiDisplay;\n    var row, rowIdx;\n\n    for (var i = 0, ien = filters.length; i < ien; i++) {\n      var rows = []; // Loop over each row and see if it should be included\n\n      for (var j = 0, jen = displayRows.length; j < jen; j++) {\n        rowIdx = displayRows[j];\n        row = settings.aoData[rowIdx];\n\n        if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n          rows.push(rowIdx);\n        }\n      } // So the array reference doesn't break set the results into the\n      // existing array\n\n\n      displayRows.length = 0;\n      $.merge(displayRows, rows);\n    }\n  }\n  /**\n   * Filter the table on a per-column basis\n   *  @param {object} oSettings dataTables settings object\n   *  @param {string} sInput string to filter on\n   *  @param {int} iColumn column to filter\n   *  @param {bool} bRegex treat search string as a regular expression or not\n   *  @param {bool} bSmart use smart filtering or not\n   *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {\n    if (searchStr === '') {\n      return;\n    }\n\n    var data;\n    var out = [];\n    var display = settings.aiDisplay;\n\n    var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);\n\n    for (var i = 0; i < display.length; i++) {\n      data = settings.aoData[display[i]]._aFilterData[colIdx];\n\n      if (rpSearch.test(data)) {\n        out.push(display[i]);\n      }\n    }\n\n    settings.aiDisplay = out;\n  }\n  /**\n   * Filter the data table based on user input and draw the table\n   *  @param {object} settings dataTables settings object\n   *  @param {string} input string to filter on\n   *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n   *  @param {bool} regex treat as a regular expression or not\n   *  @param {bool} smart perform smart filtering or not\n   *  @param {bool} caseInsensitive Do case insensitive matching or not\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFilter(settings, input, force, regex, smart, caseInsensitive) {\n    var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);\n\n    var prevSearch = settings.oPreviousSearch.sSearch;\n    var displayMaster = settings.aiDisplayMaster;\n    var display, invalidated, i;\n    var filtered = []; // Need to take account of custom filtering functions - always filter\n\n    if (DataTable.ext.search.length !== 0) {\n      force = true;\n    } // Check if any of the rows were invalidated\n\n\n    invalidated = _fnFilterData(settings); // If the input is blank - we just want the full data set\n\n    if (input.length <= 0) {\n      settings.aiDisplay = displayMaster.slice();\n    } else {\n      // New search - start from the master array\n      if (invalidated || force || regex || prevSearch.length > input.length || input.indexOf(prevSearch) !== 0 || settings.bSorted // On resort, the display master needs to be\n      // re-filtered since indexes will have changed\n      ) {\n        settings.aiDisplay = displayMaster.slice();\n      } // Search the display array\n\n\n      display = settings.aiDisplay;\n\n      for (i = 0; i < display.length; i++) {\n        if (rpSearch.test(settings.aoData[display[i]]._sFilterRow)) {\n          filtered.push(display[i]);\n        }\n      }\n\n      settings.aiDisplay = filtered;\n    }\n  }\n  /**\n   * Build a regular expression object suitable for searching a table\n   *  @param {string} sSearch string to search for\n   *  @param {bool} bRegex treat as a regular expression or not\n   *  @param {bool} bSmart perform smart filtering or not\n   *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n   *  @returns {RegExp} constructed object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {\n    search = regex ? search : _fnEscapeRegex(search);\n\n    if (smart) {\n      /* For smart filtering we want to allow the search to work regardless of\n       * word order. We also want double quoted text to be preserved, so word\n       * order is important - a la google. So this is what we want to\n       * generate:\n       * \n       * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n       */\n      var a = $.map(search.match(/\"[^\"]+\"|[^ ]+/g) || [''], function (word) {\n        if (word.charAt(0) === '\"') {\n          var m = word.match(/^\"(.*)\"$/);\n          word = m ? m[1] : word;\n        }\n\n        return word.replace('\"', '');\n      });\n      search = '^(?=.*?' + a.join(')(?=.*?') + ').*$';\n    }\n\n    return new RegExp(search, caseInsensitive ? 'i' : '');\n  }\n  /**\n   * Escape a string such that it can be used in a regular expression\n   *  @param {string} sVal string to escape\n   *  @returns {string} escaped string\n   *  @memberof DataTable#oApi\n   */\n\n\n  var _fnEscapeRegex = DataTable.util.escapeRegex;\n  var __filter_div = $('<div>')[0];\n\n  var __filter_div_textContent = __filter_div.textContent !== undefined; // Update the filtering data for each row if needed (by invalidation or first run)\n\n\n  function _fnFilterData(settings) {\n    var columns = settings.aoColumns;\n    var column;\n    var i, j, ien, jen, filterData, cellData, row;\n    var wasInvalidated = false;\n\n    for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n      row = settings.aoData[i];\n\n      if (!row._aFilterData) {\n        filterData = [];\n\n        for (j = 0, jen = columns.length; j < jen; j++) {\n          column = columns[j];\n\n          if (column.bSearchable) {\n            cellData = _fnGetCellData(settings, i, j, 'filter'); // Search in DataTables 1.10 is string based. In 1.11 this\n            // should be altered to also allow strict type checking.\n\n            if (cellData === null) {\n              cellData = '';\n            }\n\n            if (typeof cellData !== 'string' && cellData.toString) {\n              cellData = cellData.toString();\n            }\n          } else {\n            cellData = '';\n          } // If it looks like there is an HTML entity in the string,\n          // attempt to decode it so sorting works as expected. Note that\n          // we could use a single line of jQuery to do this, but the DOM\n          // method used here is much faster http://jsperf.com/html-decode\n\n\n          if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n            __filter_div.innerHTML = cellData;\n            cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText;\n          }\n\n          if (cellData.replace) {\n            cellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n          }\n\n          filterData.push(cellData);\n        }\n\n        row._aFilterData = filterData;\n        row._sFilterRow = filterData.join('  ');\n        wasInvalidated = true;\n      }\n    }\n\n    return wasInvalidated;\n  }\n  /**\n   * Convert from the internal Hungarian notation to camelCase for external\n   * interaction\n   *  @param {object} obj Object to convert\n   *  @returns {object} Inverted object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnSearchToCamel(obj) {\n    return {\n      search: obj.sSearch,\n      smart: obj.bSmart,\n      regex: obj.bRegex,\n      caseInsensitive: obj.bCaseInsensitive\n    };\n  }\n  /**\n   * Convert from camelCase notation to the internal Hungarian. We could use the\n   * Hungarian convert function here, but this is cleaner\n   *  @param {object} obj Object to convert\n   *  @returns {object} Inverted object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnSearchToHung(obj) {\n    return {\n      sSearch: obj.search,\n      bSmart: obj.smart,\n      bRegex: obj.regex,\n      bCaseInsensitive: obj.caseInsensitive\n    };\n  }\n  /**\n   * Generate the node required for the info display\n   *  @param {object} oSettings dataTables settings object\n   *  @returns {node} Information element\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFeatureHtmlInfo(settings) {\n    var tid = settings.sTableId,\n        nodes = settings.aanFeatures.i,\n        n = $('<div/>', {\n      'class': settings.oClasses.sInfo,\n      'id': !nodes ? tid + '_info' : null\n    });\n\n    if (!nodes) {\n      // Update display on each draw\n      settings.aoDrawCallback.push({\n        \"fn\": _fnUpdateInfo,\n        \"sName\": \"information\"\n      });\n      n.attr('role', 'status').attr('aria-live', 'polite'); // Table is described by our info div\n\n      $(settings.nTable).attr('aria-describedby', tid + '_info');\n    }\n\n    return n[0];\n  }\n  /**\n   * Update the information elements in the display\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnUpdateInfo(settings) {\n    /* Show information about the table */\n    var nodes = settings.aanFeatures.i;\n\n    if (nodes.length === 0) {\n      return;\n    }\n\n    var lang = settings.oLanguage,\n        start = settings._iDisplayStart + 1,\n        end = settings.fnDisplayEnd(),\n        max = settings.fnRecordsTotal(),\n        total = settings.fnRecordsDisplay(),\n        out = total ? lang.sInfo : lang.sInfoEmpty;\n\n    if (total !== max) {\n      /* Record set after filtering */\n      out += ' ' + lang.sInfoFiltered;\n    } // Convert the macros\n\n\n    out += lang.sInfoPostFix;\n    out = _fnInfoMacros(settings, out);\n    var callback = lang.fnInfoCallback;\n\n    if (callback !== null) {\n      out = callback.call(settings.oInstance, settings, start, end, max, total, out);\n    }\n\n    $(nodes).html(out);\n  }\n\n  function _fnInfoMacros(settings, str) {\n    // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n    // internally\n    var formatter = settings.fnFormatNumber,\n        start = settings._iDisplayStart + 1,\n        len = settings._iDisplayLength,\n        vis = settings.fnRecordsDisplay(),\n        all = len === -1;\n    return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));\n  }\n  /**\n   * Draw the table for the first time, adding all required features\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnInitialise(settings) {\n    var i,\n        iLen,\n        iAjaxStart = settings.iInitDisplayStart;\n    var columns = settings.aoColumns,\n        column;\n    var features = settings.oFeatures;\n    var deferLoading = settings.bDeferLoading; // value modified by the draw\n\n    /* Ensure that the table data is fully initialised */\n\n    if (!settings.bInitialised) {\n      setTimeout(function () {\n        _fnInitialise(settings);\n      }, 200);\n      return;\n    }\n    /* Show the display HTML options */\n\n\n    _fnAddOptionsHtml(settings);\n    /* Build and draw the header / footer for the table */\n\n\n    _fnBuildHead(settings);\n\n    _fnDrawHead(settings, settings.aoHeader);\n\n    _fnDrawHead(settings, settings.aoFooter);\n    /* Okay to show that something is going on now */\n\n\n    _fnProcessingDisplay(settings, true);\n    /* Calculate sizes for columns */\n\n\n    if (features.bAutoWidth) {\n      _fnCalculateColumnWidths(settings);\n    }\n\n    for (i = 0, iLen = columns.length; i < iLen; i++) {\n      column = columns[i];\n\n      if (column.sWidth) {\n        column.nTh.style.width = _fnStringToCss(column.sWidth);\n      }\n    }\n\n    _fnCallbackFire(settings, null, 'preInit', [settings]); // If there is default sorting required - let's do it. The sort function\n    // will do the drawing for us. Otherwise we draw the table regardless of the\n    // Ajax source - this allows the table to look initialised for Ajax sourcing\n    // data (show 'loading' message possibly)\n\n\n    _fnReDraw(settings); // Server-side processing init complete is done by _fnAjaxUpdateDraw\n\n\n    var dataSrc = _fnDataSource(settings);\n\n    if (dataSrc != 'ssp' || deferLoading) {\n      // if there is an ajax source load the data\n      if (dataSrc == 'ajax') {\n        _fnBuildAjax(settings, [], function (json) {\n          var aData = _fnAjaxDataSrc(settings, json); // Got the data - add it to the table\n\n\n          for (i = 0; i < aData.length; i++) {\n            _fnAddData(settings, aData[i]);\n          } // Reset the init display for cookie saving. We've already done\n          // a filter, and therefore cleared it before. So we need to make\n          // it appear 'fresh'\n\n\n          settings.iInitDisplayStart = iAjaxStart;\n\n          _fnReDraw(settings);\n\n          _fnProcessingDisplay(settings, false);\n\n          _fnInitComplete(settings, json);\n        }, settings);\n      } else {\n        _fnProcessingDisplay(settings, false);\n\n        _fnInitComplete(settings);\n      }\n    }\n  }\n  /**\n   * Draw the table for the first time, adding all required features\n   *  @param {object} oSettings dataTables settings object\n   *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n   *    with client-side processing (optional)\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnInitComplete(settings, json) {\n    settings._bInitComplete = true; // When data was added after the initialisation (data or Ajax) we need to\n    // calculate the column sizing\n\n    if (json || settings.oInit.aaData) {\n      _fnAdjustColumnSizing(settings);\n    }\n\n    _fnCallbackFire(settings, null, 'plugin-init', [settings, json]);\n\n    _fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json]);\n  }\n\n  function _fnLengthChange(settings, val) {\n    var len = parseInt(val, 10);\n    settings._iDisplayLength = len;\n\n    _fnLengthOverflow(settings); // Fire length change event\n\n\n    _fnCallbackFire(settings, null, 'length', [settings, len]);\n  }\n  /**\n   * Generate the node required for user display length changing\n   *  @param {object} settings dataTables settings object\n   *  @returns {node} Display length feature node\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFeatureHtmlLength(settings) {\n    var classes = settings.oClasses,\n        tableId = settings.sTableId,\n        menu = settings.aLengthMenu,\n        d2 = Array.isArray(menu[0]),\n        lengths = d2 ? menu[0] : menu,\n        language = d2 ? menu[1] : menu;\n    var select = $('<select/>', {\n      'name': tableId + '_length',\n      'aria-controls': tableId,\n      'class': classes.sLengthSelect\n    });\n\n    for (var i = 0, ien = lengths.length; i < ien; i++) {\n      select[0][i] = new Option(typeof language[i] === 'number' ? settings.fnFormatNumber(language[i]) : language[i], lengths[i]);\n    }\n\n    var div = $('<div><label/></div>').addClass(classes.sLength);\n\n    if (!settings.aanFeatures.l) {\n      div[0].id = tableId + '_length';\n    }\n\n    div.children().append(settings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML)); // Can't use `select` variable as user might provide their own and the\n    // reference is broken by the use of outerHTML\n\n    $('select', div).val(settings._iDisplayLength).on('change.DT', function (e) {\n      _fnLengthChange(settings, $(this).val());\n\n      _fnDraw(settings);\n    }); // Update node value whenever anything changes the table's length\n\n    $(settings.nTable).on('length.dt.DT', function (e, s, len) {\n      if (settings === s) {\n        $('select', div).val(len);\n      }\n    });\n    return div[0];\n  }\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Note that most of the paging logic is done in\n   * DataTable.ext.pager\n   */\n\n  /**\n   * Generate the node required for default pagination\n   *  @param {object} oSettings dataTables settings object\n   *  @returns {node} Pagination feature node\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFeatureHtmlPaginate(settings) {\n    var type = settings.sPaginationType,\n        plugin = DataTable.ext.pager[type],\n        modern = typeof plugin === 'function',\n        redraw = function redraw(settings) {\n      _fnDraw(settings);\n    },\n        node = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],\n        features = settings.aanFeatures;\n\n    if (!modern) {\n      plugin.fnInit(settings, node, redraw);\n    }\n    /* Add a draw callback for the pagination on first instance, to update the paging display */\n\n\n    if (!features.p) {\n      node.id = settings.sTableId + '_paginate';\n      settings.aoDrawCallback.push({\n        \"fn\": function fn(settings) {\n          if (modern) {\n            var start = settings._iDisplayStart,\n                len = settings._iDisplayLength,\n                visRecords = settings.fnRecordsDisplay(),\n                all = len === -1,\n                page = all ? 0 : Math.ceil(start / len),\n                pages = all ? 1 : Math.ceil(visRecords / len),\n                buttons = plugin(page, pages),\n                i,\n                ien;\n\n            for (i = 0, ien = features.p.length; i < ien; i++) {\n              _fnRenderer(settings, 'pageButton')(settings, features.p[i], i, buttons, page, pages);\n            }\n          } else {\n            plugin.fnUpdate(settings, redraw);\n          }\n        },\n        \"sName\": \"pagination\"\n      });\n    }\n\n    return node;\n  }\n  /**\n   * Alter the display settings to change the page\n   *  @param {object} settings DataTables settings object\n   *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n   *    \"next\" or \"last\" or page number to jump to (integer)\n   *  @param [bool] redraw Automatically draw the update or not\n   *  @returns {bool} true page has changed, false - no change\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnPageChange(settings, action, redraw) {\n    var start = settings._iDisplayStart,\n        len = settings._iDisplayLength,\n        records = settings.fnRecordsDisplay();\n\n    if (records === 0 || len === -1) {\n      start = 0;\n    } else if (typeof action === \"number\") {\n      start = action * len;\n\n      if (start > records) {\n        start = 0;\n      }\n    } else if (action == \"first\") {\n      start = 0;\n    } else if (action == \"previous\") {\n      start = len >= 0 ? start - len : 0;\n\n      if (start < 0) {\n        start = 0;\n      }\n    } else if (action == \"next\") {\n      if (start + len < records) {\n        start += len;\n      }\n    } else if (action == \"last\") {\n      start = Math.floor((records - 1) / len) * len;\n    } else {\n      _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n    }\n\n    var changed = settings._iDisplayStart !== start;\n    settings._iDisplayStart = start;\n\n    if (changed) {\n      _fnCallbackFire(settings, null, 'page', [settings]);\n\n      if (redraw) {\n        _fnDraw(settings);\n      }\n    }\n\n    return changed;\n  }\n  /**\n   * Generate the node required for the processing node\n   *  @param {object} settings dataTables settings object\n   *  @returns {node} Processing element\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFeatureHtmlProcessing(settings) {\n    return $('<div/>', {\n      'id': !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,\n      'class': settings.oClasses.sProcessing\n    }).html(settings.oLanguage.sProcessing).insertBefore(settings.nTable)[0];\n  }\n  /**\n   * Display or hide the processing indicator\n   *  @param {object} settings dataTables settings object\n   *  @param {bool} show Show the processing indicator (true) or not (false)\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnProcessingDisplay(settings, show) {\n    if (settings.oFeatures.bProcessing) {\n      $(settings.aanFeatures.r).css('display', show ? 'block' : 'none');\n    }\n\n    _fnCallbackFire(settings, null, 'processing', [settings, show]);\n  }\n  /**\n   * Add any control elements for the table - specifically scrolling\n   *  @param {object} settings dataTables settings object\n   *  @returns {node} Node to add to the DOM\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnFeatureHtmlTable(settings) {\n    var table = $(settings.nTable); // Scrolling from here on in\n\n    var scroll = settings.oScroll;\n\n    if (scroll.sX === '' && scroll.sY === '') {\n      return settings.nTable;\n    }\n\n    var scrollX = scroll.sX;\n    var scrollY = scroll.sY;\n    var classes = settings.oClasses;\n    var caption = table.children('caption');\n    var captionSide = caption.length ? caption[0]._captionSide : null;\n    var headerClone = $(table[0].cloneNode(false));\n    var footerClone = $(table[0].cloneNode(false));\n    var footer = table.children('tfoot');\n    var _div = '<div/>';\n\n    var size = function size(s) {\n      return !s ? null : _fnStringToCss(s);\n    };\n\n    if (!footer.length) {\n      footer = null;\n    }\n    /*\n     * The HTML structure that we want to generate in this function is:\n     *  div - scroller\n     *    div - scroll head\n     *      div - scroll head inner\n     *        table - scroll head table\n     *          thead - thead\n     *    div - scroll body\n     *      table - table (master table)\n     *        thead - thead clone for sizing\n     *        tbody - tbody\n     *    div - scroll foot\n     *      div - scroll foot inner\n     *        table - scroll foot table\n     *          tfoot - tfoot\n     */\n\n\n    var scroller = $(_div, {\n      'class': classes.sScrollWrapper\n    }).append($(_div, {\n      'class': classes.sScrollHead\n    }).css({\n      overflow: 'hidden',\n      position: 'relative',\n      border: 0,\n      width: scrollX ? size(scrollX) : '100%'\n    }).append($(_div, {\n      'class': classes.sScrollHeadInner\n    }).css({\n      'box-sizing': 'content-box',\n      width: scroll.sXInner || '100%'\n    }).append(headerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'top' ? caption : null).append(table.children('thead'))))).append($(_div, {\n      'class': classes.sScrollBody\n    }).css({\n      position: 'relative',\n      overflow: 'auto',\n      width: size(scrollX)\n    }).append(table));\n\n    if (footer) {\n      scroller.append($(_div, {\n        'class': classes.sScrollFoot\n      }).css({\n        overflow: 'hidden',\n        border: 0,\n        width: scrollX ? size(scrollX) : '100%'\n      }).append($(_div, {\n        'class': classes.sScrollFootInner\n      }).append(footerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'bottom' ? caption : null).append(table.children('tfoot')))));\n    }\n\n    var children = scroller.children();\n    var scrollHead = children[0];\n    var scrollBody = children[1];\n    var scrollFoot = footer ? children[2] : null; // When the body is scrolled, then we also want to scroll the headers\n\n    if (scrollX) {\n      $(scrollBody).on('scroll.DT', function (e) {\n        var scrollLeft = this.scrollLeft;\n        scrollHead.scrollLeft = scrollLeft;\n\n        if (footer) {\n          scrollFoot.scrollLeft = scrollLeft;\n        }\n      });\n    }\n\n    $(scrollBody).css('max-height', scrollY);\n\n    if (!scroll.bCollapse) {\n      $(scrollBody).css('height', scrollY);\n    }\n\n    settings.nScrollHead = scrollHead;\n    settings.nScrollBody = scrollBody;\n    settings.nScrollFoot = scrollFoot; // On redraw - align columns\n\n    settings.aoDrawCallback.push({\n      \"fn\": _fnScrollDraw,\n      \"sName\": \"scrolling\"\n    });\n    return scroller[0];\n  }\n  /**\n   * Update the header, footer and body tables for resizing - i.e. column\n   * alignment.\n   *\n   * Welcome to the most horrible function DataTables. The process that this\n   * function follows is basically:\n   *   1. Re-create the table inside the scrolling div\n   *   2. Take live measurements from the DOM\n   *   3. Apply the measurements to align the columns\n   *   4. Clean up\n   *\n   *  @param {object} settings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnScrollDraw(settings) {\n    // Given that this is such a monster function, a lot of variables are use\n    // to try and keep the minimised size as small as possible\n    var scroll = settings.oScroll,\n        scrollX = scroll.sX,\n        scrollXInner = scroll.sXInner,\n        scrollY = scroll.sY,\n        barWidth = scroll.iBarWidth,\n        divHeader = $(settings.nScrollHead),\n        divHeaderStyle = divHeader[0].style,\n        divHeaderInner = divHeader.children('div'),\n        divHeaderInnerStyle = divHeaderInner[0].style,\n        divHeaderTable = divHeaderInner.children('table'),\n        divBodyEl = settings.nScrollBody,\n        divBody = $(divBodyEl),\n        divBodyStyle = divBodyEl.style,\n        divFooter = $(settings.nScrollFoot),\n        divFooterInner = divFooter.children('div'),\n        divFooterTable = divFooterInner.children('table'),\n        header = $(settings.nTHead),\n        table = $(settings.nTable),\n        tableEl = table[0],\n        tableStyle = tableEl.style,\n        footer = settings.nTFoot ? $(settings.nTFoot) : null,\n        browser = settings.oBrowser,\n        ie67 = browser.bScrollOversize,\n        dtHeaderCells = _pluck(settings.aoColumns, 'nTh'),\n        headerTrgEls,\n        footerTrgEls,\n        headerSrcEls,\n        footerSrcEls,\n        headerCopy,\n        footerCopy,\n        headerWidths = [],\n        footerWidths = [],\n        headerContent = [],\n        footerContent = [],\n        idx,\n        correction,\n        sanityWidth,\n        zeroOut = function zeroOut(nSizer) {\n      var style = nSizer.style;\n      style.paddingTop = \"0\";\n      style.paddingBottom = \"0\";\n      style.borderTopWidth = \"0\";\n      style.borderBottomWidth = \"0\";\n      style.height = 0;\n    }; // If the scrollbar visibility has changed from the last draw, we need to\n    // adjust the column sizes as the table width will have changed to account\n    // for the scrollbar\n\n\n    var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\n    if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n      settings.scrollBarVis = scrollBarVis;\n\n      _fnAdjustColumnSizing(settings);\n\n      return; // adjust column sizing will call this function again\n    } else {\n      settings.scrollBarVis = scrollBarVis;\n    }\n    /*\n     * 1. Re-create the table inside the scrolling div\n     */\n    // Remove the old minimised thead and tfoot elements in the inner table\n\n\n    table.children('thead, tfoot').remove();\n\n    if (footer) {\n      footerCopy = footer.clone().prependTo(table);\n      footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\n      footerSrcEls = footerCopy.find('tr');\n    } // Clone the current header and footer elements and then place it into the inner table\n\n\n    headerCopy = header.clone().prependTo(table);\n    headerTrgEls = header.find('tr'); // original header is in its own table\n\n    headerSrcEls = headerCopy.find('tr');\n    headerCopy.find('th, td').removeAttr('tabindex');\n    /*\n     * 2. Take live measurements from the DOM - do not alter the DOM itself!\n     */\n    // Remove old sizing and apply the calculated column widths\n    // Get the unique column headers in the newly created (cloned) header. We want to apply the\n    // calculated sizes to this header\n\n    if (!scrollX) {\n      divBodyStyle.width = '100%';\n      divHeader[0].style.width = '100%';\n    }\n\n    $.each(_fnGetUniqueThs(settings, headerCopy), function (i, el) {\n      idx = _fnVisibleToColumnIndex(settings, i);\n      el.style.width = settings.aoColumns[idx].sWidth;\n    });\n\n    if (footer) {\n      _fnApplyToChildren(function (n) {\n        n.style.width = \"\";\n      }, footerSrcEls);\n    } // Size the table as a whole\n\n\n    sanityWidth = table.outerWidth();\n\n    if (scrollX === \"\") {\n      // No x scrolling\n      tableStyle.width = \"100%\"; // IE7 will make the width of the table when 100% include the scrollbar\n      // - which is shouldn't. When there is a scrollbar we need to take this\n      // into account.\n\n      if (ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")) {\n        tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);\n      } // Recalculate the sanity width\n\n\n      sanityWidth = table.outerWidth();\n    } else if (scrollXInner !== \"\") {\n      // legacy x scroll inner has been given - use it\n      tableStyle.width = _fnStringToCss(scrollXInner); // Recalculate the sanity width\n\n      sanityWidth = table.outerWidth();\n    } // Hidden header should have zero height, so remove padding and borders. Then\n    // set the width based on the real headers\n    // Apply all styles in one pass\n\n\n    _fnApplyToChildren(zeroOut, headerSrcEls); // Read all widths in next pass\n\n\n    _fnApplyToChildren(function (nSizer) {\n      var style = window.getComputedStyle ? window.getComputedStyle(nSizer).width : _fnStringToCss($(nSizer).width());\n      headerContent.push(nSizer.innerHTML);\n      headerWidths.push(style);\n    }, headerSrcEls); // Apply all widths in final pass\n\n\n    _fnApplyToChildren(function (nToSize, i) {\n      nToSize.style.width = headerWidths[i];\n    }, headerTrgEls);\n\n    $(headerSrcEls).height(0);\n    /* Same again with the footer if we have one */\n\n    if (footer) {\n      _fnApplyToChildren(zeroOut, footerSrcEls);\n\n      _fnApplyToChildren(function (nSizer) {\n        footerContent.push(nSizer.innerHTML);\n        footerWidths.push(_fnStringToCss($(nSizer).css('width')));\n      }, footerSrcEls);\n\n      _fnApplyToChildren(function (nToSize, i) {\n        nToSize.style.width = footerWidths[i];\n      }, footerTrgEls);\n\n      $(footerSrcEls).height(0);\n    }\n    /*\n     * 3. Apply the measurements\n     */\n    // \"Hide\" the header and footer that we used for the sizing. We need to keep\n    // the content of the cell so that the width applied to the header and body\n    // both match, but we want to hide it completely. We want to also fix their\n    // width to what they currently are\n\n\n    _fnApplyToChildren(function (nSizer, i) {\n      nSizer.innerHTML = '<div class=\"dataTables_sizing\">' + headerContent[i] + '</div>';\n      nSizer.childNodes[0].style.height = \"0\";\n      nSizer.childNodes[0].style.overflow = \"hidden\";\n      nSizer.style.width = headerWidths[i];\n    }, headerSrcEls);\n\n    if (footer) {\n      _fnApplyToChildren(function (nSizer, i) {\n        nSizer.innerHTML = '<div class=\"dataTables_sizing\">' + footerContent[i] + '</div>';\n        nSizer.childNodes[0].style.height = \"0\";\n        nSizer.childNodes[0].style.overflow = \"hidden\";\n        nSizer.style.width = footerWidths[i];\n      }, footerSrcEls);\n    } // Sanity check that the table is of a sensible width. If not then we are going to get\n    // misalignment - try to prevent this by not allowing the table to shrink below its min width\n\n\n    if (table.outerWidth() < sanityWidth) {\n      // The min width depends upon if we have a vertical scrollbar visible or not */\n      correction = divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\" ? sanityWidth + barWidth : sanityWidth; // IE6/7 are a law unto themselves...\n\n      if (ie67 && (divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")) {\n        tableStyle.width = _fnStringToCss(correction - barWidth);\n      } // And give the user a warning that we've stopped the table getting too small\n\n\n      if (scrollX === \"\" || scrollXInner !== \"\") {\n        _fnLog(settings, 1, 'Possible column misalignment', 6);\n      }\n    } else {\n      correction = '100%';\n    } // Apply to the container elements\n\n\n    divBodyStyle.width = _fnStringToCss(correction);\n    divHeaderStyle.width = _fnStringToCss(correction);\n\n    if (footer) {\n      settings.nScrollFoot.style.width = _fnStringToCss(correction);\n    }\n    /*\n     * 4. Clean up\n     */\n\n\n    if (!scrollY) {\n      /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n       * the scrollbar height from the visible display, rather than adding it on. We need to\n       * set the height in order to sort this. Don't want to do it in any other browsers.\n       */\n      if (ie67) {\n        divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);\n      }\n    }\n    /* Finally set the width's of the header and footer tables */\n\n\n    var iOuterWidth = table.outerWidth();\n    divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);\n    divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth); // Figure out if there are scrollbar present - if so then we need a the header and footer to\n    // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\n    var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n    var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n    divHeaderInnerStyle[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n\n    if (footer) {\n      divFooterTable[0].style.width = _fnStringToCss(iOuterWidth);\n      divFooterInner[0].style.width = _fnStringToCss(iOuterWidth);\n      divFooterInner[0].style[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n    } // Correct DOM ordering for colgroup - comes before the thead\n\n\n    table.children('colgroup').insertBefore(table.children('thead'));\n    /* Adjust the position of the header in case we loose the y-scrollbar */\n\n    divBody.trigger('scroll'); // If sorting or filtering has occurred, jump the scrolling back to the top\n    // only if we aren't holding the position\n\n    if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n      divBodyEl.scrollTop = 0;\n    }\n  }\n  /**\n   * Apply a given function to the display child nodes of an element array (typically\n   * TD children of TR rows\n   *  @param {function} fn Method to apply to the objects\n   *  @param array {nodes} an1 List of elements to look through for display children\n   *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnApplyToChildren(fn, an1, an2) {\n    var index = 0,\n        i = 0,\n        iLen = an1.length;\n    var nNode1, nNode2;\n\n    while (i < iLen) {\n      nNode1 = an1[i].firstChild;\n      nNode2 = an2 ? an2[i].firstChild : null;\n\n      while (nNode1) {\n        if (nNode1.nodeType === 1) {\n          if (an2) {\n            fn(nNode1, nNode2, index);\n          } else {\n            fn(nNode1, index);\n          }\n\n          index++;\n        }\n\n        nNode1 = nNode1.nextSibling;\n        nNode2 = an2 ? nNode2.nextSibling : null;\n      }\n\n      i++;\n    }\n  }\n\n  var __re_html_remove = /<.*?>/g;\n  /**\n   * Calculate the width of columns for the table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n  function _fnCalculateColumnWidths(oSettings) {\n    var table = oSettings.nTable,\n        columns = oSettings.aoColumns,\n        scroll = oSettings.oScroll,\n        scrollY = scroll.sY,\n        scrollX = scroll.sX,\n        scrollXInner = scroll.sXInner,\n        columnCount = columns.length,\n        visibleColumns = _fnGetColumns(oSettings, 'bVisible'),\n        headerCells = $('th', oSettings.nTHead),\n        tableWidthAttr = table.getAttribute('width'),\n        // from DOM element\n    tableContainer = table.parentNode,\n        userInputs = false,\n        i,\n        column,\n        columnIdx,\n        width,\n        outerWidth,\n        browser = oSettings.oBrowser,\n        ie67 = browser.bScrollOversize;\n\n    var styleWidth = table.style.width;\n\n    if (styleWidth && styleWidth.indexOf('%') !== -1) {\n      tableWidthAttr = styleWidth;\n    }\n    /* Convert any user input sizes into pixel sizes */\n\n\n    for (i = 0; i < visibleColumns.length; i++) {\n      column = columns[visibleColumns[i]];\n\n      if (column.sWidth !== null) {\n        column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);\n        userInputs = true;\n      }\n    }\n    /* If the number of columns in the DOM equals the number that we have to\n     * process in DataTables, then we can use the offsets that are created by\n     * the web- browser. No custom sizes can be set in order for this to happen,\n     * nor scrolling used\n     */\n\n\n    if (ie67 || !userInputs && !scrollX && !scrollY && columnCount == _fnVisbleColumns(oSettings) && columnCount == headerCells.length) {\n      for (i = 0; i < columnCount; i++) {\n        var colIdx = _fnVisibleToColumnIndex(oSettings, i);\n\n        if (colIdx !== null) {\n          columns[colIdx].sWidth = _fnStringToCss(headerCells.eq(i).width());\n        }\n      }\n    } else {\n      // Otherwise construct a single row, worst case, table with the widest\n      // node in the data, assign any user defined widths, then insert it into\n      // the DOM and allow the browser to do all the hard work of calculating\n      // table widths\n      var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n      .css('visibility', 'hidden').removeAttr('id'); // Clean up the table body\n\n      tmpTable.find('tbody tr').remove();\n      var tr = $('<tr/>').appendTo(tmpTable.find('tbody')); // Clone the table header and footer - we can't use the header / footer\n      // from the cloned table, since if scrolling is active, the table's\n      // real header and footer are contained in different table tags\n\n      tmpTable.find('thead, tfoot').remove();\n      tmpTable.append($(oSettings.nTHead).clone()).append($(oSettings.nTFoot).clone()); // Remove any assigned widths from the footer (from scrolling)\n\n      tmpTable.find('tfoot th, tfoot td').css('width', ''); // Apply custom sizing to the cloned header\n\n      headerCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0]);\n\n      for (i = 0; i < visibleColumns.length; i++) {\n        column = columns[visibleColumns[i]];\n        headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ? _fnStringToCss(column.sWidthOrig) : ''; // For scrollX we need to force the column width otherwise the\n        // browser will collapse it. If this width is smaller than the\n        // width the column requires, then it will have no effect\n\n        if (column.sWidthOrig && scrollX) {\n          $(headerCells[i]).append($('<div/>').css({\n            width: column.sWidthOrig,\n            margin: 0,\n            padding: 0,\n            border: 0,\n            height: 1\n          }));\n        }\n      } // Find the widest cell for each column and put it into the table\n\n\n      if (oSettings.aoData.length) {\n        for (i = 0; i < visibleColumns.length; i++) {\n          columnIdx = visibleColumns[i];\n          column = columns[columnIdx];\n          $(_fnGetWidestNode(oSettings, columnIdx)).clone(false).append(column.sContentPadding).appendTo(tr);\n        }\n      } // Tidy the temporary table - remove name attributes so there aren't\n      // duplicated in the dom (radio elements for example)\n\n\n      $('[name]', tmpTable).removeAttr('name'); // Table has been built, attach to the document so we can work with it.\n      // A holding element is used, positioned at the top of the container\n      // with minimal height, so it has no effect on if the container scrolls\n      // or not. Otherwise it might trigger scrolling when it actually isn't\n      // needed\n\n      var holder = $('<div/>').css(scrollX || scrollY ? {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: 1,\n        right: 0,\n        overflow: 'hidden'\n      } : {}).append(tmpTable).appendTo(tableContainer); // When scrolling (X or Y) we want to set the width of the table as \n      // appropriate. However, when not scrolling leave the table width as it\n      // is. This results in slightly different, but I think correct behaviour\n\n      if (scrollX && scrollXInner) {\n        tmpTable.width(scrollXInner);\n      } else if (scrollX) {\n        tmpTable.css('width', 'auto');\n        tmpTable.removeAttr('width'); // If there is no width attribute or style, then allow the table to\n        // collapse\n\n        if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n          tmpTable.width(tableContainer.clientWidth);\n        }\n      } else if (scrollY) {\n        tmpTable.width(tableContainer.clientWidth);\n      } else if (tableWidthAttr) {\n        tmpTable.width(tableWidthAttr);\n      } // Get the width of each column in the constructed table - we need to\n      // know the inner width (so it can be assigned to the other table's\n      // cells) and the outer width so we can calculate the full width of the\n      // table. This is safe since DataTables requires a unique cell for each\n      // column, but if ever a header can span multiple columns, this will\n      // need to be modified.\n\n\n      var total = 0;\n\n      for (i = 0; i < visibleColumns.length; i++) {\n        var cell = $(headerCells[i]);\n        var border = cell.outerWidth() - cell.width(); // Use getBounding... where possible (not IE8-) because it can give\n        // sub-pixel accuracy, which we then want to round up!\n\n        var bounding = browser.bBounding ? Math.ceil(headerCells[i].getBoundingClientRect().width) : cell.outerWidth(); // Total is tracked to remove any sub-pixel errors as the outerWidth\n        // of the table might not equal the total given here (IE!).\n\n        total += bounding; // Width for each column to use\n\n        columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding - border);\n      }\n\n      table.style.width = _fnStringToCss(total); // Finished with the table - ditch it\n\n      holder.remove();\n    } // If there is a width attr, we want to attach an event listener which\n    // allows the table sizing to automatically adjust when the window is\n    // resized. Use the width attr rather than CSS, since we can't know if the\n    // CSS is a relative value or absolute - DOM read is always px.\n\n\n    if (tableWidthAttr) {\n      table.style.width = _fnStringToCss(tableWidthAttr);\n    }\n\n    if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {\n      var bindResize = function bindResize() {\n        $(window).on('resize.DT-' + oSettings.sInstance, _fnThrottle(function () {\n          _fnAdjustColumnSizing(oSettings);\n        }));\n      }; // IE6/7 will crash if we bind a resize event handler on page load.\n      // To be removed in 1.11 which drops IE6/7 support\n\n\n      if (ie67) {\n        setTimeout(bindResize, 1000);\n      } else {\n        bindResize();\n      }\n\n      oSettings._reszEvt = true;\n    }\n  }\n  /**\n   * Throttle the calls to a function. Arguments and context are maintained for\n   * the throttled function\n   *  @param {function} fn Function to be called\n   *  @param {int} [freq=200] call frequency in mS\n   *  @returns {function} wrapped function\n   *  @memberof DataTable#oApi\n   */\n\n\n  var _fnThrottle = DataTable.util.throttle;\n  /**\n   * Convert a CSS unit width to pixels (e.g. 2em)\n   *  @param {string} width width to be converted\n   *  @param {node} parent parent to get the with for (required for relative widths) - optional\n   *  @returns {int} width in pixels\n   *  @memberof DataTable#oApi\n   */\n\n  function _fnConvertToWidth(width, parent) {\n    if (!width) {\n      return 0;\n    }\n\n    var n = $('<div/>').css('width', _fnStringToCss(width)).appendTo(parent || document.body);\n    var val = n[0].offsetWidth;\n    n.remove();\n    return val;\n  }\n  /**\n   * Get the widest node\n   *  @param {object} settings dataTables settings object\n   *  @param {int} colIdx column of interest\n   *  @returns {node} widest table node\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnGetWidestNode(settings, colIdx) {\n    var idx = _fnGetMaxLenString(settings, colIdx);\n\n    if (idx < 0) {\n      return null;\n    }\n\n    var data = settings.aoData[idx];\n    return !data.nTr ? // Might not have been created when deferred rendering\n    $('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0] : data.anCells[colIdx];\n  }\n  /**\n   * Get the maximum strlen for each data column\n   *  @param {object} settings dataTables settings object\n   *  @param {int} colIdx column of interest\n   *  @returns {string} max string length for each column\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnGetMaxLenString(settings, colIdx) {\n    var s,\n        max = -1,\n        maxIdx = -1;\n\n    for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n      s = _fnGetCellData(settings, i, colIdx, 'display') + '';\n      s = s.replace(__re_html_remove, '');\n      s = s.replace(/&nbsp;/g, ' ');\n\n      if (s.length > max) {\n        max = s.length;\n        maxIdx = i;\n      }\n    }\n\n    return maxIdx;\n  }\n  /**\n   * Append a CSS unit (only if required) to a string\n   *  @param {string} value to css-ify\n   *  @returns {string} value with css unit\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnStringToCss(s) {\n    if (s === null) {\n      return '0px';\n    }\n\n    if (typeof s == 'number') {\n      return s < 0 ? '0px' : s + 'px';\n    } // Check it has a unit character already\n\n\n    return s.match(/\\d$/) ? s + 'px' : s;\n  }\n\n  function _fnSortFlatten(settings) {\n    var i,\n        iLen,\n        k,\n        kLen,\n        aSort = [],\n        aiOrig = [],\n        aoColumns = settings.aoColumns,\n        aDataSort,\n        iCol,\n        sType,\n        srcCol,\n        fixed = settings.aaSortingFixed,\n        fixedObj = $.isPlainObject(fixed),\n        nestedSort = [],\n        add = function add(a) {\n      if (a.length && !Array.isArray(a[0])) {\n        // 1D array\n        nestedSort.push(a);\n      } else {\n        // 2D array\n        $.merge(nestedSort, a);\n      }\n    }; // Build the sort array, with pre-fix and post-fix options if they have been\n    // specified\n\n\n    if (Array.isArray(fixed)) {\n      add(fixed);\n    }\n\n    if (fixedObj && fixed.pre) {\n      add(fixed.pre);\n    }\n\n    add(settings.aaSorting);\n\n    if (fixedObj && fixed.post) {\n      add(fixed.post);\n    }\n\n    for (i = 0; i < nestedSort.length; i++) {\n      srcCol = nestedSort[i][0];\n      aDataSort = aoColumns[srcCol].aDataSort;\n\n      for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n        iCol = aDataSort[k];\n        sType = aoColumns[iCol].sType || 'string';\n\n        if (nestedSort[i]._idx === undefined) {\n          nestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting);\n        }\n\n        aSort.push({\n          src: srcCol,\n          col: iCol,\n          dir: nestedSort[i][1],\n          index: nestedSort[i]._idx,\n          type: sType,\n          formatter: DataTable.ext.type.order[sType + \"-pre\"]\n        });\n      }\n    }\n\n    return aSort;\n  }\n  /**\n   * Change the order of the table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   *  @todo This really needs split up!\n   */\n\n\n  function _fnSort(oSettings) {\n    var i,\n        ien,\n        iLen,\n        j,\n        jLen,\n        k,\n        kLen,\n        sDataType,\n        nTh,\n        aiOrig = [],\n        oExtSort = DataTable.ext.type.order,\n        aoData = oSettings.aoData,\n        aoColumns = oSettings.aoColumns,\n        aDataSort,\n        data,\n        iCol,\n        sType,\n        oSort,\n        formatters = 0,\n        sortCol,\n        displayMaster = oSettings.aiDisplayMaster,\n        aSort; // Resolve any column types that are unknown due to addition or invalidation\n    // @todo Can this be moved into a 'data-ready' handler which is called when\n    //   data is going to be used in the table?\n\n    _fnColumnTypes(oSettings);\n\n    aSort = _fnSortFlatten(oSettings);\n\n    for (i = 0, ien = aSort.length; i < ien; i++) {\n      sortCol = aSort[i]; // Track if we can use the fast sort algorithm\n\n      if (sortCol.formatter) {\n        formatters++;\n      } // Load the data needed for the sort, for each cell\n\n\n      _fnSortData(oSettings, sortCol.col);\n    }\n    /* No sorting required if server-side or no sorting array */\n\n\n    if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n      // Create a value - key array of the current row positions such that we can use their\n      // current position during the sort, if values match, in order to perform stable sorting\n      for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n        aiOrig[displayMaster[i]] = i;\n      }\n      /* Do the sort - here we want multi-column sorting based on a given data source (column)\n       * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n       * follow on it's own, but this is what we want (example two column sorting):\n       *  fnLocalSorting = function(a,b){\n       *    var iTest;\n       *    iTest = oSort['string-asc']('data11', 'data12');\n       *      if (iTest !== 0)\n       *        return iTest;\n       *    iTest = oSort['numeric-desc']('data21', 'data22');\n       *    if (iTest !== 0)\n       *      return iTest;\n       *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n       *  }\n       * Basically we have a test for each sorting column, if the data in that column is equal,\n       * test the next column. If all columns match, then we use a numeric sort on the row\n       * positions in the original data array to provide a stable sort.\n       *\n       * Note - I know it seems excessive to have two sorting methods, but the first is around\n       * 15% faster, so the second is only maintained for backwards compatibility with sorting\n       * methods which do not have a pre-sort formatting function.\n       */\n\n\n      if (formatters === aSort.length) {\n        // All sort types have formatting functions\n        displayMaster.sort(function (a, b) {\n          var x,\n              y,\n              k,\n              test,\n              sort,\n              len = aSort.length,\n              dataA = aoData[a]._aSortData,\n              dataB = aoData[b]._aSortData;\n\n          for (k = 0; k < len; k++) {\n            sort = aSort[k];\n            x = dataA[sort.col];\n            y = dataB[sort.col];\n            test = x < y ? -1 : x > y ? 1 : 0;\n\n            if (test !== 0) {\n              return sort.dir === 'asc' ? test : -test;\n            }\n          }\n\n          x = aiOrig[a];\n          y = aiOrig[b];\n          return x < y ? -1 : x > y ? 1 : 0;\n        });\n      } else {\n        // Depreciated - remove in 1.11 (providing a plug-in option)\n        // Not all sort types have formatting methods, so we have to call their sorting\n        // methods.\n        displayMaster.sort(function (a, b) {\n          var x,\n              y,\n              k,\n              l,\n              test,\n              sort,\n              fn,\n              len = aSort.length,\n              dataA = aoData[a]._aSortData,\n              dataB = aoData[b]._aSortData;\n\n          for (k = 0; k < len; k++) {\n            sort = aSort[k];\n            x = dataA[sort.col];\n            y = dataB[sort.col];\n            fn = oExtSort[sort.type + \"-\" + sort.dir] || oExtSort[\"string-\" + sort.dir];\n            test = fn(x, y);\n\n            if (test !== 0) {\n              return test;\n            }\n          }\n\n          x = aiOrig[a];\n          y = aiOrig[b];\n          return x < y ? -1 : x > y ? 1 : 0;\n        });\n      }\n    }\n    /* Tell the draw function that we have sorted the data */\n\n\n    oSettings.bSorted = true;\n  }\n\n  function _fnSortAria(settings) {\n    var label;\n    var nextSort;\n    var columns = settings.aoColumns;\n\n    var aSort = _fnSortFlatten(settings);\n\n    var oAria = settings.oLanguage.oAria; // ARIA attributes - need to loop all columns, to update all (removing old\n    // attributes as needed)\n\n    for (var i = 0, iLen = columns.length; i < iLen; i++) {\n      var col = columns[i];\n      var asSorting = col.asSorting;\n      var sTitle = col.ariaTitle || col.sTitle.replace(/<.*?>/g, \"\");\n      var th = col.nTh; // IE7 is throwing an error when setting these properties with jQuery's\n      // attr() and removeAttr() methods...\n\n      th.removeAttribute('aria-sort');\n      /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\n      if (col.bSortable) {\n        if (aSort.length > 0 && aSort[0].col == i) {\n          th.setAttribute('aria-sort', aSort[0].dir == \"asc\" ? \"ascending\" : \"descending\");\n          nextSort = asSorting[aSort[0].index + 1] || asSorting[0];\n        } else {\n          nextSort = asSorting[0];\n        }\n\n        label = sTitle + (nextSort === \"asc\" ? oAria.sSortAscending : oAria.sSortDescending);\n      } else {\n        label = sTitle;\n      }\n\n      th.setAttribute('aria-label', label);\n    }\n  }\n  /**\n   * Function to run on user sort request\n   *  @param {object} settings dataTables settings object\n   *  @param {node} attachTo node to attach the handler to\n   *  @param {int} colIdx column sorting index\n   *  @param {boolean} [append=false] Append the requested sort to the existing\n   *    sort if true (i.e. multi-column sort)\n   *  @param {function} [callback] callback function\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnSortListener(settings, colIdx, append, callback) {\n    var col = settings.aoColumns[colIdx];\n    var sorting = settings.aaSorting;\n    var asSorting = col.asSorting;\n    var nextSortIdx;\n\n    var next = function next(a, overflow) {\n      var idx = a._idx;\n\n      if (idx === undefined) {\n        idx = $.inArray(a[1], asSorting);\n      }\n\n      return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;\n    }; // Convert to 2D array if needed\n\n\n    if (typeof sorting[0] === 'number') {\n      sorting = settings.aaSorting = [sorting];\n    } // If appending the sort then we are multi-column sorting\n\n\n    if (append && settings.oFeatures.bSortMulti) {\n      // Are we already doing some kind of sort on this column?\n      var sortIdx = $.inArray(colIdx, _pluck(sorting, '0'));\n\n      if (sortIdx !== -1) {\n        // Yes, modify the sort\n        nextSortIdx = next(sorting[sortIdx], true);\n\n        if (nextSortIdx === null && sorting.length === 1) {\n          nextSortIdx = 0; // can't remove sorting completely\n        }\n\n        if (nextSortIdx === null) {\n          sorting.splice(sortIdx, 1);\n        } else {\n          sorting[sortIdx][1] = asSorting[nextSortIdx];\n          sorting[sortIdx]._idx = nextSortIdx;\n        }\n      } else {\n        // No sort on this column yet\n        sorting.push([colIdx, asSorting[0], 0]);\n        sorting[sorting.length - 1]._idx = 0;\n      }\n    } else if (sorting.length && sorting[0][0] == colIdx) {\n      // Single column - already sorting on this column, modify the sort\n      nextSortIdx = next(sorting[0]);\n      sorting.length = 1;\n      sorting[0][1] = asSorting[nextSortIdx];\n      sorting[0]._idx = nextSortIdx;\n    } else {\n      // Single column - sort only on this column\n      sorting.length = 0;\n      sorting.push([colIdx, asSorting[0]]);\n      sorting[0]._idx = 0;\n    } // Run the sort by calling a full redraw\n\n\n    _fnReDraw(settings); // callback used for async user interaction\n\n\n    if (typeof callback == 'function') {\n      callback(settings);\n    }\n  }\n  /**\n   * Attach a sort handler (click) to a node\n   *  @param {object} settings dataTables settings object\n   *  @param {node} attachTo node to attach the handler to\n   *  @param {int} colIdx column sorting index\n   *  @param {function} [callback] callback function\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnSortAttachListener(settings, attachTo, colIdx, callback) {\n    var col = settings.aoColumns[colIdx];\n\n    _fnBindAction(attachTo, {}, function (e) {\n      /* If the column is not sortable - don't to anything */\n      if (col.bSortable === false) {\n        return;\n      } // If processing is enabled use a timeout to allow the processing\n      // display to be shown - otherwise to it synchronously\n\n\n      if (settings.oFeatures.bProcessing) {\n        _fnProcessingDisplay(settings, true);\n\n        setTimeout(function () {\n          _fnSortListener(settings, colIdx, e.shiftKey, callback); // In server-side processing, the draw callback will remove the\n          // processing display\n\n\n          if (_fnDataSource(settings) !== 'ssp') {\n            _fnProcessingDisplay(settings, false);\n          }\n        }, 0);\n      } else {\n        _fnSortListener(settings, colIdx, e.shiftKey, callback);\n      }\n    });\n  }\n  /**\n   * Set the sorting classes on table's body, Note: it is safe to call this function\n   * when bSort and bSortClasses are false\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnSortingClasses(settings) {\n    var oldSort = settings.aLastSort;\n    var sortClass = settings.oClasses.sSortColumn;\n\n    var sort = _fnSortFlatten(settings);\n\n    var features = settings.oFeatures;\n    var i, ien, colIdx;\n\n    if (features.bSort && features.bSortClasses) {\n      // Remove old sorting classes\n      for (i = 0, ien = oldSort.length; i < ien; i++) {\n        colIdx = oldSort[i].src; // Remove column sorting\n\n        $(_pluck(settings.aoData, 'anCells', colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3));\n      } // Add new column sorting\n\n\n      for (i = 0, ien = sort.length; i < ien; i++) {\n        colIdx = sort[i].src;\n        $(_pluck(settings.aoData, 'anCells', colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3));\n      }\n    }\n\n    settings.aLastSort = sort;\n  } // Get the data to sort a column, be it from cache, fresh (populating the\n  // cache), or from a sort formatter\n\n\n  function _fnSortData(settings, idx) {\n    // Custom sorting function - provided by the sort data type\n    var column = settings.aoColumns[idx];\n    var customSort = DataTable.ext.order[column.sSortDataType];\n    var customData;\n\n    if (customSort) {\n      customData = customSort.call(settings.oInstance, settings, idx, _fnColumnIndexToVisible(settings, idx));\n    } // Use / populate cache\n\n\n    var row, cellData;\n    var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n\n    for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n      row = settings.aoData[i];\n\n      if (!row._aSortData) {\n        row._aSortData = [];\n      }\n\n      if (!row._aSortData[idx] || customSort) {\n        cellData = customSort ? customData[i] : // If there was a custom sort function, use data from there\n        _fnGetCellData(settings, i, idx, 'sort');\n        row._aSortData[idx] = formatter ? formatter(cellData) : cellData;\n      }\n    }\n  }\n  /**\n   * Save the state of a table\n   *  @param {object} oSettings dataTables settings object\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnSaveState(settings) {\n    if (settings._bLoadingState) {\n      return;\n    }\n    /* Store the interesting variables */\n\n\n    var state = {\n      time: +new Date(),\n      start: settings._iDisplayStart,\n      length: settings._iDisplayLength,\n      order: $.extend(true, [], settings.aaSorting),\n      search: _fnSearchToCamel(settings.oPreviousSearch),\n      columns: $.map(settings.aoColumns, function (col, i) {\n        return {\n          visible: col.bVisible,\n          search: _fnSearchToCamel(settings.aoPreSearchCols[i])\n        };\n      })\n    };\n    settings.oSavedState = state;\n\n    _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n\n    if (settings.oFeatures.bStateSave && !settings.bDestroying) {\n      settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n    }\n  }\n  /**\n   * Attempt to load a saved table state\n   *  @param {object} oSettings dataTables settings object\n   *  @param {object} oInit DataTables init object so we can override settings\n   *  @param {function} callback Callback to execute when the state has been loaded\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnLoadState(settings, oInit, callback) {\n    if (!settings.oFeatures.bStateSave) {\n      callback();\n      return;\n    }\n\n    var loaded = function loaded(state) {\n      _fnImplementState(settings, state, callback);\n    };\n\n    var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n\n    if (state !== undefined) {\n      _fnImplementState(settings, state, callback);\n    } // otherwise, wait for the loaded callback to be executed\n\n\n    return true;\n  }\n\n  function _fnImplementState(settings, s, callback) {\n    var i, ien;\n    var columns = settings.aoColumns;\n    settings._bLoadingState = true; // When StateRestore was introduced the state could now be implemented at any time\n    // Not just initialisation. To do this an api instance is required in some places\n\n    var api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n    if (!s || !s.time) {\n      settings._bLoadingState = false;\n      callback();\n      return;\n    } // Allow custom and plug-in manipulation functions to alter the saved data set and\n    // cancelling of loading by returning false\n\n\n    var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n\n    if ($.inArray(false, abStateLoad) !== -1) {\n      settings._bLoadingState = false;\n      callback();\n      return;\n    } // Reject old data\n\n\n    var duration = settings.iStateDuration;\n\n    if (duration > 0 && s.time < +new Date() - duration * 1000) {\n      settings._bLoadingState = false;\n      callback();\n      return;\n    } // Number of columns have changed - all bets are off, no restore of settings\n\n\n    if (s.columns && columns.length !== s.columns.length) {\n      settings._bLoadingState = false;\n      callback();\n      return;\n    } // Store the saved state so it might be accessed at any time\n\n\n    settings.oLoadedState = $.extend(true, {}, s); // Restore key features - todo - for 1.11 this needs to be done by\n    // subscribed events\n\n    if (s.start !== undefined) {\n      settings._iDisplayStart = s.start;\n\n      if (api === null) {\n        settings.iInitDisplayStart = s.start;\n      }\n    }\n\n    if (s.length !== undefined) {\n      settings._iDisplayLength = s.length;\n    } // Order\n\n\n    if (s.order !== undefined) {\n      settings.aaSorting = [];\n      $.each(s.order, function (i, col) {\n        settings.aaSorting.push(col[0] >= columns.length ? [0, col[1]] : col);\n      });\n    } // Search\n\n\n    if (s.search !== undefined) {\n      $.extend(settings.oPreviousSearch, _fnSearchToHung(s.search));\n    } // Columns\n\n\n    if (s.columns) {\n      for (i = 0, ien = s.columns.length; i < ien; i++) {\n        var col = s.columns[i]; // Visibility\n\n        if (col.visible !== undefined) {\n          // If the api is defined, the table has been initialised so we need to use it rather than internal settings\n          if (api) {\n            // Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n            api.column(i).visible(col.visible, false);\n          } else {\n            columns[i].bVisible = col.visible;\n          }\n        } // Search\n\n\n        if (col.search !== undefined) {\n          $.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search));\n        }\n      } // If the api is defined then we need to adjust the columns once the visibility has been changed\n\n\n      if (api) {\n        api.columns.adjust();\n      }\n    }\n\n    settings._bLoadingState = false;\n\n    _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n\n    callback();\n  }\n\n  ;\n  /**\n   * Return the settings object for a particular table\n   *  @param {node} table table we are using as a dataTable\n   *  @returns {object} Settings object - or null if not found\n   *  @memberof DataTable#oApi\n   */\n\n  function _fnSettingsFromNode(table) {\n    var settings = DataTable.settings;\n    var idx = $.inArray(table, _pluck(settings, 'nTable'));\n    return idx !== -1 ? settings[idx] : null;\n  }\n  /**\n   * Log an error message\n   *  @param {object} settings dataTables settings object\n   *  @param {int} level log error messages, or display them to the user\n   *  @param {string} msg error message\n   *  @param {int} tn Technical note id to get more information about the error.\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnLog(settings, level, msg, tn) {\n    msg = 'DataTables warning: ' + (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n\n    if (tn) {\n      msg += '. For more information about this error, please see ' + 'http://datatables.net/tn/' + tn;\n    }\n\n    if (!level) {\n      // Backwards compatibility pre 1.10\n      var ext = DataTable.ext;\n      var type = ext.sErrMode || ext.errMode;\n\n      if (settings) {\n        _fnCallbackFire(settings, null, 'error', [settings, tn, msg]);\n      }\n\n      if (type == 'alert') {\n        alert(msg);\n      } else if (type == 'throw') {\n        throw new Error(msg);\n      } else if (typeof type == 'function') {\n        type(settings, tn, msg);\n      }\n    } else if (window.console && console.log) {\n      console.log(msg);\n    }\n  }\n  /**\n   * See if a property is defined on one object, if so assign it to the other object\n   *  @param {object} ret target object\n   *  @param {object} src source object\n   *  @param {string} name property\n   *  @param {string} [mappedName] name to map too - optional, name used if not given\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnMap(ret, src, name, mappedName) {\n    if (Array.isArray(name)) {\n      $.each(name, function (i, val) {\n        if (Array.isArray(val)) {\n          _fnMap(ret, src, val[0], val[1]);\n        } else {\n          _fnMap(ret, src, val);\n        }\n      });\n      return;\n    }\n\n    if (mappedName === undefined) {\n      mappedName = name;\n    }\n\n    if (src[name] !== undefined) {\n      ret[mappedName] = src[name];\n    }\n  }\n  /**\n   * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n   * shallow copy arrays. The reason we need to do this, is that we don't want to\n   * deep copy array init values (such as aaSorting) since the dev wouldn't be\n   * able to override them, but we do want to deep copy arrays.\n   *  @param {object} out Object to extend\n   *  @param {object} extender Object from which the properties will be applied to\n   *      out\n   *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n   *      independent copy with the exception of the `data` or `aaData` parameters\n   *      if they are present. This is so you can pass in a collection to\n   *      DataTables and have that used as your data source without breaking the\n   *      references\n   *  @returns {object} out Reference, just for convenience - out === the return.\n   *  @memberof DataTable#oApi\n   *  @todo This doesn't take account of arrays inside the deep copied objects.\n   */\n\n\n  function _fnExtend(out, extender, breakRefs) {\n    var val;\n\n    for (var prop in extender) {\n      if (extender.hasOwnProperty(prop)) {\n        val = extender[prop];\n\n        if ($.isPlainObject(val)) {\n          if (!$.isPlainObject(out[prop])) {\n            out[prop] = {};\n          }\n\n          $.extend(true, out[prop], val);\n        } else if (breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val)) {\n          out[prop] = val.slice();\n        } else {\n          out[prop] = val;\n        }\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Bind an event handers to allow a click or return key to activate the callback.\n   * This is good for accessibility since a return on the keyboard will have the\n   * same effect as a click, if the element has focus.\n   *  @param {element} n Element to bind the action to\n   *  @param {object} oData Data object to pass to the triggered function\n   *  @param {function} fn Callback function for when the event is triggered\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnBindAction(n, oData, fn) {\n    $(n).on('click.DT', oData, function (e) {\n      $(n).trigger('blur'); // Remove focus outline for mouse users\n\n      fn(e);\n    }).on('keypress.DT', oData, function (e) {\n      if (e.which === 13) {\n        e.preventDefault();\n        fn(e);\n      }\n    }).on('selectstart.DT', function () {\n      /* Take the brutal approach to cancelling text selection */\n      return false;\n    });\n  }\n  /**\n   * Register a callback function. Easily allows a callback function to be added to\n   * an array store of callback functions that can then all be called together.\n   *  @param {object} oSettings dataTables settings object\n   *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n   *  @param {function} fn Function to be called back\n   *  @param {string} sName Identifying name for the callback (i.e. a label)\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnCallbackReg(oSettings, sStore, fn, sName) {\n    if (fn) {\n      oSettings[sStore].push({\n        \"fn\": fn,\n        \"sName\": sName\n      });\n    }\n  }\n  /**\n   * Fire callback functions and trigger events. Note that the loop over the\n   * callback array store is done backwards! Further note that you do not want to\n   * fire off triggers in time sensitive applications (for example cell creation)\n   * as its slow.\n   *  @param {object} settings dataTables settings object\n   *  @param {string} callbackArr Name of the array storage for the callbacks in\n   *      oSettings\n   *  @param {string} eventName Name of the jQuery custom event to trigger. If\n   *      null no trigger is fired\n   *  @param {array} args Array of arguments to pass to the callback function /\n   *      trigger\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnCallbackFire(settings, callbackArr, eventName, args) {\n    var ret = [];\n\n    if (callbackArr) {\n      ret = $.map(settings[callbackArr].slice().reverse(), function (val, i) {\n        return val.fn.apply(settings.oInstance, args);\n      });\n    }\n\n    if (eventName !== null) {\n      var e = $.Event(eventName + '.dt');\n      $(settings.nTable).trigger(e, args);\n      ret.push(e.result);\n    }\n\n    return ret;\n  }\n\n  function _fnLengthOverflow(settings) {\n    var start = settings._iDisplayStart,\n        end = settings.fnDisplayEnd(),\n        len = settings._iDisplayLength;\n    /* If we have space to show extra rows (backing up from the end point - then do so */\n\n    if (start >= end) {\n      start = end - len;\n    } // Keep the start record on the current page\n\n\n    start -= start % len;\n\n    if (len === -1 || start < 0) {\n      start = 0;\n    }\n\n    settings._iDisplayStart = start;\n  }\n\n  function _fnRenderer(settings, type) {\n    var renderer = settings.renderer;\n    var host = DataTable.ext.renderer[type];\n\n    if ($.isPlainObject(renderer) && renderer[type]) {\n      // Specific renderer for this type. If available use it, otherwise use\n      // the default.\n      return host[renderer[type]] || host._;\n    } else if (typeof renderer === 'string') {\n      // Common renderer - if there is one available for this type use it,\n      // otherwise use the default\n      return host[renderer] || host._;\n    } // Use the default\n\n\n    return host._;\n  }\n  /**\n   * Detect the data source being used for the table. Used to simplify the code\n   * a little (ajax) and to make it compress a little smaller.\n   *\n   *  @param {object} settings dataTables settings object\n   *  @returns {string} Data source\n   *  @memberof DataTable#oApi\n   */\n\n\n  function _fnDataSource(settings) {\n    if (settings.oFeatures.bServerSide) {\n      return 'ssp';\n    } else if (settings.ajax || settings.sAjaxSource) {\n      return 'ajax';\n    }\n\n    return 'dom';\n  }\n  /**\n   * Computed structure of the DataTables API, defined by the options passed to\n   * `DataTable.Api.register()` when building the API.\n   *\n   * The structure is built in order to speed creation and extension of the Api\n   * objects since the extensions are effectively pre-parsed.\n   *\n   * The array is an array of objects with the following structure, where this\n   * base array represents the Api prototype base:\n   *\n   *     [\n   *       {\n   *         name:      'data'                -- string   - Property name\n   *         val:       function () {},       -- function - Api method (or undefined if just an object\n   *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n   *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n   *       },\n   *       {\n   *         name:     'row'\n   *         val:       {},\n   *         methodExt: [ ... ],\n   *         propExt:   [\n   *           {\n   *             name:      'data'\n   *             val:       function () {},\n   *             methodExt: [ ... ],\n   *             propExt:   [ ... ]\n   *           },\n   *           ...\n   *         ]\n   *       }\n   *     ]\n   *\n   * @type {Array}\n   * @ignore\n   */\n\n\n  var __apiStruct = [];\n  /**\n   * `Array.prototype` reference.\n   *\n   * @type object\n   * @ignore\n   */\n\n  var __arrayProto = Array.prototype;\n  /**\n   * Abstraction for `context` parameter of the `Api` constructor to allow it to\n   * take several different forms for ease of use.\n   *\n   * Each of the input parameter types will be converted to a DataTables settings\n   * object where possible.\n   *\n   * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n   *   of:\n   *\n   *   * `string` - jQuery selector. Any DataTables' matching the given selector\n   *     with be found and used.\n   *   * `node` - `TABLE` node which has already been formed into a DataTable.\n   *   * `jQuery` - A jQuery object of `TABLE` nodes.\n   *   * `object` - DataTables settings object\n   *   * `DataTables.Api` - API instance\n   * @return {array|null} Matching DataTables settings objects. `null` or\n   *   `undefined` is returned if no matching DataTable is found.\n   * @ignore\n   */\n\n  var _toSettings = function _toSettings(mixed) {\n    var idx, jq;\n    var settings = DataTable.settings;\n    var tables = $.map(settings, function (el, i) {\n      return el.nTable;\n    });\n\n    if (!mixed) {\n      return [];\n    } else if (mixed.nTable && mixed.oApi) {\n      // DataTables settings object\n      return [mixed];\n    } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n      // Table node\n      idx = $.inArray(mixed, tables);\n      return idx !== -1 ? [settings[idx]] : null;\n    } else if (mixed && typeof mixed.settings === 'function') {\n      return mixed.settings().toArray();\n    } else if (typeof mixed === 'string') {\n      // jQuery selector\n      jq = $(mixed);\n    } else if (mixed instanceof $) {\n      // jQuery object (also DataTables instance)\n      jq = mixed;\n    }\n\n    if (jq) {\n      return jq.map(function (i) {\n        idx = $.inArray(this, tables);\n        return idx !== -1 ? settings[idx] : null;\n      }).toArray();\n    }\n  };\n  /**\n   * DataTables API class - used to control and interface with  one or more\n   * DataTables enhanced tables.\n   *\n   * The API class is heavily based on jQuery, presenting a chainable interface\n   * that you can use to interact with tables. Each instance of the API class has\n   * a \"context\" - i.e. the tables that it will operate on. This could be a single\n   * table, all tables on a page or a sub-set thereof.\n   *\n   * Additionally the API is designed to allow you to easily work with the data in\n   * the tables, retrieving and manipulating it as required. This is done by\n   * presenting the API class as an array like interface. The contents of the\n   * array depend upon the actions requested by each method (for example\n   * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n   * return an array of objects or arrays depending upon your table's\n   * configuration). The API object has a number of array like methods (`push`,\n   * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n   * `unique` etc) to assist your working with the data held in a table.\n   *\n   * Most methods (those which return an Api instance) are chainable, which means\n   * the return from a method call also has all of the methods available that the\n   * top level object had. For example, these two calls are equivalent:\n   *\n   *     // Not chained\n   *     api.row.add( {...} );\n   *     api.draw();\n   *\n   *     // Chained\n   *     api.row.add( {...} ).draw();\n   *\n   * @class DataTable.Api\n   * @param {array|object|string|jQuery} context DataTable identifier. This is\n   *   used to define which DataTables enhanced tables this API will operate on.\n   *   Can be one of:\n   *\n   *   * `string` - jQuery selector. Any DataTables' matching the given selector\n   *     with be found and used.\n   *   * `node` - `TABLE` node which has already been formed into a DataTable.\n   *   * `jQuery` - A jQuery object of `TABLE` nodes.\n   *   * `object` - DataTables settings object\n   * @param {array} [data] Data to initialise the Api instance with.\n   *\n   * @example\n   *   // Direct initialisation during DataTables construction\n   *   var api = $('#example').DataTable();\n   *\n   * @example\n   *   // Initialisation using a DataTables jQuery object\n   *   var api = $('#example').dataTable().api();\n   *\n   * @example\n   *   // Initialisation as a constructor\n   *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n   */\n\n\n  _Api2 = function _Api(context, data) {\n    if (!(this instanceof _Api2)) {\n      return new _Api2(context, data);\n    }\n\n    var settings = [];\n\n    var ctxSettings = function ctxSettings(o) {\n      var a = _toSettings(o);\n\n      if (a) {\n        settings.push.apply(settings, a);\n      }\n    };\n\n    if (Array.isArray(context)) {\n      for (var i = 0, ien = context.length; i < ien; i++) {\n        ctxSettings(context[i]);\n      }\n    } else {\n      ctxSettings(context);\n    } // Remove duplicates\n\n\n    this.context = _unique(settings); // Initial data\n\n    if (data) {\n      $.merge(this, data);\n    } // selector\n\n\n    this.selector = {\n      rows: null,\n      cols: null,\n      opts: null\n    };\n\n    _Api2.extend(this, this, __apiStruct);\n  };\n\n  DataTable.Api = _Api2; // Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n  // isPlainObject.\n\n  $.extend(_Api2.prototype, {\n    any: function any() {\n      return this.count() !== 0;\n    },\n    concat: __arrayProto.concat,\n    context: [],\n    // array of table settings objects\n    count: function count() {\n      return this.flatten().length;\n    },\n    each: function each(fn) {\n      for (var i = 0, ien = this.length; i < ien; i++) {\n        fn.call(this, this[i], i, this);\n      }\n\n      return this;\n    },\n    eq: function eq(idx) {\n      var ctx = this.context;\n      return ctx.length > idx ? new _Api2(ctx[idx], this[idx]) : null;\n    },\n    filter: function filter(fn) {\n      var a = [];\n\n      if (__arrayProto.filter) {\n        a = __arrayProto.filter.call(this, fn, this);\n      } else {\n        // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n        for (var i = 0, ien = this.length; i < ien; i++) {\n          if (fn.call(this, this[i], i, this)) {\n            a.push(this[i]);\n          }\n        }\n      }\n\n      return new _Api2(this.context, a);\n    },\n    flatten: function flatten() {\n      var a = [];\n      return new _Api2(this.context, a.concat.apply(a, this.toArray()));\n    },\n    join: __arrayProto.join,\n    indexOf: __arrayProto.indexOf || function (obj, start) {\n      for (var i = start || 0, ien = this.length; i < ien; i++) {\n        if (this[i] === obj) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n    iterator: function iterator(flatten, type, fn, alwaysNew) {\n      var a = [],\n          ret,\n          i,\n          ien,\n          j,\n          jen,\n          context = this.context,\n          rows,\n          items,\n          item,\n          selector = this.selector; // Argument shifting\n\n      if (typeof flatten === 'string') {\n        alwaysNew = fn;\n        fn = type;\n        type = flatten;\n        flatten = false;\n      }\n\n      for (i = 0, ien = context.length; i < ien; i++) {\n        var apiInst = new _Api2(context[i]);\n\n        if (type === 'table') {\n          ret = fn.call(apiInst, context[i], i);\n\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        } else if (type === 'columns' || type === 'rows') {\n          // this has same length as context - one entry for each table\n          ret = fn.call(apiInst, context[i], this[i], i);\n\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        } else if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n          // columns and rows share the same structure.\n          // 'this' is an array of column indexes for each context\n          items = this[i];\n\n          if (type === 'column-rows') {\n            rows = _selector_row_indexes(context[i], selector.opts);\n          }\n\n          for (j = 0, jen = items.length; j < jen; j++) {\n            item = items[j];\n\n            if (type === 'cell') {\n              ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n            } else {\n              ret = fn.call(apiInst, context[i], item, i, j, rows);\n            }\n\n            if (ret !== undefined) {\n              a.push(ret);\n            }\n          }\n        }\n      }\n\n      if (a.length || alwaysNew) {\n        var api = new _Api2(context, flatten ? a.concat.apply([], a) : a);\n        var apiSelector = api.selector;\n        apiSelector.rows = selector.rows;\n        apiSelector.cols = selector.cols;\n        apiSelector.opts = selector.opts;\n        return api;\n      }\n\n      return this;\n    },\n    lastIndexOf: __arrayProto.lastIndexOf || function (obj, start) {\n      // Bit cheeky...\n      return this.indexOf.apply(this.toArray.reverse(), arguments);\n    },\n    length: 0,\n    map: function map(fn) {\n      var a = [];\n\n      if (__arrayProto.map) {\n        a = __arrayProto.map.call(this, fn, this);\n      } else {\n        // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n        for (var i = 0, ien = this.length; i < ien; i++) {\n          a.push(fn.call(this, this[i], i));\n        }\n      }\n\n      return new _Api2(this.context, a);\n    },\n    pluck: function pluck(prop) {\n      return this.map(function (el) {\n        return el[prop];\n      });\n    },\n    pop: __arrayProto.pop,\n    push: __arrayProto.push,\n    // Does not return an API instance\n    reduce: __arrayProto.reduce || function (fn, init) {\n      return _fnReduce(this, fn, init, 0, this.length, 1);\n    },\n    reduceRight: __arrayProto.reduceRight || function (fn, init) {\n      return _fnReduce(this, fn, init, this.length - 1, -1, -1);\n    },\n    reverse: __arrayProto.reverse,\n    // Object with rows, columns and opts\n    selector: null,\n    shift: __arrayProto.shift,\n    slice: function slice() {\n      return new _Api2(this.context, this);\n    },\n    sort: __arrayProto.sort,\n    // ? name - order?\n    splice: __arrayProto.splice,\n    toArray: function toArray() {\n      return __arrayProto.slice.call(this);\n    },\n    to$: function to$() {\n      return $(this);\n    },\n    toJQuery: function toJQuery() {\n      return $(this);\n    },\n    unique: function unique() {\n      return new _Api2(this.context, _unique(this));\n    },\n    unshift: __arrayProto.unshift\n  });\n\n  _Api2.extend = function (scope, obj, ext) {\n    // Only extend API instances and static properties of the API\n    if (!ext.length || !obj || !(obj instanceof _Api2) && !obj.__dt_wrapper) {\n      return;\n    }\n\n    var i,\n        ien,\n        struct,\n        methodScoping = function methodScoping(scope, fn, struc) {\n      return function () {\n        var ret = fn.apply(scope, arguments); // Method extension\n\n        _Api2.extend(ret, ret, struc.methodExt);\n\n        return ret;\n      };\n    };\n\n    for (i = 0, ien = ext.length; i < ien; i++) {\n      struct = ext[i]; // Value\n\n      obj[struct.name] = struct.type === 'function' ? methodScoping(scope, struct.val, struct) : struct.type === 'object' ? {} : struct.val;\n      obj[struct.name].__dt_wrapper = true; // Property extension\n\n      _Api2.extend(scope, obj[struct.name], struct.propExt);\n    }\n  }; // @todo - Is there need for an augment function?\n  // _Api.augment = function ( inst, name )\n  // {\n  // \t// Find src object in the structure from the name\n  // \tvar parts = name.split('.');\n  // \t_Api.extend( inst, obj );\n  // };\n  //     [\n  //       {\n  //         name:      'data'                -- string   - Property name\n  //         val:       function () {},       -- function - Api method (or undefined if just an object\n  //         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n  //         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n  //       },\n  //       {\n  //         name:     'row'\n  //         val:       {},\n  //         methodExt: [ ... ],\n  //         propExt:   [\n  //           {\n  //             name:      'data'\n  //             val:       function () {},\n  //             methodExt: [ ... ],\n  //             propExt:   [ ... ]\n  //           },\n  //           ...\n  //         ]\n  //       }\n  //     ]\n\n\n  _Api2.register = _api_register = function _api_register(name, val) {\n    if (Array.isArray(name)) {\n      for (var j = 0, jen = name.length; j < jen; j++) {\n        _Api2.register(name[j], val);\n      }\n\n      return;\n    }\n\n    var i,\n        ien,\n        heir = name.split('.'),\n        struct = __apiStruct,\n        key,\n        method;\n\n    var find = function find(src, name) {\n      for (var i = 0, ien = src.length; i < ien; i++) {\n        if (src[i].name === name) {\n          return src[i];\n        }\n      }\n\n      return null;\n    };\n\n    for (i = 0, ien = heir.length; i < ien; i++) {\n      method = heir[i].indexOf('()') !== -1;\n      key = method ? heir[i].replace('()', '') : heir[i];\n      var src = find(struct, key);\n\n      if (!src) {\n        src = {\n          name: key,\n          val: {},\n          methodExt: [],\n          propExt: [],\n          type: 'object'\n        };\n        struct.push(src);\n      }\n\n      if (i === ien - 1) {\n        src.val = val;\n        src.type = typeof val === 'function' ? 'function' : $.isPlainObject(val) ? 'object' : 'other';\n      } else {\n        struct = method ? src.methodExt : src.propExt;\n      }\n    }\n  };\n\n  _Api2.registerPlural = _api_registerPlural = function _api_registerPlural(pluralName, singularName, val) {\n    _Api2.register(pluralName, val);\n\n    _Api2.register(singularName, function () {\n      var ret = val.apply(this, arguments);\n\n      if (ret === this) {\n        // Returned item is the API instance that was passed in, return it\n        return this;\n      } else if (ret instanceof _Api2) {\n        // New API instance returned, want the value from the first item\n        // in the returned array for the singular result.\n        return ret.length ? Array.isArray(ret[0]) ? new _Api2(ret.context, ret[0]) : // Array results are 'enhanced'\n        ret[0] : undefined;\n      } // Non-API return - just fire it back\n\n\n      return ret;\n    });\n  };\n  /**\n   * Selector for HTML tables. Apply the given selector to the give array of\n   * DataTables settings objects.\n   *\n   * @param {string|integer} [selector] jQuery selector string or integer\n   * @param  {array} Array of DataTables settings objects to be filtered\n   * @return {array}\n   * @ignore\n   */\n\n\n  var __table_selector = function __table_selector(selector, a) {\n    if (Array.isArray(selector)) {\n      return $.map(selector, function (item) {\n        return __table_selector(item, a);\n      });\n    } // Integer is used to pick out a table by index\n\n\n    if (typeof selector === 'number') {\n      return [a[selector]];\n    } // Perform a jQuery selector on the table nodes\n\n\n    var nodes = $.map(a, function (el, i) {\n      return el.nTable;\n    });\n    return $(nodes).filter(selector).map(function (i) {\n      // Need to translate back from the table node to the settings\n      var idx = $.inArray(this, nodes);\n      return a[idx];\n    }).toArray();\n  };\n  /**\n   * Context selector for the API's context (i.e. the tables the API instance\n   * refers to.\n   *\n   * @name    DataTable.Api#tables\n   * @param {string|integer} [selector] Selector to pick which tables the iterator\n   *   should operate on. If not given, all tables in the current context are\n   *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n   *   select multiple tables or as an integer to select a single table.\n   * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n   */\n\n\n  _api_register('tables()', function (selector) {\n    // A new instance is created if there was a selector specified\n    return selector !== undefined && selector !== null ? new _Api2(__table_selector(selector, this.context)) : this;\n  });\n\n  _api_register('table()', function (selector) {\n    var tables = this.tables(selector);\n    var ctx = tables.context; // Truncate to the first matched table\n\n    return ctx.length ? new _Api2(ctx[0]) : tables;\n  });\n\n  _api_registerPlural('tables().nodes()', 'table().node()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx.nTable;\n    }, 1);\n  });\n\n  _api_registerPlural('tables().body()', 'table().body()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx.nTBody;\n    }, 1);\n  });\n\n  _api_registerPlural('tables().header()', 'table().header()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx.nTHead;\n    }, 1);\n  });\n\n  _api_registerPlural('tables().footer()', 'table().footer()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx.nTFoot;\n    }, 1);\n  });\n\n  _api_registerPlural('tables().containers()', 'table().container()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx.nTableWrapper;\n    }, 1);\n  });\n  /**\n   * Redraw the tables in the current context.\n   */\n\n\n  _api_register('draw()', function (paging) {\n    return this.iterator('table', function (settings) {\n      if (paging === 'page') {\n        _fnDraw(settings);\n      } else {\n        if (typeof paging === 'string') {\n          paging = paging === 'full-hold' ? false : true;\n        }\n\n        _fnReDraw(settings, paging === false);\n      }\n    });\n  });\n  /**\n   * Get the current page index.\n   *\n   * @return {integer} Current page index (zero based)\n   */\n\n  /**\n  * Set the current page.\n  *\n  * Note that if you attempt to show a page which does not exist, DataTables will\n  * not throw an error, but rather reset the paging.\n  *\n  * @param {integer|string} action The paging action to take. This can be one of:\n  *  * `integer` - The page index to jump to\n  *  * `string` - An action to take:\n  *    * `first` - Jump to first page.\n  *    * `next` - Jump to the next page\n  *    * `previous` - Jump to previous page\n  *    * `last` - Jump to the last page.\n  * @returns {DataTables.Api} this\n  */\n\n\n  _api_register('page()', function (action) {\n    if (action === undefined) {\n      return this.page.info().page; // not an expensive call\n    } // else, have an action to take on all tables\n\n\n    return this.iterator('table', function (settings) {\n      _fnPageChange(settings, action);\n    });\n  });\n  /**\n   * Paging information for the first table in the current context.\n   *\n   * If you require paging information for another table, use the `table()` method\n   * with a suitable selector.\n   *\n   * @return {object} Object with the following properties set:\n   *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n   *  * `pages` - Total number of pages\n   *  * `start` - Display index for the first record shown on the current page\n   *  * `end` - Display index for the last record shown on the current page\n   *  * `length` - Display length (number of records). Note that generally `start\n   *    + length = end`, but this is not always true, for example if there are\n   *    only 2 records to show on the final page, with a length of 10.\n   *  * `recordsTotal` - Full data set length\n   *  * `recordsDisplay` - Data set length once the current filtering criterion\n   *    are applied.\n   */\n\n\n  _api_register('page.info()', function (action) {\n    if (this.context.length === 0) {\n      return undefined;\n    }\n\n    var settings = this.context[0],\n        start = settings._iDisplayStart,\n        len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n        visRecords = settings.fnRecordsDisplay(),\n        all = len === -1;\n    return {\n      \"page\": all ? 0 : Math.floor(start / len),\n      \"pages\": all ? 1 : Math.ceil(visRecords / len),\n      \"start\": start,\n      \"end\": settings.fnDisplayEnd(),\n      \"length\": len,\n      \"recordsTotal\": settings.fnRecordsTotal(),\n      \"recordsDisplay\": visRecords,\n      \"serverSide\": _fnDataSource(settings) === 'ssp'\n    };\n  });\n  /**\n   * Get the current page length.\n   *\n   * @return {integer} Current page length. Note `-1` indicates that all records\n   *   are to be shown.\n   */\n\n  /**\n  * Set the current page length.\n  *\n  * @param {integer} Page length to set. Use `-1` to show all records.\n  * @returns {DataTables.Api} this\n  */\n\n\n  _api_register('page.len()', function (len) {\n    // Note that we can't call this function 'length()' because `length`\n    // is a Javascript property of functions which defines how many arguments\n    // the function expects.\n    if (len === undefined) {\n      return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined;\n    } // else, set the page length\n\n\n    return this.iterator('table', function (settings) {\n      _fnLengthChange(settings, len);\n    });\n  });\n\n  var __reload = function __reload(settings, holdPosition, callback) {\n    // Use the draw event to trigger a callback\n    if (callback) {\n      var api = new _Api2(settings);\n      api.one('draw', function () {\n        callback(api.ajax.json());\n      });\n    }\n\n    if (_fnDataSource(settings) == 'ssp') {\n      _fnReDraw(settings, holdPosition);\n    } else {\n      _fnProcessingDisplay(settings, true); // Cancel an existing request\n\n\n      var xhr = settings.jqXHR;\n\n      if (xhr && xhr.readyState !== 4) {\n        xhr.abort();\n      } // Trigger xhr\n\n\n      _fnBuildAjax(settings, [], function (json) {\n        _fnClearTable(settings);\n\n        var data = _fnAjaxDataSrc(settings, json);\n\n        for (var i = 0, ien = data.length; i < ien; i++) {\n          _fnAddData(settings, data[i]);\n        }\n\n        _fnReDraw(settings, holdPosition);\n\n        _fnProcessingDisplay(settings, false);\n      });\n    }\n  };\n  /**\n   * Get the JSON response from the last Ajax request that DataTables made to the\n   * server. Note that this returns the JSON from the first table in the current\n   * context.\n   *\n   * @return {object} JSON received from the server.\n   */\n\n\n  _api_register('ajax.json()', function () {\n    var ctx = this.context;\n\n    if (ctx.length > 0) {\n      return ctx[0].json;\n    } // else return undefined;\n\n  });\n  /**\n   * Get the data submitted in the last Ajax request\n   */\n\n\n  _api_register('ajax.params()', function () {\n    var ctx = this.context;\n\n    if (ctx.length > 0) {\n      return ctx[0].oAjaxData;\n    } // else return undefined;\n\n  });\n  /**\n   * Reload tables from the Ajax data source. Note that this function will\n   * automatically re-draw the table when the remote data has been loaded.\n   *\n   * @param {boolean} [reset=true] Reset (default) or hold the current paging\n   *   position. A full re-sort and re-filter is performed when this method is\n   *   called, which is why the pagination reset is the default action.\n   * @returns {DataTables.Api} this\n   */\n\n\n  _api_register('ajax.reload()', function (callback, resetPaging) {\n    return this.iterator('table', function (settings) {\n      __reload(settings, resetPaging === false, callback);\n    });\n  });\n  /**\n   * Get the current Ajax URL. Note that this returns the URL from the first\n   * table in the current context.\n   *\n   * @return {string} Current Ajax source URL\n   */\n\n  /**\n  * Set the Ajax URL. Note that this will set the URL for all tables in the\n  * current context.\n  *\n  * @param {string} url URL to set.\n  * @returns {DataTables.Api} this\n  */\n\n\n  _api_register('ajax.url()', function (url) {\n    var ctx = this.context;\n\n    if (url === undefined) {\n      // get\n      if (ctx.length === 0) {\n        return undefined;\n      }\n\n      ctx = ctx[0];\n      return ctx.ajax ? $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax : ctx.sAjaxSource;\n    } // set\n\n\n    return this.iterator('table', function (settings) {\n      if ($.isPlainObject(settings.ajax)) {\n        settings.ajax.url = url;\n      } else {\n        settings.ajax = url;\n      } // No need to consider sAjaxSource here since DataTables gives priority\n      // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n      // value of `sAjaxSource` redundant.\n\n    });\n  });\n  /**\n   * Load data from the newly set Ajax URL. Note that this method is only\n   * available when `ajax.url()` is used to set a URL. Additionally, this method\n   * has the same effect as calling `ajax.reload()` but is provided for\n   * convenience when setting a new URL. Like `ajax.reload()` it will\n   * automatically redraw the table once the remote data has been loaded.\n   *\n   * @returns {DataTables.Api} this\n   */\n\n\n  _api_register('ajax.url().load()', function (callback, resetPaging) {\n    // Same as a reload, but makes sense to present it for easy access after a\n    // url change\n    return this.iterator('table', function (ctx) {\n      __reload(ctx, resetPaging === false, callback);\n    });\n  });\n\n  var _selector_run = function _selector_run(type, selector, selectFn, settings, opts) {\n    var out = [],\n        res,\n        a,\n        i,\n        ien,\n        j,\n        jen,\n        selectorType = typeof selector; // Can't just check for isArray here, as an API or jQuery instance might be\n    // given with their array like look\n\n    if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n      selector = [selector];\n    }\n\n    for (i = 0, ien = selector.length; i < ien; i++) {\n      // Only split on simple strings - complex expressions will be jQuery selectors\n      a = selector[i] && selector[i].split && !selector[i].match(/[\\[\\(:]/) ? selector[i].split(',') : [selector[i]];\n\n      for (j = 0, jen = a.length; j < jen; j++) {\n        res = selectFn(typeof a[j] === 'string' ? a[j].trim() : a[j]);\n\n        if (res && res.length) {\n          out = out.concat(res);\n        }\n      }\n    } // selector extensions\n\n\n    var ext = _ext.selector[type];\n\n    if (ext.length) {\n      for (i = 0, ien = ext.length; i < ien; i++) {\n        out = ext[i](settings, opts, out);\n      }\n    }\n\n    return _unique(out);\n  };\n\n  var _selector_opts = function _selector_opts(opts) {\n    if (!opts) {\n      opts = {};\n    } // Backwards compatibility for 1.9- which used the terminology filter rather\n    // than search\n\n\n    if (opts.filter && opts.search === undefined) {\n      opts.search = opts.filter;\n    }\n\n    return $.extend({\n      search: 'none',\n      order: 'current',\n      page: 'all'\n    }, opts);\n  };\n\n  var _selector_first = function _selector_first(inst) {\n    // Reduce the API instance to the first item found\n    for (var i = 0, ien = inst.length; i < ien; i++) {\n      if (inst[i].length > 0) {\n        // Assign the first element to the first item in the instance\n        // and truncate the instance and context\n        inst[0] = inst[i];\n        inst[0].length = 1;\n        inst.length = 1;\n        inst.context = [inst.context[i]];\n        return inst;\n      }\n    } // Not found - return an empty instance\n\n\n    inst.length = 0;\n    return inst;\n  };\n\n  var _selector_row_indexes = function _selector_row_indexes(settings, opts) {\n    var i,\n        ien,\n        tmp,\n        a = [],\n        displayFiltered = settings.aiDisplay,\n        displayMaster = settings.aiDisplayMaster;\n    var search = opts.search,\n        // none, applied, removed\n    order = opts.order,\n        // applied, current, index (original - compatibility with 1.9)\n    page = opts.page; // all, current\n\n    if (_fnDataSource(settings) == 'ssp') {\n      // In server-side processing mode, most options are irrelevant since\n      // rows not shown don't exist and the index order is the applied order\n      // Removed is a special case - for consistency just return an empty\n      // array\n      return search === 'removed' ? [] : _range(0, displayMaster.length);\n    } else if (page == 'current') {\n      // Current page implies that order=current and filter=applied, since it is\n      // fairly senseless otherwise, regardless of what order and search actually\n      // are\n      for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n        a.push(displayFiltered[i]);\n      }\n    } else if (order == 'current' || order == 'applied') {\n      if (search == 'none') {\n        a = displayMaster.slice();\n      } else if (search == 'applied') {\n        a = displayFiltered.slice();\n      } else if (search == 'removed') {\n        // O(n+m) solution by creating a hash map\n        var displayFilteredMap = {};\n\n        for (var i = 0, ien = displayFiltered.length; i < ien; i++) {\n          displayFilteredMap[displayFiltered[i]] = null;\n        }\n\n        a = $.map(displayMaster, function (el) {\n          return !displayFilteredMap.hasOwnProperty(el) ? el : null;\n        });\n      }\n    } else if (order == 'index' || order == 'original') {\n      for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n        if (search == 'none') {\n          a.push(i);\n        } else {\n          // applied | removed\n          tmp = $.inArray(i, displayFiltered);\n\n          if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n            a.push(i);\n          }\n        }\n      }\n    }\n\n    return a;\n  };\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Rows\n   *\n   * {}          - no selector - use all available rows\n   * {integer}   - row aoData index\n   * {node}      - TR node\n   * {string}    - jQuery selector to apply to the TR elements\n   * {array}     - jQuery array of nodes, or simply an array of TR nodes\n   *\n   */\n\n\n  var __row_selector = function __row_selector(settings, selector, opts) {\n    var rows;\n\n    var run = function run(sel) {\n      var selInt = _intVal(sel);\n\n      var i, ien;\n      var aoData = settings.aoData; // Short cut - selector is a number and no options provided (default is\n      // all records, so no need to check if the index is in there, since it\n      // must be - dev error if the index doesn't exist).\n\n      if (selInt !== null && !opts) {\n        return [selInt];\n      }\n\n      if (!rows) {\n        rows = _selector_row_indexes(settings, opts);\n      }\n\n      if (selInt !== null && $.inArray(selInt, rows) !== -1) {\n        // Selector - integer\n        return [selInt];\n      } else if (sel === null || sel === undefined || sel === '') {\n        // Selector - none\n        return rows;\n      } // Selector - function\n\n\n      if (typeof sel === 'function') {\n        return $.map(rows, function (idx) {\n          var row = aoData[idx];\n          return sel(idx, row._aData, row.nTr) ? idx : null;\n        });\n      } // Selector - node\n\n\n      if (sel.nodeName) {\n        var rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n\n        var cellIdx = sel._DT_CellIndex;\n\n        if (rowIdx !== undefined) {\n          // Make sure that the row is actually still present in the table\n          return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];\n        } else if (cellIdx) {\n          return aoData[cellIdx.row] && aoData[cellIdx.row].nTr === sel.parentNode ? [cellIdx.row] : [];\n        } else {\n          var host = $(sel).closest('*[data-dt-row]');\n          return host.length ? [host.data('dt-row')] : [];\n        }\n      } // ID selector. Want to always be able to select rows by id, regardless\n      // of if the tr element has been created or not, so can't rely upon\n      // jQuery here - hence a custom implementation. This does not match\n      // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n      // but to select it using a CSS selector engine (like Sizzle or\n      // querySelect) it would need to need to be escaped for some characters.\n      // DataTables simplifies this for row selectors since you can select\n      // only a row. A # indicates an id any anything that follows is the id -\n      // unescaped.\n\n\n      if (typeof sel === 'string' && sel.charAt(0) === '#') {\n        // get row index from id\n        var rowObj = settings.aIds[sel.replace(/^#/, '')];\n\n        if (rowObj !== undefined) {\n          return [rowObj.idx];\n        } // need to fall through to jQuery in case there is DOM id that\n        // matches\n\n      } // Get nodes in the order from the `rows` array with null values removed\n\n\n      var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, 'nTr')); // Selector - jQuery selector string, array of nodes or jQuery object/\n      // As jQuery's .filter() allows jQuery objects to be passed in filter,\n      // it also allows arrays, so this will cope with all three options\n\n\n      return $(nodes).filter(sel).map(function () {\n        return this._DT_RowIndex;\n      }).toArray();\n    };\n\n    return _selector_run('row', selector, run, settings, opts);\n  };\n\n  _api_register('rows()', function (selector, opts) {\n    // argument shifting\n    if (selector === undefined) {\n      selector = '';\n    } else if ($.isPlainObject(selector)) {\n      opts = selector;\n      selector = '';\n    }\n\n    opts = _selector_opts(opts);\n    var inst = this.iterator('table', function (settings) {\n      return __row_selector(settings, selector, opts);\n    }, 1); // Want argument shifting here and in __row_selector?\n\n    inst.selector.rows = selector;\n    inst.selector.opts = opts;\n    return inst;\n  });\n\n  _api_register('rows().nodes()', function () {\n    return this.iterator('row', function (settings, row) {\n      return settings.aoData[row].nTr || undefined;\n    }, 1);\n  });\n\n  _api_register('rows().data()', function () {\n    return this.iterator(true, 'rows', function (settings, rows) {\n      return _pluck_order(settings.aoData, rows, '_aData');\n    }, 1);\n  });\n\n  _api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n    return this.iterator('row', function (settings, row) {\n      var r = settings.aoData[row];\n      return type === 'search' ? r._aFilterData : r._aSortData;\n    }, 1);\n  });\n\n  _api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n    return this.iterator('row', function (settings, row) {\n      _fnInvalidate(settings, row, src);\n    });\n  });\n\n  _api_registerPlural('rows().indexes()', 'row().index()', function () {\n    return this.iterator('row', function (settings, row) {\n      return row;\n    }, 1);\n  });\n\n  _api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n    var a = [];\n    var context = this.context; // `iterator` will drop undefined values, but in this case we want them\n\n    for (var i = 0, ien = context.length; i < ien; i++) {\n      for (var j = 0, jen = this[i].length; j < jen; j++) {\n        var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n        a.push((hash === true ? '#' : '') + id);\n      }\n    }\n\n    return new _Api2(context, a);\n  });\n\n  _api_registerPlural('rows().remove()', 'row().remove()', function () {\n    var that = this;\n    this.iterator('row', function (settings, row, thatIdx) {\n      var data = settings.aoData;\n      var rowData = data[row];\n      var i, ien, j, jen;\n      var loopRow, loopCells;\n      data.splice(row, 1); // Update the cached indexes\n\n      for (i = 0, ien = data.length; i < ien; i++) {\n        loopRow = data[i];\n        loopCells = loopRow.anCells; // Rows\n\n        if (loopRow.nTr !== null) {\n          loopRow.nTr._DT_RowIndex = i;\n        } // Cells\n\n\n        if (loopCells !== null) {\n          for (j = 0, jen = loopCells.length; j < jen; j++) {\n            loopCells[j]._DT_CellIndex.row = i;\n          }\n        }\n      } // Delete from the display arrays\n\n\n      _fnDeleteIndex(settings.aiDisplayMaster, row);\n\n      _fnDeleteIndex(settings.aiDisplay, row);\n\n      _fnDeleteIndex(that[thatIdx], row, false); // maintain local indexes\n      // For server-side processing tables - subtract the deleted row from the count\n\n\n      if (settings._iRecordsDisplay > 0) {\n        settings._iRecordsDisplay--;\n      } // Check for an 'overflow' they case for displaying the table\n\n\n      _fnLengthOverflow(settings); // Remove the row's ID reference if there is one\n\n\n      var id = settings.rowIdFn(rowData._aData);\n\n      if (id !== undefined) {\n        delete settings.aIds[id];\n      }\n    });\n    this.iterator('table', function (settings) {\n      for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n        settings.aoData[i].idx = i;\n      }\n    });\n    return this;\n  });\n\n  _api_register('rows.add()', function (rows) {\n    var newRows = this.iterator('table', function (settings) {\n      var row, i, ien;\n      var out = [];\n\n      for (i = 0, ien = rows.length; i < ien; i++) {\n        row = rows[i];\n\n        if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n          out.push(_fnAddTr(settings, row)[0]);\n        } else {\n          out.push(_fnAddData(settings, row));\n        }\n      }\n\n      return out;\n    }, 1); // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\n    var modRows = this.rows(-1);\n    modRows.pop();\n    $.merge(modRows, newRows);\n    return modRows;\n  });\n  /**\n   *\n   */\n\n\n  _api_register('row()', function (selector, opts) {\n    return _selector_first(this.rows(selector, opts));\n  });\n\n  _api_register('row().data()', function (data) {\n    var ctx = this.context;\n\n    if (data === undefined) {\n      // Get\n      return ctx.length && this.length ? ctx[0].aoData[this[0]]._aData : undefined;\n    } // Set\n\n\n    var row = ctx[0].aoData[this[0]];\n    row._aData = data; // If the DOM has an id, and the data source is an array\n\n    if (Array.isArray(data) && row.nTr && row.nTr.id) {\n      _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n    } // Automatically invalidate\n\n\n    _fnInvalidate(ctx[0], this[0], 'data');\n\n    return this;\n  });\n\n  _api_register('row().node()', function () {\n    var ctx = this.context;\n    return ctx.length && this.length ? ctx[0].aoData[this[0]].nTr || null : null;\n  });\n\n  _api_register('row.add()', function (row) {\n    // Allow a jQuery object to be passed in - only a single row is added from\n    // it though - the first element in the set\n    if (row instanceof $ && row.length) {\n      row = row[0];\n    }\n\n    var rows = this.iterator('table', function (settings) {\n      if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n        return _fnAddTr(settings, row)[0];\n      }\n\n      return _fnAddData(settings, row);\n    }); // Return an Api.rows() extended instance, with the newly added row selected\n\n    return this.row(rows[0]);\n  });\n\n  $(document).on('plugin-init.dt', function (e, context) {\n    var api = new _Api2(context);\n    api.on('stateSaveParams', function (e, settings, data) {\n      var indexes = api.rows().iterator('row', function (settings, idx) {\n        return settings.aoData[idx]._detailsShow ? idx : undefined;\n      });\n      data.childRows = api.rows(indexes).ids(true).toArray();\n    });\n    var loaded = api.state.loaded();\n\n    if (loaded && loaded.childRows) {\n      api.rows(loaded.childRows).every(function () {\n        _fnCallbackFire(context, null, 'requestChild', [this]);\n      });\n    }\n  });\n\n  var __details_add = function __details_add(ctx, row, data, klass) {\n    // Convert to array of TR elements\n    var rows = [];\n\n    var addRow = function addRow(r, k) {\n      // Recursion to allow for arrays of jQuery objects\n      if (Array.isArray(r) || r instanceof $) {\n        for (var i = 0, ien = r.length; i < ien; i++) {\n          addRow(r[i], k);\n        }\n\n        return;\n      } // If we get a TR element, then just add it directly - up to the dev\n      // to add the correct number of columns etc\n\n\n      if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n        rows.push(r);\n      } else {\n        // Otherwise create a row with a wrapper\n        var created = $('<tr><td></td></tr>').addClass(k);\n        $('td', created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);\n        rows.push(created[0]);\n      }\n    };\n\n    addRow(data, klass);\n\n    if (row._details) {\n      row._details.detach();\n    }\n\n    row._details = $(rows); // If the children were already shown, that state should be retained\n\n    if (row._detailsShow) {\n      row._details.insertAfter(row.nTr);\n    }\n  };\n\n  var __details_remove = function __details_remove(api, idx) {\n    var ctx = api.context;\n\n    if (ctx.length) {\n      var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n\n      if (row && row._details) {\n        row._details.remove();\n\n        row._detailsShow = undefined;\n        row._details = undefined;\n        $(row.nTr).removeClass('dt-hasChild');\n\n        _fnSaveState(ctx[0]);\n      }\n    }\n  };\n\n  var __details_display = function __details_display(api, show) {\n    var ctx = api.context;\n\n    if (ctx.length && api.length) {\n      var row = ctx[0].aoData[api[0]];\n\n      if (row._details) {\n        row._detailsShow = show;\n\n        if (show) {\n          row._details.insertAfter(row.nTr);\n\n          $(row.nTr).addClass('dt-hasChild');\n        } else {\n          row._details.detach();\n\n          $(row.nTr).removeClass('dt-hasChild');\n        }\n\n        _fnCallbackFire(ctx[0], null, 'childRow', [show, api.row(api[0])]);\n\n        __details_events(ctx[0]);\n\n        _fnSaveState(ctx[0]);\n      }\n    }\n  };\n\n  var __details_events = function __details_events(settings) {\n    var api = new _Api2(settings);\n    var namespace = '.dt.DT_details';\n    var drawEvent = 'draw' + namespace;\n    var colvisEvent = 'column-visibility' + namespace;\n    var destroyEvent = 'destroy' + namespace;\n    var data = settings.aoData;\n    api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n\n    if (_pluck(data, '_details').length > 0) {\n      // On each draw, insert the required elements into the document\n      api.on(drawEvent, function (e, ctx) {\n        if (settings !== ctx) {\n          return;\n        }\n\n        api.rows({\n          page: 'current'\n        }).eq(0).each(function (idx) {\n          // Internal data grab\n          var row = data[idx];\n\n          if (row._detailsShow) {\n            row._details.insertAfter(row.nTr);\n          }\n        });\n      }); // Column visibility change - update the colspan\n\n      api.on(colvisEvent, function (e, ctx, idx, vis) {\n        if (settings !== ctx) {\n          return;\n        } // Update the colspan for the details rows (note, only if it already has\n        // a colspan)\n\n\n        var row,\n            visible = _fnVisbleColumns(ctx);\n\n        for (var i = 0, ien = data.length; i < ien; i++) {\n          row = data[i];\n\n          if (row._details) {\n            row._details.children('td[colspan]').attr('colspan', visible);\n          }\n        }\n      }); // Table destroyed - nuke any child rows\n\n      api.on(destroyEvent, function (e, ctx) {\n        if (settings !== ctx) {\n          return;\n        }\n\n        for (var i = 0, ien = data.length; i < ien; i++) {\n          if (data[i]._details) {\n            __details_remove(api, i);\n          }\n        }\n      });\n    }\n  }; // Strings for the method names to help minification\n\n\n  var _emp = '';\n\n  var _child_obj = _emp + 'row().child';\n\n  var _child_mth = _child_obj + '()'; // data can be:\n  //  tr\n  //  string\n  //  jQuery or array of any of the above\n\n\n  _api_register(_child_mth, function (data, klass) {\n    var ctx = this.context;\n\n    if (data === undefined) {\n      // get\n      return ctx.length && this.length ? ctx[0].aoData[this[0]]._details : undefined;\n    } else if (data === true) {\n      // show\n      this.child.show();\n    } else if (data === false) {\n      // remove\n      __details_remove(this);\n    } else if (ctx.length && this.length) {\n      // set\n      __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n    }\n\n    return this;\n  });\n\n  _api_register([_child_obj + '.show()', _child_mth + '.show()' // only when `child()` was called with parameters (without\n  ], function (show) {\n    // it returns an object and this method is not executed)\n    __details_display(this, true);\n\n    return this;\n  });\n\n  _api_register([_child_obj + '.hide()', _child_mth + '.hide()' // only when `child()` was called with parameters (without\n  ], function () {\n    // it returns an object and this method is not executed)\n    __details_display(this, false);\n\n    return this;\n  });\n\n  _api_register([_child_obj + '.remove()', _child_mth + '.remove()' // only when `child()` was called with parameters (without\n  ], function () {\n    // it returns an object and this method is not executed)\n    __details_remove(this);\n\n    return this;\n  });\n\n  _api_register(_child_obj + '.isShown()', function () {\n    var ctx = this.context;\n\n    if (ctx.length && this.length) {\n      // _detailsShown as false or undefined will fall through to return false\n      return ctx[0].aoData[this[0]]._detailsShow || false;\n    }\n\n    return false;\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Columns\n   *\n   * {integer}           - column index (>=0 count from left, <0 count from right)\n   * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n   * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n   * \"{string}:name\"     - column name\n   * \"{string}\"          - jQuery selector on column header nodes\n   *\n   */\n  // can be an array of these items, comma separated list, or an array of comma\n  // separated lists\n\n\n  var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/; // r1 and r2 are redundant - but it means that the parameters match for the\n  // iterator callback in columns().data()\n\n  var __columnData = function __columnData(settings, column, r1, r2, rows) {\n    var a = [];\n\n    for (var row = 0, ien = rows.length; row < ien; row++) {\n      a.push(_fnGetCellData(settings, rows[row], column));\n    }\n\n    return a;\n  };\n\n  var __column_selector = function __column_selector(settings, selector, opts) {\n    var columns = settings.aoColumns,\n        names = _pluck(columns, 'sName'),\n        nodes = _pluck(columns, 'nTh');\n\n    var run = function run(s) {\n      var selInt = _intVal(s); // Selector - all\n\n\n      if (s === '') {\n        return _range(columns.length);\n      } // Selector - index\n\n\n      if (selInt !== null) {\n        return [selInt >= 0 ? selInt : // Count from left\n        columns.length + selInt // Count from right (+ because its a negative value)\n        ];\n      } // Selector = function\n\n\n      if (typeof s === 'function') {\n        var rows = _selector_row_indexes(settings, opts);\n\n        return $.map(columns, function (col, idx) {\n          return s(idx, __columnData(settings, idx, 0, 0, rows), nodes[idx]) ? idx : null;\n        });\n      } // jQuery or string selector\n\n\n      var match = typeof s === 'string' ? s.match(__re_column_selector) : '';\n\n      if (match) {\n        switch (match[2]) {\n          case 'visIdx':\n          case 'visible':\n            var idx = parseInt(match[1], 10); // Visible index given, convert to column index\n\n            if (idx < 0) {\n              // Counting from the right\n              var visColumns = $.map(columns, function (col, i) {\n                return col.bVisible ? i : null;\n              });\n              return [visColumns[visColumns.length + idx]];\n            } // Counting from the left\n\n\n            return [_fnVisibleToColumnIndex(settings, idx)];\n\n          case 'name':\n            // match by name. `names` is column index complete and in order\n            return $.map(names, function (name, i) {\n              return name === match[1] ? i : null;\n            });\n\n          default:\n            return [];\n        }\n      } // Cell in the table body\n\n\n      if (s.nodeName && s._DT_CellIndex) {\n        return [s._DT_CellIndex.column];\n      } // jQuery selector on the TH elements for the columns\n\n\n      var jqResult = $(nodes).filter(s).map(function () {\n        return $.inArray(this, nodes); // `nodes` is column index complete and in order\n      }).toArray();\n\n      if (jqResult.length || !s.nodeName) {\n        return jqResult;\n      } // Otherwise a node which might have a `dt-column` data attribute, or be\n      // a child or such an element\n\n\n      var host = $(s).closest('*[data-dt-column]');\n      return host.length ? [host.data('dt-column')] : [];\n    };\n\n    return _selector_run('column', selector, run, settings, opts);\n  };\n\n  var __setColumnVis = function __setColumnVis(settings, column, vis) {\n    var cols = settings.aoColumns,\n        col = cols[column],\n        data = settings.aoData,\n        row,\n        cells,\n        i,\n        ien,\n        tr; // Get\n\n    if (vis === undefined) {\n      return col.bVisible;\n    } // Set\n    // No change\n\n\n    if (col.bVisible === vis) {\n      return;\n    }\n\n    if (vis) {\n      // Insert column\n      // Need to decide if we should use appendChild or insertBefore\n      var insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1);\n\n      for (i = 0, ien = data.length; i < ien; i++) {\n        tr = data[i].nTr;\n        cells = data[i].anCells;\n\n        if (tr) {\n          // insertBefore can act like appendChild if 2nd arg is null\n          tr.insertBefore(cells[column], cells[insertBefore] || null);\n        }\n      }\n    } else {\n      // Remove column\n      $(_pluck(settings.aoData, 'anCells', column)).detach();\n    } // Common actions\n\n\n    col.bVisible = vis;\n  };\n\n  _api_register('columns()', function (selector, opts) {\n    // argument shifting\n    if (selector === undefined) {\n      selector = '';\n    } else if ($.isPlainObject(selector)) {\n      opts = selector;\n      selector = '';\n    }\n\n    opts = _selector_opts(opts);\n    var inst = this.iterator('table', function (settings) {\n      return __column_selector(settings, selector, opts);\n    }, 1); // Want argument shifting here and in _row_selector?\n\n    inst.selector.cols = selector;\n    inst.selector.opts = opts;\n    return inst;\n  });\n\n  _api_registerPlural('columns().header()', 'column().header()', function (selector, opts) {\n    return this.iterator('column', function (settings, column) {\n      return settings.aoColumns[column].nTh;\n    }, 1);\n  });\n\n  _api_registerPlural('columns().footer()', 'column().footer()', function (selector, opts) {\n    return this.iterator('column', function (settings, column) {\n      return settings.aoColumns[column].nTf;\n    }, 1);\n  });\n\n  _api_registerPlural('columns().data()', 'column().data()', function () {\n    return this.iterator('column-rows', __columnData, 1);\n  });\n\n  _api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n    return this.iterator('column', function (settings, column) {\n      return settings.aoColumns[column].mData;\n    }, 1);\n  });\n\n  _api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n    return this.iterator('column-rows', function (settings, column, i, j, rows) {\n      return _pluck_order(settings.aoData, rows, type === 'search' ? '_aFilterData' : '_aSortData', column);\n    }, 1);\n  });\n\n  _api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n    return this.iterator('column-rows', function (settings, column, i, j, rows) {\n      return _pluck_order(settings.aoData, rows, 'anCells', column);\n    }, 1);\n  });\n\n  _api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n    var that = this;\n    var ret = this.iterator('column', function (settings, column) {\n      if (vis === undefined) {\n        return settings.aoColumns[column].bVisible;\n      } // else\n\n\n      __setColumnVis(settings, column, vis);\n    }); // Group the column visibility changes\n\n    if (vis !== undefined) {\n      this.iterator('table', function (settings) {\n        // Redraw the header after changes\n        _fnDrawHead(settings, settings.aoHeader);\n\n        _fnDrawHead(settings, settings.aoFooter); // Update colspan for no records display. Child rows and extensions will use their own\n        // listeners to do this - only need to update the empty table item here\n\n\n        if (!settings.aiDisplay.length) {\n          $(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n        }\n\n        _fnSaveState(settings); // Second loop once the first is done for events\n\n\n        that.iterator('column', function (settings, column) {\n          _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n        });\n\n        if (calc === undefined || calc) {\n          that.columns.adjust();\n        }\n      });\n    }\n\n    return ret;\n  });\n\n  _api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n    return this.iterator('column', function (settings, column) {\n      return type === 'visible' ? _fnColumnIndexToVisible(settings, column) : column;\n    }, 1);\n  });\n\n  _api_register('columns.adjust()', function () {\n    return this.iterator('table', function (settings) {\n      _fnAdjustColumnSizing(settings);\n    }, 1);\n  });\n\n  _api_register('column.index()', function (type, idx) {\n    if (this.context.length !== 0) {\n      var ctx = this.context[0];\n\n      if (type === 'fromVisible' || type === 'toData') {\n        return _fnVisibleToColumnIndex(ctx, idx);\n      } else if (type === 'fromData' || type === 'toVisible') {\n        return _fnColumnIndexToVisible(ctx, idx);\n      }\n    }\n  });\n\n  _api_register('column()', function (selector, opts) {\n    return _selector_first(this.columns(selector, opts));\n  });\n\n  var __cell_selector = function __cell_selector(settings, selector, opts) {\n    var data = settings.aoData;\n\n    var rows = _selector_row_indexes(settings, opts);\n\n    var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n\n    var allCells = $(_flatten([], cells));\n    var row;\n    var columns = settings.aoColumns.length;\n    var a, i, ien, j, o, host;\n\n    var run = function run(s) {\n      var fnSelector = typeof s === 'function';\n\n      if (s === null || s === undefined || fnSelector) {\n        // All cells and function selectors\n        a = [];\n\n        for (i = 0, ien = rows.length; i < ien; i++) {\n          row = rows[i];\n\n          for (j = 0; j < columns; j++) {\n            o = {\n              row: row,\n              column: j\n            };\n\n            if (fnSelector) {\n              // Selector - function\n              host = data[row];\n\n              if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n                a.push(o);\n              }\n            } else {\n              // Selector - all\n              a.push(o);\n            }\n          }\n        }\n\n        return a;\n      } // Selector - index\n\n\n      if ($.isPlainObject(s)) {\n        // Valid cell index and its in the array of selectable rows\n        return s.column !== undefined && s.row !== undefined && $.inArray(s.row, rows) !== -1 ? [s] : [];\n      } // Selector - jQuery filtered cells\n\n\n      var jqResult = allCells.filter(s).map(function (i, el) {\n        return {\n          // use a new object, in case someone changes the values\n          row: el._DT_CellIndex.row,\n          column: el._DT_CellIndex.column\n        };\n      }).toArray();\n\n      if (jqResult.length || !s.nodeName) {\n        return jqResult;\n      } // Otherwise the selector is a node, and there is one last option - the\n      // element might be a child of an element which has dt-row and dt-column\n      // data attributes\n\n\n      host = $(s).closest('*[data-dt-row]');\n      return host.length ? [{\n        row: host.data('dt-row'),\n        column: host.data('dt-column')\n      }] : [];\n    };\n\n    return _selector_run('cell', selector, run, settings, opts);\n  };\n\n  _api_register('cells()', function (rowSelector, columnSelector, opts) {\n    // Argument shifting\n    if ($.isPlainObject(rowSelector)) {\n      // Indexes\n      if (rowSelector.row === undefined) {\n        // Selector options in first parameter\n        opts = rowSelector;\n        rowSelector = null;\n      } else {\n        // Cell index objects in first parameter\n        opts = columnSelector;\n        columnSelector = null;\n      }\n    }\n\n    if ($.isPlainObject(columnSelector)) {\n      opts = columnSelector;\n      columnSelector = null;\n    } // Cell selector\n\n\n    if (columnSelector === null || columnSelector === undefined) {\n      return this.iterator('table', function (settings) {\n        return __cell_selector(settings, rowSelector, _selector_opts(opts));\n      });\n    } // The default built in options need to apply to row and columns\n\n\n    var internalOpts = opts ? {\n      page: opts.page,\n      order: opts.order,\n      search: opts.search\n    } : {}; // Row + column selector\n\n    var columns = this.columns(columnSelector, internalOpts);\n    var rows = this.rows(rowSelector, internalOpts);\n    var i, ien, j, jen;\n    var cellsNoOpts = this.iterator('table', function (settings, idx) {\n      var a = [];\n\n      for (i = 0, ien = rows[idx].length; i < ien; i++) {\n        for (j = 0, jen = columns[idx].length; j < jen; j++) {\n          a.push({\n            row: rows[idx][i],\n            column: columns[idx][j]\n          });\n        }\n      }\n\n      return a;\n    }, 1); // There is currently only one extension which uses a cell selector extension\n    // It is a _major_ performance drag to run this if it isn't needed, so this is\n    // an extension specific check at the moment\n\n    var cells = opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;\n    $.extend(cells.selector, {\n      cols: columnSelector,\n      rows: rowSelector,\n      opts: opts\n    });\n    return cells;\n  });\n\n  _api_registerPlural('cells().nodes()', 'cell().node()', function () {\n    return this.iterator('cell', function (settings, row, column) {\n      var data = settings.aoData[row];\n      return data && data.anCells ? data.anCells[column] : undefined;\n    }, 1);\n  });\n\n  _api_register('cells().data()', function () {\n    return this.iterator('cell', function (settings, row, column) {\n      return _fnGetCellData(settings, row, column);\n    }, 1);\n  });\n\n  _api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n    type = type === 'search' ? '_aFilterData' : '_aSortData';\n    return this.iterator('cell', function (settings, row, column) {\n      return settings.aoData[row][type][column];\n    }, 1);\n  });\n\n  _api_registerPlural('cells().render()', 'cell().render()', function (type) {\n    return this.iterator('cell', function (settings, row, column) {\n      return _fnGetCellData(settings, row, column, type);\n    }, 1);\n  });\n\n  _api_registerPlural('cells().indexes()', 'cell().index()', function () {\n    return this.iterator('cell', function (settings, row, column) {\n      return {\n        row: row,\n        column: column,\n        columnVisible: _fnColumnIndexToVisible(settings, column)\n      };\n    }, 1);\n  });\n\n  _api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n    return this.iterator('cell', function (settings, row, column) {\n      _fnInvalidate(settings, row, src, column);\n    });\n  });\n\n  _api_register('cell()', function (rowSelector, columnSelector, opts) {\n    return _selector_first(this.cells(rowSelector, columnSelector, opts));\n  });\n\n  _api_register('cell().data()', function (data) {\n    var ctx = this.context;\n    var cell = this[0];\n\n    if (data === undefined) {\n      // Get\n      return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined;\n    } // Set\n\n\n    _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n\n    _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n\n    return this;\n  });\n  /**\n   * Get current ordering (sorting) that has been applied to the table.\n   *\n   * @returns {array} 2D array containing the sorting information for the first\n   *   table in the current context. Each element in the parent array represents\n   *   a column being sorted upon (i.e. multi-sorting with two columns would have\n   *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n   *   the column index that the sorting condition applies to, the second is the\n   *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n   *   index of the sorting order from the `column.sorting` initialisation array.\n   */\n\n  /**\n  * Set the ordering for the table.\n  *\n  * @param {integer} order Column index to sort upon.\n  * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n  * @returns {DataTables.Api} this\n  */\n\n  /**\n  * Set the ordering for the table.\n  *\n  * @param {array} order 1D array of sorting information to be applied.\n  * @param {array} [...] Optional additional sorting conditions\n  * @returns {DataTables.Api} this\n  */\n\n  /**\n  * Set the ordering for the table.\n  *\n  * @param {array} order 2D array of sorting information to be applied.\n  * @returns {DataTables.Api} this\n  */\n\n\n  _api_register('order()', function (order, dir) {\n    var ctx = this.context;\n\n    if (order === undefined) {\n      // get\n      return ctx.length !== 0 ? ctx[0].aaSorting : undefined;\n    } // set\n\n\n    if (typeof order === 'number') {\n      // Simple column / direction passed in\n      order = [[order, dir]];\n    } else if (order.length && !Array.isArray(order[0])) {\n      // Arguments passed in (list of 1D arrays)\n      order = Array.prototype.slice.call(arguments);\n    } // otherwise a 2D array was passed in\n\n\n    return this.iterator('table', function (settings) {\n      settings.aaSorting = order.slice();\n    });\n  });\n  /**\n   * Attach a sort listener to an element for a given column\n   *\n   * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n   *   listener to. This can take the form of a single DOM node, a jQuery\n   *   collection of nodes or a jQuery selector which will identify the node(s).\n   * @param {integer} column the column that a click on this node will sort on\n   * @param {function} [callback] callback function when sort is run\n   * @returns {DataTables.Api} this\n   */\n\n\n  _api_register('order.listener()', function (node, column, callback) {\n    return this.iterator('table', function (settings) {\n      _fnSortAttachListener(settings, node, column, callback);\n    });\n  });\n\n  _api_register('order.fixed()', function (set) {\n    if (!set) {\n      var ctx = this.context;\n      var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;\n      return Array.isArray(fixed) ? {\n        pre: fixed\n      } : fixed;\n    }\n\n    return this.iterator('table', function (settings) {\n      settings.aaSortingFixed = $.extend(true, {}, set);\n    });\n  }); // Order by the selected column(s)\n\n\n  _api_register(['columns().order()', 'column().order()'], function (dir) {\n    var that = this;\n    return this.iterator('table', function (settings, i) {\n      var sort = [];\n      $.each(that[i], function (j, col) {\n        sort.push([col, dir]);\n      });\n      settings.aaSorting = sort;\n    });\n  });\n\n  _api_register('search()', function (input, regex, smart, caseInsen) {\n    var ctx = this.context;\n\n    if (input === undefined) {\n      // get\n      return ctx.length !== 0 ? ctx[0].oPreviousSearch.sSearch : undefined;\n    } // set\n\n\n    return this.iterator('table', function (settings) {\n      if (!settings.oFeatures.bFilter) {\n        return;\n      }\n\n      _fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {\n        \"sSearch\": input + \"\",\n        \"bRegex\": regex === null ? false : regex,\n        \"bSmart\": smart === null ? true : smart,\n        \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n      }), 1);\n    });\n  });\n\n  _api_registerPlural('columns().search()', 'column().search()', function (input, regex, smart, caseInsen) {\n    return this.iterator('column', function (settings, column) {\n      var preSearch = settings.aoPreSearchCols;\n\n      if (input === undefined) {\n        // get\n        return preSearch[column].sSearch;\n      } // set\n\n\n      if (!settings.oFeatures.bFilter) {\n        return;\n      }\n\n      $.extend(preSearch[column], {\n        \"sSearch\": input + \"\",\n        \"bRegex\": regex === null ? false : regex,\n        \"bSmart\": smart === null ? true : smart,\n        \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n      });\n\n      _fnFilterComplete(settings, settings.oPreviousSearch, 1);\n    });\n  });\n  /*\n   * State API methods\n   */\n\n\n  _api_register('state()', function () {\n    return this.context.length ? this.context[0].oSavedState : null;\n  });\n\n  _api_register('state.clear()', function () {\n    return this.iterator('table', function (settings) {\n      // Save an empty object\n      settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n    });\n  });\n\n  _api_register('state.loaded()', function () {\n    return this.context.length ? this.context[0].oLoadedState : null;\n  });\n\n  _api_register('state.save()', function () {\n    return this.iterator('table', function (settings) {\n      _fnSaveState(settings);\n    });\n  });\n  /**\n   * Provide a common method for plug-ins to check the version of DataTables being\n   * used, in order to ensure compatibility.\n   *\n   *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n   *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n   *  @returns {boolean} true if this version of DataTables is greater or equal to\n   *    the required version, or false if this version of DataTales is not\n   *    suitable\n   *  @static\n   *  @dtopt API-Static\n   *\n   *  @example\n   *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n   */\n\n\n  DataTable.versionCheck = DataTable.fnVersionCheck = function (version) {\n    var aThis = DataTable.version.split('.');\n    var aThat = version.split('.');\n    var iThis, iThat;\n\n    for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n      iThis = parseInt(aThis[i], 10) || 0;\n      iThat = parseInt(aThat[i], 10) || 0; // Parts are the same, keep comparing\n\n      if (iThis === iThat) {\n        continue;\n      } // Parts are different, return immediately\n\n\n      return iThis > iThat;\n    }\n\n    return true;\n  };\n  /**\n   * Check if a `<table>` node is a DataTable table already or not.\n   *\n   *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n   *      selector for the table to test. Note that if more than more than one\n   *      table is passed on, only the first will be checked\n   *  @returns {boolean} true the table given is a DataTable, or false otherwise\n   *  @static\n   *  @dtopt API-Static\n   *\n   *  @example\n   *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n   *      $('#example').dataTable();\n   *    }\n   */\n\n\n  DataTable.isDataTable = DataTable.fnIsDataTable = function (table) {\n    var t = $(table).get(0);\n    var is = false;\n\n    if (table instanceof DataTable.Api) {\n      return true;\n    }\n\n    $.each(DataTable.settings, function (i, o) {\n      var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n      var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n      if (o.nTable === t || head === t || foot === t) {\n        is = true;\n      }\n    });\n    return is;\n  };\n  /**\n   * Get all DataTable tables that have been initialised - optionally you can\n   * select to get only currently visible tables.\n   *\n   *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n   *    or visible tables only.\n   *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n   *    DataTables\n   *  @static\n   *  @dtopt API-Static\n   *\n   *  @example\n   *    $.each( $.fn.dataTable.tables(true), function () {\n   *      $(table).DataTable().columns.adjust();\n   *    } );\n   */\n\n\n  DataTable.tables = DataTable.fnTables = function (visible) {\n    var api = false;\n\n    if ($.isPlainObject(visible)) {\n      api = visible.api;\n      visible = visible.visible;\n    }\n\n    var a = $.map(DataTable.settings, function (o) {\n      if (!visible || visible && $(o.nTable).is(':visible')) {\n        return o.nTable;\n      }\n    });\n    return api ? new _Api2(a) : a;\n  };\n  /**\n   * Convert from camel case parameters to Hungarian notation. This is made public\n   * for the extensions to provide the same ability as DataTables core to accept\n   * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n   * parameters.\n   *\n   *  @param {object} src The model object which holds all parameters that can be\n   *    mapped.\n   *  @param {object} user The object to convert from camel case to Hungarian.\n   *  @param {boolean} force When set to `true`, properties which already have a\n   *    Hungarian value in the `user` object will be overwritten. Otherwise they\n   *    won't be.\n   */\n\n\n  DataTable.camelToHungarian = _fnCamelToHungarian;\n  /**\n   *\n   */\n\n  _api_register('$()', function (selector, opts) {\n    var rows = this.rows(opts).nodes(),\n        // Get all rows\n    jqRows = $(rows);\n    return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()));\n  }); // jQuery functions to operate on the tables\n\n\n  $.each(['on', 'one', 'off'], function (i, key) {\n    _api_register(key + '()', function\n      /* event, handler */\n    () {\n      var args = Array.prototype.slice.call(arguments); // Add the `dt` namespace automatically if it isn't already present\n\n      args[0] = $.map(args[0].split(/\\s/), function (e) {\n        return !e.match(/\\.dt\\b/) ? e + '.dt' : e;\n      }).join(' ');\n      var inst = $(this.tables().nodes());\n      inst[key].apply(inst, args);\n      return this;\n    });\n  });\n\n  _api_register('clear()', function () {\n    return this.iterator('table', function (settings) {\n      _fnClearTable(settings);\n    });\n  });\n\n  _api_register('settings()', function () {\n    return new _Api2(this.context, this.context);\n  });\n\n  _api_register('init()', function () {\n    var ctx = this.context;\n    return ctx.length ? ctx[0].oInit : null;\n  });\n\n  _api_register('data()', function () {\n    return this.iterator('table', function (settings) {\n      return _pluck(settings.aoData, '_aData');\n    }).flatten();\n  });\n\n  _api_register('destroy()', function (remove) {\n    remove = remove || false;\n    return this.iterator('table', function (settings) {\n      var orig = settings.nTableWrapper.parentNode;\n      var classes = settings.oClasses;\n      var table = settings.nTable;\n      var tbody = settings.nTBody;\n      var thead = settings.nTHead;\n      var tfoot = settings.nTFoot;\n      var jqTable = $(table);\n      var jqTbody = $(tbody);\n      var jqWrapper = $(settings.nTableWrapper);\n      var rows = $.map(settings.aoData, function (r) {\n        return r.nTr;\n      });\n      var i, ien; // Flag to note that the table is currently being destroyed - no action\n      // should be taken\n\n      settings.bDestroying = true; // Fire off the destroy callbacks for plug-ins etc\n\n      _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings]); // If not being removed from the document, make all columns visible\n\n\n      if (!remove) {\n        new _Api2(settings).columns().visible(true);\n      } // Blitz all `DT` namespaced events (these are internal events, the\n      // lowercase, `dt` events are user subscribed and they are responsible\n      // for removing them\n\n\n      jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n      $(window).off('.DT-' + settings.sInstance); // When scrolling we had to break the table up - restore it\n\n      if (table != thead.parentNode) {\n        jqTable.children('thead').detach();\n        jqTable.append(thead);\n      }\n\n      if (tfoot && table != tfoot.parentNode) {\n        jqTable.children('tfoot').detach();\n        jqTable.append(tfoot);\n      }\n\n      settings.aaSorting = [];\n      settings.aaSortingFixed = [];\n\n      _fnSortingClasses(settings);\n\n      $(rows).removeClass(settings.asStripeClasses.join(' '));\n      $('th, td', thead).removeClass(classes.sSortable + ' ' + classes.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone); // Add the TR elements back into the table in their original order\n\n      jqTbody.children().detach();\n      jqTbody.append(rows); // Remove the DataTables generated nodes, events and classes\n\n      var removedMethod = remove ? 'remove' : 'detach';\n      jqTable[removedMethod]();\n      jqWrapper[removedMethod](); // If we need to reattach the table to the document\n\n      if (!remove && orig) {\n        // insertBefore acts like appendChild if !arg[1]\n        orig.insertBefore(table, settings.nTableReinsertBefore); // Restore the width of the original table - was read from the style property,\n        // so we can restore directly to that\n\n        jqTable.css('width', settings.sDestroyWidth).removeClass(classes.sTable); // If the were originally stripe classes - then we add them back here.\n        // Note this is not fool proof (for example if not all rows had stripe\n        // classes - but it's a good effort without getting carried away\n\n        ien = settings.asDestroyStripes.length;\n\n        if (ien) {\n          jqTbody.children().each(function (i) {\n            $(this).addClass(settings.asDestroyStripes[i % ien]);\n          });\n        }\n      }\n      /* Remove the settings object from the settings array */\n\n\n      var idx = $.inArray(settings, DataTable.settings);\n\n      if (idx !== -1) {\n        DataTable.settings.splice(idx, 1);\n      }\n    });\n  }); // Add the `every()` method for rows, columns and cells in a compact form\n\n\n  $.each(['column', 'row', 'cell'], function (i, type) {\n    _api_register(type + 's().every()', function (fn) {\n      var opts = this.selector.opts;\n      var api = this;\n      return this.iterator(type, function (settings, arg1, arg2, arg3, arg4) {\n        // Rows and columns:\n        //  arg1 - index\n        //  arg2 - table counter\n        //  arg3 - loop counter\n        //  arg4 - undefined\n        // Cells:\n        //  arg1 - row index\n        //  arg2 - column index\n        //  arg3 - table counter\n        //  arg4 - loop counter\n        fn.call(api[type](arg1, type === 'cell' ? arg2 : opts, type === 'cell' ? opts : undefined), arg1, arg2, arg3, arg4);\n      });\n    });\n  }); // i18n method for extensions to be able to use the language object from the\n  // DataTable\n\n  _api_register('i18n()', function (token, def, plural) {\n    var ctx = this.context[0];\n\n    var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n\n    if (resolved === undefined) {\n      resolved = def;\n    }\n\n    if (plural !== undefined && $.isPlainObject(resolved)) {\n      resolved = resolved[plural] !== undefined ? resolved[plural] : resolved._;\n    }\n\n    return resolved.replace('%d', plural); // nb: plural might be undefined,\n  });\n  /**\n   * Version string for plug-ins to check compatibility. Allowed format is\n   * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n   * only for non-release builds. See http://semver.org/ for more information.\n   *  @member\n   *  @type string\n   *  @default Version number\n   */\n\n\n  DataTable.version = \"1.11.3\";\n  /**\n   * Private data store, containing all of the settings objects that are\n   * created for the tables on a given page.\n   *\n   * Note that the `DataTable.settings` object is aliased to\n   * `jQuery.fn.dataTableExt` through which it may be accessed and\n   * manipulated, or `jQuery.fn.dataTable.settings`.\n   *  @member\n   *  @type array\n   *  @default []\n   *  @private\n   */\n\n  DataTable.settings = [];\n  /**\n   * Object models container, for the various models that DataTables has\n   * available to it. These models define the objects that are used to hold\n   * the active state and configuration of the table.\n   *  @namespace\n   */\n\n  DataTable.models = {};\n  /**\n   * Template object for the way in which DataTables holds information about\n   * search information for the global filter and individual column filters.\n   *  @namespace\n   */\n\n  DataTable.models.oSearch = {\n    /**\n     * Flag to indicate if the filtering should be case insensitive or not\n     *  @type boolean\n     *  @default true\n     */\n    \"bCaseInsensitive\": true,\n\n    /**\n     * Applied search term\n     *  @type string\n     *  @default <i>Empty string</i>\n     */\n    \"sSearch\": \"\",\n\n    /**\n     * Flag to indicate if the search term should be interpreted as a\n     * regular expression (true) or not (false) and therefore and special\n     * regex characters escaped.\n     *  @type boolean\n     *  @default false\n     */\n    \"bRegex\": false,\n\n    /**\n     * Flag to indicate if DataTables is to use its smart filtering or not.\n     *  @type boolean\n     *  @default true\n     */\n    \"bSmart\": true,\n\n    /**\n     * Flag to indicate if DataTables should only trigger a search when\n     * the return key is pressed.\n     *  @type boolean\n     *  @default false\n     */\n    \"return\": false\n  };\n  /**\n   * Template object for the way in which DataTables holds information about\n   * each individual row. This is the object format used for the settings\n   * aoData array.\n   *  @namespace\n   */\n\n  DataTable.models.oRow = {\n    /**\n     * TR element for the row\n     *  @type node\n     *  @default null\n     */\n    \"nTr\": null,\n\n    /**\n     * Array of TD elements for each row. This is null until the row has been\n     * created.\n     *  @type array nodes\n     *  @default []\n     */\n    \"anCells\": null,\n\n    /**\n     * Data object from the original data source for the row. This is either\n     * an array if using the traditional form of DataTables, or an object if\n     * using mData options. The exact type will depend on the passed in\n     * data from the data source, or will be an array if using DOM a data\n     * source.\n     *  @type array|object\n     *  @default []\n     */\n    \"_aData\": [],\n\n    /**\n     * Sorting data cache - this array is ostensibly the same length as the\n     * number of columns (although each index is generated only as it is\n     * needed), and holds the data that is used for sorting each column in the\n     * row. We do this cache generation at the start of the sort in order that\n     * the formatting of the sort data need be done only once for each cell\n     * per sort. This array should not be read from or written to by anything\n     * other than the master sorting methods.\n     *  @type array\n     *  @default null\n     *  @private\n     */\n    \"_aSortData\": null,\n\n    /**\n     * Per cell filtering data cache. As per the sort data cache, used to\n     * increase the performance of the filtering in DataTables\n     *  @type array\n     *  @default null\n     *  @private\n     */\n    \"_aFilterData\": null,\n\n    /**\n     * Filtering data cache. This is the same as the cell filtering cache, but\n     * in this case a string rather than an array. This is easily computed with\n     * a join on `_aFilterData`, but is provided as a cache so the join isn't\n     * needed on every search (memory traded for performance)\n     *  @type array\n     *  @default null\n     *  @private\n     */\n    \"_sFilterRow\": null,\n\n    /**\n     * Cache of the class name that DataTables has applied to the row, so we\n     * can quickly look at this variable rather than needing to do a DOM check\n     * on className for the nTr property.\n     *  @type string\n     *  @default <i>Empty string</i>\n     *  @private\n     */\n    \"_sRowStripe\": \"\",\n\n    /**\n     * Denote if the original data source was from the DOM, or the data source\n     * object. This is used for invalidating data, so DataTables can\n     * automatically read data from the original source, unless uninstructed\n     * otherwise.\n     *  @type string\n     *  @default null\n     *  @private\n     */\n    \"src\": null,\n\n    /**\n     * Index in the aoData array. This saves an indexOf lookup when we have the\n     * object, but want to know the index\n     *  @type integer\n     *  @default -1\n     *  @private\n     */\n    \"idx\": -1\n  };\n  /**\n   * Template object for the column information object in DataTables. This object\n   * is held in the settings aoColumns array and contains all the information that\n   * DataTables needs about each individual column.\n   *\n   * Note that this object is related to {@link DataTable.defaults.column}\n   * but this one is the internal data store for DataTables's cache of columns.\n   * It should NOT be manipulated outside of DataTables. Any configuration should\n   * be done through the initialisation options.\n   *  @namespace\n   */\n\n  DataTable.models.oColumn = {\n    /**\n     * Column index. This could be worked out on-the-fly with $.inArray, but it\n     * is faster to just hold it as a variable\n     *  @type integer\n     *  @default null\n     */\n    \"idx\": null,\n\n    /**\n     * A list of the columns that sorting should occur on when this column\n     * is sorted. That this property is an array allows multi-column sorting\n     * to be defined for a column (for example first name / last name columns\n     * would benefit from this). The values are integers pointing to the\n     * columns to be sorted on (typically it will be a single integer pointing\n     * at itself, but that doesn't need to be the case).\n     *  @type array\n     */\n    \"aDataSort\": null,\n\n    /**\n     * Define the sorting directions that are applied to the column, in sequence\n     * as the column is repeatedly sorted upon - i.e. the first value is used\n     * as the sorting direction when the column if first sorted (clicked on).\n     * Sort it again (click again) and it will move on to the next index.\n     * Repeat until loop.\n     *  @type array\n     */\n    \"asSorting\": null,\n\n    /**\n     * Flag to indicate if the column is searchable, and thus should be included\n     * in the filtering or not.\n     *  @type boolean\n     */\n    \"bSearchable\": null,\n\n    /**\n     * Flag to indicate if the column is sortable or not.\n     *  @type boolean\n     */\n    \"bSortable\": null,\n\n    /**\n     * Flag to indicate if the column is currently visible in the table or not\n     *  @type boolean\n     */\n    \"bVisible\": null,\n\n    /**\n     * Store for manual type assignment using the `column.type` option. This\n     * is held in store so we can manipulate the column's `sType` property.\n     *  @type string\n     *  @default null\n     *  @private\n     */\n    \"_sManualType\": null,\n\n    /**\n     * Flag to indicate if HTML5 data attributes should be used as the data\n     * source for filtering or sorting. True is either are.\n     *  @type boolean\n     *  @default false\n     *  @private\n     */\n    \"_bAttrSrc\": false,\n\n    /**\n     * Developer definable function that is called whenever a cell is created (Ajax source,\n     * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n     * allowing you to modify the DOM element (add background colour for example) when the\n     * element is available.\n     *  @type function\n     *  @param {element} nTd The TD node that has been created\n     *  @param {*} sData The Data for the cell\n     *  @param {array|object} oData The data for the whole row\n     *  @param {int} iRow The row index for the aoData data store\n     *  @default null\n     */\n    \"fnCreatedCell\": null,\n\n    /**\n     * Function to get data from a cell in a column. You should <b>never</b>\n     * access data directly through _aData internally in DataTables - always use\n     * the method attached to this property. It allows mData to function as\n     * required. This function is automatically assigned by the column\n     * initialisation method\n     *  @type function\n     *  @param {array|object} oData The data array/object for the array\n     *    (i.e. aoData[]._aData)\n     *  @param {string} sSpecific The specific data type you want to get -\n     *    'display', 'type' 'filter' 'sort'\n     *  @returns {*} The data for the cell from the given row's data\n     *  @default null\n     */\n    \"fnGetData\": null,\n\n    /**\n     * Function to set data for a cell in the column. You should <b>never</b>\n     * set the data directly to _aData internally in DataTables - always use\n     * this method. It allows mData to function as required. This function\n     * is automatically assigned by the column initialisation method\n     *  @type function\n     *  @param {array|object} oData The data array/object for the array\n     *    (i.e. aoData[]._aData)\n     *  @param {*} sValue Value to set\n     *  @default null\n     */\n    \"fnSetData\": null,\n\n    /**\n     * Property to read the value for the cells in the column from the data\n     * source array / object. If null, then the default content is used, if a\n     * function is given then the return from the function is used.\n     *  @type function|int|string|null\n     *  @default null\n     */\n    \"mData\": null,\n\n    /**\n     * Partner property to mData which is used (only when defined) to get\n     * the data - i.e. it is basically the same as mData, but without the\n     * 'set' option, and also the data fed to it is the result from mData.\n     * This is the rendering method to match the data method of mData.\n     *  @type function|int|string|null\n     *  @default null\n     */\n    \"mRender\": null,\n\n    /**\n     * Unique header TH/TD element for this column - this is what the sorting\n     * listener is attached to (if sorting is enabled.)\n     *  @type node\n     *  @default null\n     */\n    \"nTh\": null,\n\n    /**\n     * Unique footer TH/TD element for this column (if there is one). Not used\n     * in DataTables as such, but can be used for plug-ins to reference the\n     * footer for each column.\n     *  @type node\n     *  @default null\n     */\n    \"nTf\": null,\n\n    /**\n     * The class to apply to all TD elements in the table's TBODY for the column\n     *  @type string\n     *  @default null\n     */\n    \"sClass\": null,\n\n    /**\n     * When DataTables calculates the column widths to assign to each column,\n     * it finds the longest string in each column and then constructs a\n     * temporary table and reads the widths from that. The problem with this\n     * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n     * string - thus the calculation can go wrong (doing it properly and putting\n     * it into an DOM object and measuring that is horribly(!) slow). Thus as\n     * a \"work around\" we provide this option. It will append its value to the\n     * text that is found to be the longest string for the column - i.e. padding.\n     *  @type string\n     */\n    \"sContentPadding\": null,\n\n    /**\n     * Allows a default value to be given for a column's data, and will be used\n     * whenever a null data source is encountered (this can be because mData\n     * is set to null, or because the data source itself is null).\n     *  @type string\n     *  @default null\n     */\n    \"sDefaultContent\": null,\n\n    /**\n     * Name for the column, allowing reference to the column by name as well as\n     * by index (needs a lookup to work by name).\n     *  @type string\n     */\n    \"sName\": null,\n\n    /**\n     * Custom sorting data type - defines which of the available plug-ins in\n     * afnSortData the custom sorting will use - if any is defined.\n     *  @type string\n     *  @default std\n     */\n    \"sSortDataType\": 'std',\n\n    /**\n     * Class to be applied to the header element when sorting on this column\n     *  @type string\n     *  @default null\n     */\n    \"sSortingClass\": null,\n\n    /**\n     * Class to be applied to the header element when sorting on this column -\n     * when jQuery UI theming is used.\n     *  @type string\n     *  @default null\n     */\n    \"sSortingClassJUI\": null,\n\n    /**\n     * Title of the column - what is seen in the TH element (nTh).\n     *  @type string\n     */\n    \"sTitle\": null,\n\n    /**\n     * Column sorting and filtering type\n     *  @type string\n     *  @default null\n     */\n    \"sType\": null,\n\n    /**\n     * Width of the column\n     *  @type string\n     *  @default null\n     */\n    \"sWidth\": null,\n\n    /**\n     * Width of the column when it was first \"encountered\"\n     *  @type string\n     *  @default null\n     */\n    \"sWidthOrig\": null\n  };\n  /*\n   * Developer note: The properties of the object below are given in Hungarian\n   * notation, that was used as the interface for DataTables prior to v1.10, however\n   * from v1.10 onwards the primary interface is camel case. In order to avoid\n   * breaking backwards compatibility utterly with this change, the Hungarian\n   * version is still, internally the primary interface, but is is not documented\n   * - hence the @name tags in each doc comment. This allows a Javascript function\n   * to create a map from Hungarian notation to camel case (going the other direction\n   * would require each property to be listed, which would add around 3K to the size\n   * of DataTables, while this method is about a 0.5K hit).\n   *\n   * Ultimately this does pave the way for Hungarian notation to be dropped\n   * completely, but that is a massive amount of work and will break current\n   * installs (therefore is on-hold until v2).\n   */\n\n  /**\n   * Initialisation options that can be given to DataTables at initialisation\n   * time.\n   *  @namespace\n   */\n\n  DataTable.defaults = {\n    /**\n     * An array of data to use for the table, passed in at initialisation which\n     * will be used in preference to any data which is already in the DOM. This is\n     * particularly useful for constructing tables purely in Javascript, for\n     * example with a custom Ajax call.\n     *  @type array\n     *  @default null\n     *\n     *  @dtopt Option\n     *  @name DataTable.defaults.data\n     *\n     *  @example\n     *    // Using a 2D array data source\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"data\": [\n     *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n     *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n     *        ],\n     *        \"columns\": [\n     *          { \"title\": \"Engine\" },\n     *          { \"title\": \"Browser\" },\n     *          { \"title\": \"Platform\" },\n     *          { \"title\": \"Version\" },\n     *          { \"title\": \"Grade\" }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using an array of objects as a data source (`data`)\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"data\": [\n     *          {\n     *            \"engine\":   \"Trident\",\n     *            \"browser\":  \"Internet Explorer 4.0\",\n     *            \"platform\": \"Win 95+\",\n     *            \"version\":  4,\n     *            \"grade\":    \"X\"\n     *          },\n     *          {\n     *            \"engine\":   \"Trident\",\n     *            \"browser\":  \"Internet Explorer 5.0\",\n     *            \"platform\": \"Win 95+\",\n     *            \"version\":  5,\n     *            \"grade\":    \"C\"\n     *          }\n     *        ],\n     *        \"columns\": [\n     *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n     *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n     *          { \"title\": \"Platform\", \"data\": \"platform\" },\n     *          { \"title\": \"Version\",  \"data\": \"version\" },\n     *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"aaData\": null,\n\n    /**\n     * If ordering is enabled, then DataTables will perform a first pass sort on\n     * initialisation. You can define which column(s) the sort is performed\n     * upon, and the sorting direction, with this variable. The `sorting` array\n     * should contain an array for each column to be sorted initially containing\n     * the column's index and a direction string ('asc' or 'desc').\n     *  @type array\n     *  @default [[0,'asc']]\n     *\n     *  @dtopt Option\n     *  @name DataTable.defaults.order\n     *\n     *  @example\n     *    // Sort by 3rd column first, and then 4th column\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"order\": [[2,'asc'], [3,'desc']]\n     *      } );\n     *    } );\n     *\n     *    // No initial sorting\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"order\": []\n     *      } );\n     *    } );\n     */\n    \"aaSorting\": [[0, 'asc']],\n\n    /**\n     * This parameter is basically identical to the `sorting` parameter, but\n     * cannot be overridden by user interaction with the table. What this means\n     * is that you could have a column (visible or hidden) which the sorting\n     * will always be forced on first - any sorting after that (from the user)\n     * will then be performed as required. This can be useful for grouping rows\n     * together.\n     *  @type array\n     *  @default null\n     *\n     *  @dtopt Option\n     *  @name DataTable.defaults.orderFixed\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"orderFixed\": [[0,'asc']]\n     *      } );\n     *    } )\n     */\n    \"aaSortingFixed\": [],\n\n    /**\n     * DataTables can be instructed to load data to display in the table from a\n     * Ajax source. This option defines how that Ajax call is made and where to.\n     *\n     * The `ajax` property has three different modes of operation, depending on\n     * how it is defined. These are:\n     *\n     * * `string` - Set the URL from where the data should be loaded from.\n     * * `object` - Define properties for `jQuery.ajax`.\n     * * `function` - Custom data get function\n     *\n     * `string`\n     * --------\n     *\n     * As a string, the `ajax` property simply defines the URL from which\n     * DataTables will load data.\n     *\n     * `object`\n     * --------\n     *\n     * As an object, the parameters in the object are passed to\n     * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n     * of the Ajax request. DataTables has a number of default parameters which\n     * you can override using this option. Please refer to the jQuery\n     * documentation for a full description of the options available, although\n     * the following parameters provide additional options in DataTables or\n     * require special consideration:\n     *\n     * * `data` - As with jQuery, `data` can be provided as an object, but it\n     *   can also be used as a function to manipulate the data DataTables sends\n     *   to the server. The function takes a single parameter, an object of\n     *   parameters with the values that DataTables has readied for sending. An\n     *   object may be returned which will be merged into the DataTables\n     *   defaults, or you can add the items to the object that was passed in and\n     *   not return anything from the function. This supersedes `fnServerParams`\n     *   from DataTables 1.9-.\n     *\n     * * `dataSrc` - By default DataTables will look for the property `data` (or\n     *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n     *   from an Ajax source or for server-side processing - this parameter\n     *   allows that property to be changed. You can use Javascript dotted\n     *   object notation to get a data source for multiple levels of nesting, or\n     *   it my be used as a function. As a function it takes a single parameter,\n     *   the JSON returned from the server, which can be manipulated as\n     *   required, with the returned value being that used by DataTables as the\n     *   data source for the table. This supersedes `sAjaxDataProp` from\n     *   DataTables 1.9-.\n     *\n     * * `success` - Should not be overridden it is used internally in\n     *   DataTables. To manipulate / transform the data returned by the server\n     *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n     *\n     * `function`\n     * ----------\n     *\n     * As a function, making the Ajax call is left up to yourself allowing\n     * complete control of the Ajax request. Indeed, if desired, a method other\n     * than Ajax could be used to obtain the required data, such as Web storage\n     * or an AIR database.\n     *\n     * The function is given four parameters and no return is required. The\n     * parameters are:\n     *\n     * 1. _object_ - Data to send to the server\n     * 2. _function_ - Callback function that must be executed when the required\n     *    data has been obtained. That data should be passed into the callback\n     *    as the only parameter\n     * 3. _object_ - DataTables settings object for the table\n     *\n     * Note that this supersedes `fnServerData` from DataTables 1.9-.\n     *\n     *  @type string|object|function\n     *  @default null\n     *\n     *  @dtopt Option\n     *  @name DataTable.defaults.ajax\n     *  @since 1.10.0\n     *\n     * @example\n     *   // Get JSON data from a file via Ajax.\n     *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n     *   $('#example').dataTable( {\n     *     \"ajax\": \"data.json\"\n     *   } );\n     *\n     * @example\n     *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n     *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n     *   $('#example').dataTable( {\n     *     \"ajax\": {\n     *       \"url\": \"data.json\",\n     *       \"dataSrc\": \"tableData\"\n     *     }\n     *   } );\n     *\n     * @example\n     *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n     *   // from a plain array rather than an array in an object\n     *   $('#example').dataTable( {\n     *     \"ajax\": {\n     *       \"url\": \"data.json\",\n     *       \"dataSrc\": \"\"\n     *     }\n     *   } );\n     *\n     * @example\n     *   // Manipulate the data returned from the server - add a link to data\n     *   // (note this can, should, be done using `render` for the column - this\n     *   // is just a simple example of how the data can be manipulated).\n     *   $('#example').dataTable( {\n     *     \"ajax\": {\n     *       \"url\": \"data.json\",\n     *       \"dataSrc\": function ( json ) {\n     *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n     *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n     *         }\n     *         return json;\n     *       }\n     *     }\n     *   } );\n     *\n     * @example\n     *   // Add data to the request\n     *   $('#example').dataTable( {\n     *     \"ajax\": {\n     *       \"url\": \"data.json\",\n     *       \"data\": function ( d ) {\n     *         return {\n     *           \"extra_search\": $('#extra').val()\n     *         };\n     *       }\n     *     }\n     *   } );\n     *\n     * @example\n     *   // Send request as POST\n     *   $('#example').dataTable( {\n     *     \"ajax\": {\n     *       \"url\": \"data.json\",\n     *       \"type\": \"POST\"\n     *     }\n     *   } );\n     *\n     * @example\n     *   // Get the data from localStorage (could interface with a form for\n     *   // adding, editing and removing rows).\n     *   $('#example').dataTable( {\n     *     \"ajax\": function (data, callback, settings) {\n     *       callback(\n     *         JSON.parse( localStorage.getItem('dataTablesData') )\n     *       );\n     *     }\n     *   } );\n     */\n    \"ajax\": null,\n\n    /**\n     * This parameter allows you to readily specify the entries in the length drop\n     * down menu that DataTables shows when pagination is enabled. It can be\n     * either a 1D array of options which will be used for both the displayed\n     * option and the value, or a 2D array which will use the array in the first\n     * position as the value, and the array in the second position as the\n     * displayed options (useful for language strings such as 'All').\n     *\n     * Note that the `pageLength` property will be automatically set to the\n     * first value given in this array, unless `pageLength` is also provided.\n     *  @type array\n     *  @default [ 10, 25, 50, 100 ]\n     *\n     *  @dtopt Option\n     *  @name DataTable.defaults.lengthMenu\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n     *      } );\n     *    } );\n     */\n    \"aLengthMenu\": [10, 25, 50, 100],\n\n    /**\n     * The `columns` option in the initialisation parameter allows you to define\n     * details about the way individual columns behave. For a full list of\n     * column options that can be set, please see\n     * {@link DataTable.defaults.column}. Note that if you use `columns` to\n     * define your columns, you must have an entry in the array for every single\n     * column that you have in your table (these can be null if you don't which\n     * to specify any options).\n     *  @member\n     *\n     *  @name DataTable.defaults.column\n     */\n    \"aoColumns\": null,\n\n    /**\n     * Very similar to `columns`, `columnDefs` allows you to target a specific\n     * column, multiple columns, or all columns, using the `targets` property of\n     * each object in the array. This allows great flexibility when creating\n     * tables, as the `columnDefs` arrays can be of any length, targeting the\n     * columns you specifically want. `columnDefs` may use any of the column\n     * options available: {@link DataTable.defaults.column}, but it _must_\n     * have `targets` defined in each object in the array. Values in the `targets`\n     * array may be:\n     *   <ul>\n     *     <li>a string - class name will be matched on the TH for the column</li>\n     *     <li>0 or a positive integer - column index counting from the left</li>\n     *     <li>a negative integer - column index counting from the right</li>\n     *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n     *   </ul>\n     *  @member\n     *\n     *  @name DataTable.defaults.columnDefs\n     */\n    \"aoColumnDefs\": null,\n\n    /**\n     * Basically the same as `search`, this parameter defines the individual column\n     * filtering state at initialisation time. The array must be of the same size\n     * as the number of columns, and each element be an object with the parameters\n     * `search` and `escapeRegex` (the latter is optional). 'null' is also\n     * accepted and the default will be used.\n     *  @type array\n     *  @default []\n     *\n     *  @dtopt Option\n     *  @name DataTable.defaults.searchCols\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"searchCols\": [\n     *          null,\n     *          { \"search\": \"My filter\" },\n     *          null,\n     *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n     *        ]\n     *      } );\n     *    } )\n     */\n    \"aoSearchCols\": [],\n\n    /**\n     * An array of CSS classes that should be applied to displayed rows. This\n     * array may be of any length, and DataTables will apply each class\n     * sequentially, looping when required.\n     *  @type array\n     *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n     *    options</i>\n     *\n     *  @dtopt Option\n     *  @name DataTable.defaults.stripeClasses\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n     *      } );\n     *    } )\n     */\n    \"asStripeClasses\": null,\n\n    /**\n     * Enable or disable automatic column width calculation. This can be disabled\n     * as an optimisation (it takes some time to calculate the widths) if the\n     * tables widths are passed in using `columns`.\n     *  @type boolean\n     *  @default true\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.autoWidth\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"autoWidth\": false\n     *      } );\n     *    } );\n     */\n    \"bAutoWidth\": true,\n\n    /**\n     * Deferred rendering can provide DataTables with a huge speed boost when you\n     * are using an Ajax or JS data source for the table. This option, when set to\n     * true, will cause DataTables to defer the creation of the table elements for\n     * each row until they are needed for a draw - saving a significant amount of\n     * time.\n     *  @type boolean\n     *  @default false\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.deferRender\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"ajax\": \"sources/arrays.txt\",\n     *        \"deferRender\": true\n     *      } );\n     *    } );\n     */\n    \"bDeferRender\": false,\n\n    /**\n     * Replace a DataTable which matches the given selector and replace it with\n     * one which has the properties of the new initialisation object passed. If no\n     * table matches the selector, then the new DataTable will be constructed as\n     * per normal.\n     *  @type boolean\n     *  @default false\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.destroy\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"srollY\": \"200px\",\n     *        \"paginate\": false\n     *      } );\n     *\n     *      // Some time later....\n     *      $('#example').dataTable( {\n     *        \"filter\": false,\n     *        \"destroy\": true\n     *      } );\n     *    } );\n     */\n    \"bDestroy\": false,\n\n    /**\n     * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n     * that it allows the end user to input multiple words (space separated) and\n     * will match a row containing those words, even if not in the order that was\n     * specified (this allow matching across multiple columns). Note that if you\n     * wish to use filtering in DataTables this must remain 'true' - to remove the\n     * default filtering input box and retain filtering abilities, please use\n     * {@link DataTable.defaults.dom}.\n     *  @type boolean\n     *  @default true\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.searching\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"searching\": false\n     *      } );\n     *    } );\n     */\n    \"bFilter\": true,\n\n    /**\n     * Enable or disable the table information display. This shows information\n     * about the data that is currently visible on the page, including information\n     * about filtered data if that action is being performed.\n     *  @type boolean\n     *  @default true\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.info\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"info\": false\n     *      } );\n     *    } );\n     */\n    \"bInfo\": true,\n\n    /**\n     * Allows the end user to select the size of a formatted page from a select\n     * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n     *  @type boolean\n     *  @default true\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.lengthChange\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"lengthChange\": false\n     *      } );\n     *    } );\n     */\n    \"bLengthChange\": true,\n\n    /**\n     * Enable or disable pagination.\n     *  @type boolean\n     *  @default true\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.paging\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"paging\": false\n     *      } );\n     *    } );\n     */\n    \"bPaginate\": true,\n\n    /**\n     * Enable or disable the display of a 'processing' indicator when the table is\n     * being processed (e.g. a sort). This is particularly useful for tables with\n     * large amounts of data where it can take a noticeable amount of time to sort\n     * the entries.\n     *  @type boolean\n     *  @default false\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.processing\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"processing\": true\n     *      } );\n     *    } );\n     */\n    \"bProcessing\": false,\n\n    /**\n     * Retrieve the DataTables object for the given selector. Note that if the\n     * table has already been initialised, this parameter will cause DataTables\n     * to simply return the object that has already been set up - it will not take\n     * account of any changes you might have made to the initialisation object\n     * passed to DataTables (setting this parameter to true is an acknowledgement\n     * that you understand this). `destroy` can be used to reinitialise a table if\n     * you need.\n     *  @type boolean\n     *  @default false\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.retrieve\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      initTable();\n     *      tableActions();\n     *    } );\n     *\n     *    function initTable ()\n     *    {\n     *      return $('#example').dataTable( {\n     *        \"scrollY\": \"200px\",\n     *        \"paginate\": false,\n     *        \"retrieve\": true\n     *      } );\n     *    }\n     *\n     *    function tableActions ()\n     *    {\n     *      var table = initTable();\n     *      // perform API operations with oTable\n     *    }\n     */\n    \"bRetrieve\": false,\n\n    /**\n     * When vertical (y) scrolling is enabled, DataTables will force the height of\n     * the table's viewport to the given height at all times (useful for layout).\n     * However, this can look odd when filtering data down to a small data set,\n     * and the footer is left \"floating\" further down. This parameter (when\n     * enabled) will cause DataTables to collapse the table's viewport down when\n     * the result set will fit within the given Y height.\n     *  @type boolean\n     *  @default false\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.scrollCollapse\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"scrollY\": \"200\",\n     *        \"scrollCollapse\": true\n     *      } );\n     *    } );\n     */\n    \"bScrollCollapse\": false,\n\n    /**\n     * Configure DataTables to use server-side processing. Note that the\n     * `ajax` parameter must also be given in order to give DataTables a\n     * source to obtain the required data for each draw.\n     *  @type boolean\n     *  @default false\n     *\n     *  @dtopt Features\n     *  @dtopt Server-side\n     *  @name DataTable.defaults.serverSide\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"serverSide\": true,\n     *        \"ajax\": \"xhr.php\"\n     *      } );\n     *    } );\n     */\n    \"bServerSide\": false,\n\n    /**\n     * Enable or disable sorting of columns. Sorting of individual columns can be\n     * disabled by the `sortable` option for each column.\n     *  @type boolean\n     *  @default true\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.ordering\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"ordering\": false\n     *      } );\n     *    } );\n     */\n    \"bSort\": true,\n\n    /**\n     * Enable or display DataTables' ability to sort multiple columns at the\n     * same time (activated by shift-click by the user).\n     *  @type boolean\n     *  @default true\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.orderMulti\n     *\n     *  @example\n     *    // Disable multiple column sorting ability\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"orderMulti\": false\n     *      } );\n     *    } );\n     */\n    \"bSortMulti\": true,\n\n    /**\n     * Allows control over whether DataTables should use the top (true) unique\n     * cell that is found for a single column, or the bottom (false - default).\n     * This is useful when using complex headers.\n     *  @type boolean\n     *  @default false\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.orderCellsTop\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"orderCellsTop\": true\n     *      } );\n     *    } );\n     */\n    \"bSortCellsTop\": false,\n\n    /**\n     * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n     * `sorting\\_3` to the columns which are currently being sorted on. This is\n     * presented as a feature switch as it can increase processing time (while\n     * classes are removed and added) so for large data sets you might want to\n     * turn this off.\n     *  @type boolean\n     *  @default true\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.orderClasses\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"orderClasses\": false\n     *      } );\n     *    } );\n     */\n    \"bSortClasses\": true,\n\n    /**\n     * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n     * used to save table display information such as pagination information,\n     * display length, filtering and sorting. As such when the end user reloads\n     * the page the display display will match what thy had previously set up.\n     *\n     * Due to the use of `localStorage` the default state saving is not supported\n     * in IE6 or 7. If state saving is required in those browsers, use\n     * `stateSaveCallback` to provide a storage solution such as cookies.\n     *  @type boolean\n     *  @default false\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.stateSave\n     *\n     *  @example\n     *    $(document).ready( function () {\n     *      $('#example').dataTable( {\n     *        \"stateSave\": true\n     *      } );\n     *    } );\n     */\n    \"bStateSave\": false,\n\n    /**\n     * This function is called when a TR element is created (and all TD child\n     * elements have been inserted), or registered if using a DOM source, allowing\n     * manipulation of the TR element (adding classes etc).\n     *  @type function\n     *  @param {node} row \"TR\" element for the current row\n     *  @param {array} data Raw data array for this row\n     *  @param {int} dataIndex The index of this row in the internal aoData array\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.createdRow\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"createdRow\": function( row, data, dataIndex ) {\n     *          // Bold the grade for all 'A' grade browsers\n     *          if ( data[4] == \"A\" )\n     *          {\n     *            $('td:eq(4)', row).html( '<b>A</b>' );\n     *          }\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnCreatedRow\": null,\n\n    /**\n     * This function is called on every 'draw' event, and allows you to\n     * dynamically modify any aspect you want about the created DOM.\n     *  @type function\n     *  @param {object} settings DataTables settings object\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.drawCallback\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"drawCallback\": function( settings ) {\n     *          alert( 'DataTables has redrawn the table' );\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnDrawCallback\": null,\n\n    /**\n     * Identical to fnHeaderCallback() but for the table footer this function\n     * allows you to modify the table footer on every 'draw' event.\n     *  @type function\n     *  @param {node} foot \"TR\" element for the footer\n     *  @param {array} data Full table data (as derived from the original HTML)\n     *  @param {int} start Index for the current display starting point in the\n     *    display array\n     *  @param {int} end Index for the current display ending point in the\n     *    display array\n     *  @param {array int} display Index array to translate the visual position\n     *    to the full data array\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.footerCallback\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n     *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n     *        }\n     *      } );\n     *    } )\n     */\n    \"fnFooterCallback\": null,\n\n    /**\n     * When rendering large numbers in the information element for the table\n     * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n     * to have a comma separator for the 'thousands' units (e.g. 1 million is\n     * rendered as \"1,000,000\") to help readability for the end user. This\n     * function will override the default method DataTables uses.\n     *  @type function\n     *  @member\n     *  @param {int} toFormat number to be formatted\n     *  @returns {string} formatted string for DataTables to show the number\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.formatNumber\n     *\n     *  @example\n     *    // Format a number using a single quote for the separator (note that\n     *    // this can also be done with the language.thousands option)\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"formatNumber\": function ( toFormat ) {\n     *          return toFormat.toString().replace(\n     *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n     *          );\n     *        };\n     *      } );\n     *    } );\n     */\n    \"fnFormatNumber\": function fnFormatNumber(toFormat) {\n      return toFormat.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands);\n    },\n\n    /**\n     * This function is called on every 'draw' event, and allows you to\n     * dynamically modify the header row. This can be used to calculate and\n     * display useful information about the table.\n     *  @type function\n     *  @param {node} head \"TR\" element for the header\n     *  @param {array} data Full table data (as derived from the original HTML)\n     *  @param {int} start Index for the current display starting point in the\n     *    display array\n     *  @param {int} end Index for the current display ending point in the\n     *    display array\n     *  @param {array int} display Index array to translate the visual position\n     *    to the full data array\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.headerCallback\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"fheaderCallback\": function( head, data, start, end, display ) {\n     *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n     *        }\n     *      } );\n     *    } )\n     */\n    \"fnHeaderCallback\": null,\n\n    /**\n     * The information element can be used to convey information about the current\n     * state of the table. Although the internationalisation options presented by\n     * DataTables are quite capable of dealing with most customisations, there may\n     * be times where you wish to customise the string further. This callback\n     * allows you to do exactly that.\n     *  @type function\n     *  @param {object} oSettings DataTables settings object\n     *  @param {int} start Starting position in data for the draw\n     *  @param {int} end End position in data for the draw\n     *  @param {int} max Total number of rows in the table (regardless of\n     *    filtering)\n     *  @param {int} total Total number of rows in the data set, after filtering\n     *  @param {string} pre The string that DataTables has formatted using it's\n     *    own rules\n     *  @returns {string} The string to be displayed in the information element.\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.infoCallback\n     *\n     *  @example\n     *    $('#example').dataTable( {\n     *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n     *        return start +\" to \"+ end;\n     *      }\n     *    } );\n     */\n    \"fnInfoCallback\": null,\n\n    /**\n     * Called when the table has been initialised. Normally DataTables will\n     * initialise sequentially and there will be no need for this function,\n     * however, this does not hold true when using external language information\n     * since that is obtained using an async XHR call.\n     *  @type function\n     *  @param {object} settings DataTables settings object\n     *  @param {object} json The JSON object request from the server - only\n     *    present if client-side Ajax sourced data is used\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.initComplete\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"initComplete\": function(settings, json) {\n     *          alert( 'DataTables has finished its initialisation.' );\n     *        }\n     *      } );\n     *    } )\n     */\n    \"fnInitComplete\": null,\n\n    /**\n     * Called at the very start of each table draw and can be used to cancel the\n     * draw by returning false, any other return (including undefined) results in\n     * the full draw occurring).\n     *  @type function\n     *  @param {object} settings DataTables settings object\n     *  @returns {boolean} False will cancel the draw, anything else (including no\n     *    return) will allow it to complete.\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.preDrawCallback\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"preDrawCallback\": function( settings ) {\n     *          if ( $('#test').val() == 1 ) {\n     *            return false;\n     *          }\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnPreDrawCallback\": null,\n\n    /**\n     * This function allows you to 'post process' each row after it have been\n     * generated for each table draw, but before it is rendered on screen. This\n     * function might be used for setting the row class name etc.\n     *  @type function\n     *  @param {node} row \"TR\" element for the current row\n     *  @param {array} data Raw data array for this row\n     *  @param {int} displayIndex The display index for the current table draw\n     *  @param {int} displayIndexFull The index of the data in the full list of\n     *    rows (after filtering)\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.rowCallback\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n     *          // Bold the grade for all 'A' grade browsers\n     *          if ( data[4] == \"A\" ) {\n     *            $('td:eq(4)', row).html( '<b>A</b>' );\n     *          }\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnRowCallback\": null,\n\n    /**\n     * __Deprecated__ The functionality provided by this parameter has now been\n     * superseded by that provided through `ajax`, which should be used instead.\n     *\n     * This parameter allows you to override the default function which obtains\n     * the data from the server so something more suitable for your application.\n     * For example you could use POST data, or pull information from a Gears or\n     * AIR database.\n     *  @type function\n     *  @member\n     *  @param {string} source HTTP source to obtain the data from (`ajax`)\n     *  @param {array} data A key/value pair object containing the data to send\n     *    to the server\n     *  @param {function} callback to be called on completion of the data get\n     *    process that will draw the data on the page.\n     *  @param {object} settings DataTables settings object\n     *\n     *  @dtopt Callbacks\n     *  @dtopt Server-side\n     *  @name DataTable.defaults.serverData\n     *\n     *  @deprecated 1.10. Please use `ajax` for this functionality now.\n     */\n    \"fnServerData\": null,\n\n    /**\n     * __Deprecated__ The functionality provided by this parameter has now been\n     * superseded by that provided through `ajax`, which should be used instead.\n     *\n     *  It is often useful to send extra data to the server when making an Ajax\n     * request - for example custom filtering information, and this callback\n     * function makes it trivial to send extra information to the server. The\n     * passed in parameter is the data set that has been constructed by\n     * DataTables, and you can add to this or modify it as you require.\n     *  @type function\n     *  @param {array} data Data array (array of objects which are name/value\n     *    pairs) that has been constructed by DataTables and will be sent to the\n     *    server. In the case of Ajax sourced data with server-side processing\n     *    this will be an empty array, for server-side processing there will be a\n     *    significant number of parameters!\n     *  @returns {undefined} Ensure that you modify the data array passed in,\n     *    as this is passed by reference.\n     *\n     *  @dtopt Callbacks\n     *  @dtopt Server-side\n     *  @name DataTable.defaults.serverParams\n     *\n     *  @deprecated 1.10. Please use `ajax` for this functionality now.\n     */\n    \"fnServerParams\": null,\n\n    /**\n     * Load the table state. With this function you can define from where, and how, the\n     * state of a table is loaded. By default DataTables will load from `localStorage`\n     * but you might wish to use a server-side database or cookies.\n     *  @type function\n     *  @member\n     *  @param {object} settings DataTables settings object\n     *  @param {object} callback Callback that can be executed when done. It\n     *    should be passed the loaded state object.\n     *  @return {object} The DataTables state object to be loaded\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.stateLoadCallback\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"stateSave\": true,\n     *        \"stateLoadCallback\": function (settings, callback) {\n     *          $.ajax( {\n     *            \"url\": \"/state_load\",\n     *            \"dataType\": \"json\",\n     *            \"success\": function (json) {\n     *              callback( json );\n     *            }\n     *          } );\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnStateLoadCallback\": function fnStateLoadCallback(settings) {\n      try {\n        return JSON.parse((settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem('DataTables_' + settings.sInstance + '_' + location.pathname));\n      } catch (e) {\n        return {};\n      }\n    },\n\n    /**\n     * Callback which allows modification of the saved state prior to loading that state.\n     * This callback is called when the table is loading state from the stored data, but\n     * prior to the settings object being modified by the saved state. Note that for\n     * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n     * a plug-in.\n     *  @type function\n     *  @param {object} settings DataTables settings object\n     *  @param {object} data The state object that is to be loaded\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.stateLoadParams\n     *\n     *  @example\n     *    // Remove a saved filter, so filtering is never loaded\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"stateSave\": true,\n     *        \"stateLoadParams\": function (settings, data) {\n     *          data.oSearch.sSearch = \"\";\n     *        }\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Disallow state loading by returning false\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"stateSave\": true,\n     *        \"stateLoadParams\": function (settings, data) {\n     *          return false;\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnStateLoadParams\": null,\n\n    /**\n     * Callback that is called when the state has been loaded from the state saving method\n     * and the DataTables settings object has been modified as a result of the loaded state.\n     *  @type function\n     *  @param {object} settings DataTables settings object\n     *  @param {object} data The state object that was loaded\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.stateLoaded\n     *\n     *  @example\n     *    // Show an alert with the filtering value that was saved\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"stateSave\": true,\n     *        \"stateLoaded\": function (settings, data) {\n     *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnStateLoaded\": null,\n\n    /**\n     * Save the table state. This function allows you to define where and how the state\n     * information for the table is stored By default DataTables will use `localStorage`\n     * but you might wish to use a server-side database or cookies.\n     *  @type function\n     *  @member\n     *  @param {object} settings DataTables settings object\n     *  @param {object} data The state object to be saved\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.stateSaveCallback\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"stateSave\": true,\n     *        \"stateSaveCallback\": function (settings, data) {\n     *          // Send an Ajax request to the server with the state object\n     *          $.ajax( {\n     *            \"url\": \"/state_save\",\n     *            \"data\": data,\n     *            \"dataType\": \"json\",\n     *            \"method\": \"POST\"\n     *            \"success\": function () {}\n     *          } );\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnStateSaveCallback\": function fnStateSaveCallback(settings, data) {\n      try {\n        (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem('DataTables_' + settings.sInstance + '_' + location.pathname, JSON.stringify(data));\n      } catch (e) {}\n    },\n\n    /**\n     * Callback which allows modification of the state to be saved. Called when the table\n     * has changed state a new state save is required. This method allows modification of\n     * the state saving object prior to actually doing the save, including addition or\n     * other state properties or modification. Note that for plug-in authors, you should\n     * use the `stateSaveParams` event to save parameters for a plug-in.\n     *  @type function\n     *  @param {object} settings DataTables settings object\n     *  @param {object} data The state object to be saved\n     *\n     *  @dtopt Callbacks\n     *  @name DataTable.defaults.stateSaveParams\n     *\n     *  @example\n     *    // Remove a saved filter, so filtering is never saved\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"stateSave\": true,\n     *        \"stateSaveParams\": function (settings, data) {\n     *          data.oSearch.sSearch = \"\";\n     *        }\n     *      } );\n     *    } );\n     */\n    \"fnStateSaveParams\": null,\n\n    /**\n     * Duration for which the saved state information is considered valid. After this period\n     * has elapsed the state will be returned to the default.\n     * Value is given in seconds.\n     *  @type int\n     *  @default 7200 <i>(2 hours)</i>\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.stateDuration\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"stateDuration\": 60*60*24; // 1 day\n     *      } );\n     *    } )\n     */\n    \"iStateDuration\": 7200,\n\n    /**\n     * When enabled DataTables will not make a request to the server for the first\n     * page draw - rather it will use the data already on the page (no sorting etc\n     * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n     * is used to indicate that deferred loading is required, but it is also used\n     * to tell DataTables how many records there are in the full table (allowing\n     * the information element and pagination to be displayed correctly). In the case\n     * where a filtering is applied to the table on initial load, this can be\n     * indicated by giving the parameter as an array, where the first element is\n     * the number of records available after filtering and the second element is the\n     * number of records without filtering (allowing the table information element\n     * to be shown correctly).\n     *  @type int | array\n     *  @default null\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.deferLoading\n     *\n     *  @example\n     *    // 57 records available in the table, no filtering applied\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"serverSide\": true,\n     *        \"ajax\": \"scripts/server_processing.php\",\n     *        \"deferLoading\": 57\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"serverSide\": true,\n     *        \"ajax\": \"scripts/server_processing.php\",\n     *        \"deferLoading\": [ 57, 100 ],\n     *        \"search\": {\n     *          \"search\": \"my_filter\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"iDeferLoading\": null,\n\n    /**\n     * Number of rows to display on a single page when using pagination. If\n     * feature enabled (`lengthChange`) then the end user will be able to override\n     * this to a custom setting using a pop-up menu.\n     *  @type int\n     *  @default 10\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.pageLength\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"pageLength\": 50\n     *      } );\n     *    } )\n     */\n    \"iDisplayLength\": 10,\n\n    /**\n     * Define the starting point for data display when using DataTables with\n     * pagination. Note that this parameter is the number of records, rather than\n     * the page number, so if you have 10 records per page and want to start on\n     * the third page, it should be \"20\".\n     *  @type int\n     *  @default 0\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.displayStart\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"displayStart\": 20\n     *      } );\n     *    } )\n     */\n    \"iDisplayStart\": 0,\n\n    /**\n     * By default DataTables allows keyboard navigation of the table (sorting, paging,\n     * and filtering) by adding a `tabindex` attribute to the required elements. This\n     * allows you to tab through the controls and press the enter key to activate them.\n     * The tabindex is default 0, meaning that the tab follows the flow of the document.\n     * You can overrule this using this parameter if you wish. Use a value of -1 to\n     * disable built-in keyboard navigation.\n     *  @type int\n     *  @default 0\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.tabIndex\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"tabIndex\": 1\n     *      } );\n     *    } );\n     */\n    \"iTabIndex\": 0,\n\n    /**\n     * Classes that DataTables assigns to the various components and features\n     * that it adds to the HTML table. This allows classes to be configured\n     * during initialisation in addition to through the static\n     * {@link DataTable.ext.oStdClasses} object).\n     *  @namespace\n     *  @name DataTable.defaults.classes\n     */\n    \"oClasses\": {},\n\n    /**\n     * All strings that DataTables uses in the user interface that it creates\n     * are defined in this object, allowing you to modified them individually or\n     * completely replace them all as required.\n     *  @namespace\n     *  @name DataTable.defaults.language\n     */\n    \"oLanguage\": {\n      /**\n       * Strings that are used for WAI-ARIA labels and controls only (these are not\n       * actually visible on the page, but will be read by screenreaders, and thus\n       * must be internationalised as well).\n       *  @namespace\n       *  @name DataTable.defaults.language.aria\n       */\n      \"oAria\": {\n        /**\n         * ARIA label that is added to the table headers when the column may be\n         * sorted ascending by activing the column (click or return when focused).\n         * Note that the column header is prefixed to this string.\n         *  @type string\n         *  @default : activate to sort column ascending\n         *\n         *  @dtopt Language\n         *  @name DataTable.defaults.language.aria.sortAscending\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"language\": {\n         *          \"aria\": {\n         *            \"sortAscending\": \" - click/return to sort ascending\"\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"sSortAscending\": \": activate to sort column ascending\",\n\n        /**\n         * ARIA label that is added to the table headers when the column may be\n         * sorted descending by activing the column (click or return when focused).\n         * Note that the column header is prefixed to this string.\n         *  @type string\n         *  @default : activate to sort column ascending\n         *\n         *  @dtopt Language\n         *  @name DataTable.defaults.language.aria.sortDescending\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"language\": {\n         *          \"aria\": {\n         *            \"sortDescending\": \" - click/return to sort descending\"\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"sSortDescending\": \": activate to sort column descending\"\n      },\n\n      /**\n       * Pagination string used by DataTables for the built-in pagination\n       * control types.\n       *  @namespace\n       *  @name DataTable.defaults.language.paginate\n       */\n      \"oPaginate\": {\n        /**\n         * Text to use when using the 'full_numbers' type of pagination for the\n         * button to take the user to the first page.\n         *  @type string\n         *  @default First\n         *\n         *  @dtopt Language\n         *  @name DataTable.defaults.language.paginate.first\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"language\": {\n         *          \"paginate\": {\n         *            \"first\": \"First page\"\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"sFirst\": \"First\",\n\n        /**\n         * Text to use when using the 'full_numbers' type of pagination for the\n         * button to take the user to the last page.\n         *  @type string\n         *  @default Last\n         *\n         *  @dtopt Language\n         *  @name DataTable.defaults.language.paginate.last\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"language\": {\n         *          \"paginate\": {\n         *            \"last\": \"Last page\"\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"sLast\": \"Last\",\n\n        /**\n         * Text to use for the 'next' pagination button (to take the user to the\n         * next page).\n         *  @type string\n         *  @default Next\n         *\n         *  @dtopt Language\n         *  @name DataTable.defaults.language.paginate.next\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"language\": {\n         *          \"paginate\": {\n         *            \"next\": \"Next page\"\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"sNext\": \"Next\",\n\n        /**\n         * Text to use for the 'previous' pagination button (to take the user to\n         * the previous page).\n         *  @type string\n         *  @default Previous\n         *\n         *  @dtopt Language\n         *  @name DataTable.defaults.language.paginate.previous\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"language\": {\n         *          \"paginate\": {\n         *            \"previous\": \"Previous page\"\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"sPrevious\": \"Previous\"\n      },\n\n      /**\n       * This string is shown in preference to `zeroRecords` when the table is\n       * empty of data (regardless of filtering). Note that this is an optional\n       * parameter - if it is not given, the value of `zeroRecords` will be used\n       * instead (either the default or given value).\n       *  @type string\n       *  @default No data available in table\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.emptyTable\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"emptyTable\": \"No data available in table\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sEmptyTable\": \"No data available in table\",\n\n      /**\n       * This string gives information to the end user about the information\n       * that is current on display on the page. The following tokens can be\n       * used in the string and will be dynamically replaced as the table\n       * display updates. This tokens can be placed anywhere in the string, or\n       * removed as needed by the language requires:\n       *\n       * * `\\_START\\_` - Display index of the first record on the current page\n       * * `\\_END\\_` - Display index of the last record on the current page\n       * * `\\_TOTAL\\_` - Number of records in the table after filtering\n       * * `\\_MAX\\_` - Number of records in the table without filtering\n       * * `\\_PAGE\\_` - Current page number\n       * * `\\_PAGES\\_` - Total number of pages of data in the table\n       *\n       *  @type string\n       *  @default Showing _START_ to _END_ of _TOTAL_ entries\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.info\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n      /**\n       * Display information string for when the table is empty. Typically the\n       * format of this string should match `info`.\n       *  @type string\n       *  @default Showing 0 to 0 of 0 entries\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.infoEmpty\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"infoEmpty\": \"No entries to show\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n      /**\n       * When a user filters the information in a table, this string is appended\n       * to the information (`info`) to give an idea of how strong the filtering\n       * is. The variable _MAX_ is dynamically updated.\n       *  @type string\n       *  @default (filtered from _MAX_ total entries)\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.infoFiltered\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n      /**\n       * If can be useful to append extra information to the info string at times,\n       * and this variable does exactly that. This information will be appended to\n       * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n       * being used) at all times.\n       *  @type string\n       *  @default <i>Empty string</i>\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.infoPostFix\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"infoPostFix\": \"All records shown are derived from real information.\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sInfoPostFix\": \"\",\n\n      /**\n       * This decimal place operator is a little different from the other\n       * language options since DataTables doesn't output floating point\n       * numbers, so it won't ever use this for display of a number. Rather,\n       * what this parameter does is modify the sort methods of the table so\n       * that numbers which are in a format which has a character other than\n       * a period (`.`) as a decimal place will be sorted numerically.\n       *\n       * Note that numbers with different decimal places cannot be shown in\n       * the same table and still be sortable, the table must be consistent.\n       * However, multiple different tables on the page can use different\n       * decimal place characters.\n       *  @type string\n       *  @default \n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.decimal\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"decimal\": \",\"\n       *          \"thousands\": \".\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sDecimal\": \"\",\n\n      /**\n       * DataTables has a build in number formatter (`formatNumber`) which is\n       * used to format large numbers that are used in the table information.\n       * By default a comma is used, but this can be trivially changed to any\n       * character you wish with this parameter.\n       *  @type string\n       *  @default ,\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.thousands\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"thousands\": \"'\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sThousands\": \",\",\n\n      /**\n       * Detail the action that will be taken when the drop down menu for the\n       * pagination length option is changed. The '_MENU_' variable is replaced\n       * with a default select list of 10, 25, 50 and 100, and can be replaced\n       * with a custom select box if required.\n       *  @type string\n       *  @default Show _MENU_ entries\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.lengthMenu\n       *\n       *  @example\n       *    // Language change only\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"lengthMenu\": \"Display _MENU_ records\"\n       *        }\n       *      } );\n       *    } );\n       *\n       *  @example\n       *    // Language and options change\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"lengthMenu\": 'Display <select>'+\n       *            '<option value=\"10\">10</option>'+\n       *            '<option value=\"20\">20</option>'+\n       *            '<option value=\"30\">30</option>'+\n       *            '<option value=\"40\">40</option>'+\n       *            '<option value=\"50\">50</option>'+\n       *            '<option value=\"-1\">All</option>'+\n       *            '</select> records'\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sLengthMenu\": \"Show _MENU_ entries\",\n\n      /**\n       * When using Ajax sourced data and during the first draw when DataTables is\n       * gathering the data, this message is shown in an empty row in the table to\n       * indicate to the end user the the data is being loaded. Note that this\n       * parameter is not used when loading data by server-side processing, just\n       * Ajax sourced data with client-side processing.\n       *  @type string\n       *  @default Loading...\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.loadingRecords\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"loadingRecords\": \"Please wait - loading...\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sLoadingRecords\": \"Loading...\",\n\n      /**\n       * Text which is displayed when the table is processing a user action\n       * (usually a sort command or similar).\n       *  @type string\n       *  @default Processing...\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.processing\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"processing\": \"DataTables is currently busy\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sProcessing\": \"Processing...\",\n\n      /**\n       * Details the actions that will be taken when the user types into the\n       * filtering input text box. The variable \"_INPUT_\", if used in the string,\n       * is replaced with the HTML text box for the filtering input allowing\n       * control over where it appears in the string. If \"_INPUT_\" is not given\n       * then the input box is appended to the string automatically.\n       *  @type string\n       *  @default Search:\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.search\n       *\n       *  @example\n       *    // Input text box will be appended at the end automatically\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"search\": \"Filter records:\"\n       *        }\n       *      } );\n       *    } );\n       *\n       *  @example\n       *    // Specify where the filter should appear\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"search\": \"Apply filter _INPUT_ to table\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sSearch\": \"Search:\",\n\n      /**\n       * Assign a `placeholder` attribute to the search `input` element\n       *  @type string\n       *  @default \n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.searchPlaceholder\n       */\n      \"sSearchPlaceholder\": \"\",\n\n      /**\n       * All of the language information can be stored in a file on the\n       * server-side, which DataTables will look up if this parameter is passed.\n       * It must store the URL of the language file, which is in a JSON format,\n       * and the object has the same properties as the oLanguage object in the\n       * initialiser object (i.e. the above parameters). Please refer to one of\n       * the example language files to see how this works in action.\n       *  @type string\n       *  @default <i>Empty string - i.e. disabled</i>\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.url\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sUrl\": \"\",\n\n      /**\n       * Text shown inside the table records when the is no information to be\n       * displayed after filtering. `emptyTable` is shown when there is simply no\n       * information in the table at all (regardless of filtering).\n       *  @type string\n       *  @default No matching records found\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.zeroRecords\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"zeroRecords\": \"No records to display\"\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sZeroRecords\": \"No matching records found\"\n    },\n\n    /**\n     * This parameter allows you to have define the global filtering state at\n     * initialisation time. As an object the `search` parameter must be\n     * defined, but all other parameters are optional. When `regex` is true,\n     * the search string will be treated as a regular expression, when false\n     * (default) it will be treated as a straight string. When `smart`\n     * DataTables will use it's smart filtering methods (to word match at\n     * any point in the data), when false this will not be done.\n     *  @namespace\n     *  @extends DataTable.models.oSearch\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.search\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"search\": {\"search\": \"Initial search\"}\n     *      } );\n     *    } )\n     */\n    \"oSearch\": $.extend({}, DataTable.models.oSearch),\n\n    /**\n     * __Deprecated__ The functionality provided by this parameter has now been\n     * superseded by that provided through `ajax`, which should be used instead.\n     *\n     * By default DataTables will look for the property `data` (or `aaData` for\n     * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n     * source or for server-side processing - this parameter allows that\n     * property to be changed. You can use Javascript dotted object notation to\n     * get a data source for multiple levels of nesting.\n     *  @type string\n     *  @default data\n     *\n     *  @dtopt Options\n     *  @dtopt Server-side\n     *  @name DataTable.defaults.ajaxDataProp\n     *\n     *  @deprecated 1.10. Please use `ajax` for this functionality now.\n     */\n    \"sAjaxDataProp\": \"data\",\n\n    /**\n     * __Deprecated__ The functionality provided by this parameter has now been\n     * superseded by that provided through `ajax`, which should be used instead.\n     *\n     * You can instruct DataTables to load data from an external\n     * source using this parameter (use aData if you want to pass data in you\n     * already have). Simply provide a url a JSON object can be obtained from.\n     *  @type string\n     *  @default null\n     *\n     *  @dtopt Options\n     *  @dtopt Server-side\n     *  @name DataTable.defaults.ajaxSource\n     *\n     *  @deprecated 1.10. Please use `ajax` for this functionality now.\n     */\n    \"sAjaxSource\": null,\n\n    /**\n     * This initialisation variable allows you to specify exactly where in the\n     * DOM you want DataTables to inject the various controls it adds to the page\n     * (for example you might want the pagination controls at the top of the\n     * table). DIV elements (with or without a custom class) can also be added to\n     * aid styling. The follow syntax is used:\n     *   <ul>\n     *     <li>The following options are allowed:\n     *       <ul>\n     *         <li>'l' - Length changing</li>\n     *         <li>'f' - Filtering input</li>\n     *         <li>'t' - The table!</li>\n     *         <li>'i' - Information</li>\n     *         <li>'p' - Pagination</li>\n     *         <li>'r' - pRocessing</li>\n     *       </ul>\n     *     </li>\n     *     <li>The following constants are allowed:\n     *       <ul>\n     *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n     *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n     *       </ul>\n     *     </li>\n     *     <li>The following syntax is expected:\n     *       <ul>\n     *         <li>'&lt;' and '&gt;' - div elements</li>\n     *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n     *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n     *       </ul>\n     *     </li>\n     *     <li>Examples:\n     *       <ul>\n     *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n     *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n     *       </ul>\n     *     </li>\n     *   </ul>\n     *  @type string\n     *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n     *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.dom\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n     *      } );\n     *    } );\n     */\n    \"sDom\": \"lfrtip\",\n\n    /**\n     * Search delay option. This will throttle full table searches that use the\n     * DataTables provided search input element (it does not effect calls to\n     * `dt-api search()`, providing a delay before the search is made.\n     *  @type integer\n     *  @default 0\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.searchDelay\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"searchDelay\": 200\n     *      } );\n     *    } )\n     */\n    \"searchDelay\": null,\n\n    /**\n     * DataTables features six different built-in options for the buttons to\n     * display for pagination control:\n     *\n     * * `numbers` - Page number buttons only\n     * * `simple` - 'Previous' and 'Next' buttons only\n     * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n     * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n     * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n     * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n     *  \n     * Further methods can be added using {@link DataTable.ext.oPagination}.\n     *  @type string\n     *  @default simple_numbers\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.pagingType\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"pagingType\": \"full_numbers\"\n     *      } );\n     *    } )\n     */\n    \"sPaginationType\": \"simple_numbers\",\n\n    /**\n     * Enable horizontal scrolling. When a table is too wide to fit into a\n     * certain layout, or you have a large number of columns in the table, you\n     * can enable x-scrolling to show the table in a viewport, which can be\n     * scrolled. This property can be `true` which will allow the table to\n     * scroll horizontally when needed, or any CSS unit, or a number (in which\n     * case it will be treated as a pixel measurement). Setting as simply `true`\n     * is recommended.\n     *  @type boolean|string\n     *  @default <i>blank string - i.e. disabled</i>\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.scrollX\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"scrollX\": true,\n     *        \"scrollCollapse\": true\n     *      } );\n     *    } );\n     */\n    \"sScrollX\": \"\",\n\n    /**\n     * This property can be used to force a DataTable to use more width than it\n     * might otherwise do when x-scrolling is enabled. For example if you have a\n     * table which requires to be well spaced, this parameter is useful for\n     * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n     * any CSS unit, or a number (in which case it will be treated as a pixel\n     * measurement).\n     *  @type string\n     *  @default <i>blank string - i.e. disabled</i>\n     *\n     *  @dtopt Options\n     *  @name DataTable.defaults.scrollXInner\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"scrollX\": \"100%\",\n     *        \"scrollXInner\": \"110%\"\n     *      } );\n     *    } );\n     */\n    \"sScrollXInner\": \"\",\n\n    /**\n     * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n     * to the given height, and enable scrolling for any data which overflows the\n     * current viewport. This can be used as an alternative to paging to display\n     * a lot of data in a small area (although paging and scrolling can both be\n     * enabled at the same time). This property can be any CSS unit, or a number\n     * (in which case it will be treated as a pixel measurement).\n     *  @type string\n     *  @default <i>blank string - i.e. disabled</i>\n     *\n     *  @dtopt Features\n     *  @name DataTable.defaults.scrollY\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"scrollY\": \"200px\",\n     *        \"paginate\": false\n     *      } );\n     *    } );\n     */\n    \"sScrollY\": \"\",\n\n    /**\n     * __Deprecated__ The functionality provided by this parameter has now been\n     * superseded by that provided through `ajax`, which should be used instead.\n     *\n     * Set the HTTP method that is used to make the Ajax call for server-side\n     * processing or Ajax sourced data.\n     *  @type string\n     *  @default GET\n     *\n     *  @dtopt Options\n     *  @dtopt Server-side\n     *  @name DataTable.defaults.serverMethod\n     *\n     *  @deprecated 1.10. Please use `ajax` for this functionality now.\n     */\n    \"sServerMethod\": \"GET\",\n\n    /**\n     * DataTables makes use of renderers when displaying HTML elements for\n     * a table. These renderers can be added or modified by plug-ins to\n     * generate suitable mark-up for a site. For example the Bootstrap\n     * integration plug-in for DataTables uses a paging button renderer to\n     * display pagination buttons in the mark-up required by Bootstrap.\n     *\n     * For further information about the renderers available see\n     * DataTable.ext.renderer\n     *  @type string|object\n     *  @default null\n     *\n     *  @name DataTable.defaults.renderer\n     *\n     */\n    \"renderer\": null,\n\n    /**\n     * Set the data property name that DataTables should use to get a row's id\n     * to set as the `id` property in the node.\n     *  @type string\n     *  @default DT_RowId\n     *\n     *  @name DataTable.defaults.rowId\n     */\n    \"rowId\": \"DT_RowId\"\n  };\n\n  _fnHungarianMap(DataTable.defaults);\n  /*\n   * Developer note - See note in model.defaults.js about the use of Hungarian\n   * notation and camel case.\n   */\n\n  /**\n   * Column options that can be given to DataTables at initialisation time.\n   *  @namespace\n   */\n\n\n  DataTable.defaults.column = {\n    /**\n     * Define which column(s) an order will occur on for this column. This\n     * allows a column's ordering to take multiple columns into account when\n     * doing a sort or use the data from a different column. For example first\n     * name / last name columns make sense to do a multi-column sort over the\n     * two columns.\n     *  @type array|int\n     *  @default null <i>Takes the value of the column index automatically</i>\n     *\n     *  @name DataTable.defaults.column.orderData\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n     *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n     *          { \"orderData\": 2, \"targets\": [ 2 ] }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"orderData\": [ 0, 1 ] },\n     *          { \"orderData\": [ 1, 0 ] },\n     *          { \"orderData\": 2 },\n     *          null,\n     *          null\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"aDataSort\": null,\n    \"iDataSort\": -1,\n\n    /**\n     * You can control the default ordering direction, and even alter the\n     * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n     * using this parameter.\n     *  @type array\n     *  @default [ 'asc', 'desc' ]\n     *\n     *  @name DataTable.defaults.column.orderSequence\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n     *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n     *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          null,\n     *          { \"orderSequence\": [ \"asc\" ] },\n     *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n     *          { \"orderSequence\": [ \"desc\" ] },\n     *          null\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"asSorting\": ['asc', 'desc'],\n\n    /**\n     * Enable or disable filtering on the data in this column.\n     *  @type boolean\n     *  @default true\n     *\n     *  @name DataTable.defaults.column.searchable\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"searchable\": false, \"targets\": [ 0 ] }\n     *        ] } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"searchable\": false },\n     *          null,\n     *          null,\n     *          null,\n     *          null\n     *        ] } );\n     *    } );\n     */\n    \"bSearchable\": true,\n\n    /**\n     * Enable or disable ordering on this column.\n     *  @type boolean\n     *  @default true\n     *\n     *  @name DataTable.defaults.column.orderable\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"orderable\": false, \"targets\": [ 0 ] }\n     *        ] } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"orderable\": false },\n     *          null,\n     *          null,\n     *          null,\n     *          null\n     *        ] } );\n     *    } );\n     */\n    \"bSortable\": true,\n\n    /**\n     * Enable or disable the display of this column.\n     *  @type boolean\n     *  @default true\n     *\n     *  @name DataTable.defaults.column.visible\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"visible\": false, \"targets\": [ 0 ] }\n     *        ] } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"visible\": false },\n     *          null,\n     *          null,\n     *          null,\n     *          null\n     *        ] } );\n     *    } );\n     */\n    \"bVisible\": true,\n\n    /**\n     * Developer definable function that is called whenever a cell is created (Ajax source,\n     * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n     * allowing you to modify the DOM element (add background colour for example) when the\n     * element is available.\n     *  @type function\n     *  @param {element} td The TD node that has been created\n     *  @param {*} cellData The Data for the cell\n     *  @param {array|object} rowData The data for the whole row\n     *  @param {int} row The row index for the aoData data store\n     *  @param {int} col The column index for aoColumns\n     *\n     *  @name DataTable.defaults.column.createdCell\n     *  @dtopt Columns\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [ {\n     *          \"targets\": [3],\n     *          \"createdCell\": function (td, cellData, rowData, row, col) {\n     *            if ( cellData == \"1.7\" ) {\n     *              $(td).css('color', 'blue')\n     *            }\n     *          }\n     *        } ]\n     *      });\n     *    } );\n     */\n    \"fnCreatedCell\": null,\n\n    /**\n     * This parameter has been replaced by `data` in DataTables to ensure naming\n     * consistency. `dataProp` can still be used, as there is backwards\n     * compatibility in DataTables for this option, but it is strongly\n     * recommended that you use `data` in preference to `dataProp`.\n     *  @name DataTable.defaults.column.dataProp\n     */\n\n    /**\n     * This property can be used to read data from any data source property,\n     * including deeply nested objects / properties. `data` can be given in a\n     * number of different ways which effect its behaviour:\n     *\n     * * `integer` - treated as an array index for the data source. This is the\n     *   default that DataTables uses (incrementally increased for each column).\n     * * `string` - read an object property from the data source. There are\n     *   three 'special' options that can be used in the string to alter how\n     *   DataTables reads the data from the source object:\n     *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n     *      Javascript to read from nested objects, so to can the options\n     *      specified in `data`. For example: `browser.version` or\n     *      `browser.name`. If your object parameter name contains a period, use\n     *      `\\\\` to escape it - i.e. `first\\\\.name`.\n     *    * `[]` - Array notation. DataTables can automatically combine data\n     *      from and array source, joining the data with the characters provided\n     *      between the two brackets. For example: `name[, ]` would provide a\n     *      comma-space separated list from the source array. If no characters\n     *      are provided between the brackets, the original array source is\n     *      returned.\n     *    * `()` - Function notation. Adding `()` to the end of a parameter will\n     *      execute a function of the name given. For example: `browser()` for a\n     *      simple function on the data source, `browser.version()` for a\n     *      function in a nested property or even `browser().version` to get an\n     *      object property if the function called returns an object. Note that\n     *      function notation is recommended for use in `render` rather than\n     *      `data` as it is much simpler to use as a renderer.\n     * * `null` - use the original data source for the row rather than plucking\n     *   data directly from it. This action has effects on two other\n     *   initialisation options:\n     *    * `defaultContent` - When null is given as the `data` option and\n     *      `defaultContent` is specified for the column, the value defined by\n     *      `defaultContent` will be used for the cell.\n     *    * `render` - When null is used for the `data` option and the `render`\n     *      option is specified for the column, the whole data source for the\n     *      row is used for the renderer.\n     * * `function` - the function given will be executed whenever DataTables\n     *   needs to set or get the data for a cell in the column. The function\n     *   takes three parameters:\n     *    * Parameters:\n     *      * `{array|object}` The data source for the row\n     *      * `{string}` The type call data requested - this will be 'set' when\n     *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n     *        when gathering data. Note that when `undefined` is given for the\n     *        type DataTables expects to get the raw data for the object back<\n     *      * `{*}` Data to set when the second parameter is 'set'.\n     *    * Return:\n     *      * The return value from the function is not required when 'set' is\n     *        the type of call, but otherwise the return is what will be used\n     *        for the data requested.\n     *\n     * Note that `data` is a getter and setter option. If you just require\n     * formatting of data for output, you will likely want to use `render` which\n     * is simply a getter and thus simpler to use.\n     *\n     * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n     * name change reflects the flexibility of this property and is consistent\n     * with the naming of mRender. If 'mDataProp' is given, then it will still\n     * be used by DataTables, as it automatically maps the old name to the new\n     * if required.\n     *\n     *  @type string|int|function|null\n     *  @default null <i>Use automatically calculated column index</i>\n     *\n     *  @name DataTable.defaults.column.data\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Read table data from objects\n     *    // JSON structure for each row:\n     *    //   {\n     *    //      \"engine\": {value},\n     *    //      \"browser\": {value},\n     *    //      \"platform\": {value},\n     *    //      \"version\": {value},\n     *    //      \"grade\": {value}\n     *    //   }\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"ajaxSource\": \"sources/objects.txt\",\n     *        \"columns\": [\n     *          { \"data\": \"engine\" },\n     *          { \"data\": \"browser\" },\n     *          { \"data\": \"platform\" },\n     *          { \"data\": \"version\" },\n     *          { \"data\": \"grade\" }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Read information from deeply nested objects\n     *    // JSON structure for each row:\n     *    //   {\n     *    //      \"engine\": {value},\n     *    //      \"browser\": {value},\n     *    //      \"platform\": {\n     *    //         \"inner\": {value}\n     *    //      },\n     *    //      \"details\": [\n     *    //         {value}, {value}\n     *    //      ]\n     *    //   }\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"ajaxSource\": \"sources/deep.txt\",\n     *        \"columns\": [\n     *          { \"data\": \"engine\" },\n     *          { \"data\": \"browser\" },\n     *          { \"data\": \"platform.inner\" },\n     *          { \"data\": \"details.0\" },\n     *          { \"data\": \"details.1\" }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `data` as a function to provide different information for\n     *    // sorting, filtering and display. In this case, currency (price)\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [ {\n     *          \"targets\": [ 0 ],\n     *          \"data\": function ( source, type, val ) {\n     *            if (type === 'set') {\n     *              source.price = val;\n     *              // Store the computed display and filter values for efficiency\n     *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n     *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n     *              return;\n     *            }\n     *            else if (type === 'display') {\n     *              return source.price_display;\n     *            }\n     *            else if (type === 'filter') {\n     *              return source.price_filter;\n     *            }\n     *            // 'sort', 'type' and undefined all just use the integer\n     *            return source.price;\n     *          }\n     *        } ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using default content\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [ {\n     *          \"targets\": [ 0 ],\n     *          \"data\": null,\n     *          \"defaultContent\": \"Click to edit\"\n     *        } ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using array notation - outputting a list from an array\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [ {\n     *          \"targets\": [ 0 ],\n     *          \"data\": \"name[, ]\"\n     *        } ]\n     *      } );\n     *    } );\n     *\n     */\n    \"mData\": null,\n\n    /**\n     * This property is the rendering partner to `data` and it is suggested that\n     * when you want to manipulate data for display (including filtering,\n     * sorting etc) without altering the underlying data for the table, use this\n     * property. `render` can be considered to be the the read only companion to\n     * `data` which is read / write (then as such more complex). Like `data`\n     * this option can be given in a number of different ways to effect its\n     * behaviour:\n     *\n     * * `integer` - treated as an array index for the data source. This is the\n     *   default that DataTables uses (incrementally increased for each column).\n     * * `string` - read an object property from the data source. There are\n     *   three 'special' options that can be used in the string to alter how\n     *   DataTables reads the data from the source object:\n     *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n     *      Javascript to read from nested objects, so to can the options\n     *      specified in `data`. For example: `browser.version` or\n     *      `browser.name`. If your object parameter name contains a period, use\n     *      `\\\\` to escape it - i.e. `first\\\\.name`.\n     *    * `[]` - Array notation. DataTables can automatically combine data\n     *      from and array source, joining the data with the characters provided\n     *      between the two brackets. For example: `name[, ]` would provide a\n     *      comma-space separated list from the source array. If no characters\n     *      are provided between the brackets, the original array source is\n     *      returned.\n     *    * `()` - Function notation. Adding `()` to the end of a parameter will\n     *      execute a function of the name given. For example: `browser()` for a\n     *      simple function on the data source, `browser.version()` for a\n     *      function in a nested property or even `browser().version` to get an\n     *      object property if the function called returns an object.\n     * * `object` - use different data for the different data types requested by\n     *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n     *   of the object is the data type the property refers to and the value can\n     *   defined using an integer, string or function using the same rules as\n     *   `render` normally does. Note that an `_` option _must_ be specified.\n     *   This is the default value to use if you haven't specified a value for\n     *   the data type requested by DataTables.\n     * * `function` - the function given will be executed whenever DataTables\n     *   needs to set or get the data for a cell in the column. The function\n     *   takes three parameters:\n     *    * Parameters:\n     *      * {array|object} The data source for the row (based on `data`)\n     *      * {string} The type call data requested - this will be 'filter',\n     *        'display', 'type' or 'sort'.\n     *      * {array|object} The full data source for the row (not based on\n     *        `data`)\n     *    * Return:\n     *      * The return value from the function is what will be used for the\n     *        data requested.\n     *\n     *  @type string|int|function|object|null\n     *  @default null Use the data source value.\n     *\n     *  @name DataTable.defaults.column.render\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Create a comma separated list from an array of objects\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"ajaxSource\": \"sources/deep.txt\",\n     *        \"columns\": [\n     *          { \"data\": \"engine\" },\n     *          { \"data\": \"browser\" },\n     *          {\n     *            \"data\": \"platform\",\n     *            \"render\": \"[, ].name\"\n     *          }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Execute a function to obtain data\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [ {\n     *          \"targets\": [ 0 ],\n     *          \"data\": null, // Use the full data source object for the renderer's source\n     *          \"render\": \"browserName()\"\n     *        } ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // As an object, extracting different data for the different types\n     *    // This would be used with a data source such as:\n     *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n     *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n     *    // (which has both forms) is used for filtering for if a user inputs either format, while\n     *    // the formatted phone number is the one that is shown in the table.\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [ {\n     *          \"targets\": [ 0 ],\n     *          \"data\": null, // Use the full data source object for the renderer's source\n     *          \"render\": {\n     *            \"_\": \"phone\",\n     *            \"filter\": \"phone_filter\",\n     *            \"display\": \"phone_display\"\n     *          }\n     *        } ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Use as a function to create a link from the data source\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [ {\n     *          \"targets\": [ 0 ],\n     *          \"data\": \"download_link\",\n     *          \"render\": function ( data, type, full ) {\n     *            return '<a href=\"'+data+'\">Download</a>';\n     *          }\n     *        } ]\n     *      } );\n     *    } );\n     */\n    \"mRender\": null,\n\n    /**\n     * Change the cell type created for the column - either TD cells or TH cells. This\n     * can be useful as TH cells have semantic meaning in the table body, allowing them\n     * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n     *  @type string\n     *  @default td\n     *\n     *  @name DataTable.defaults.column.cellType\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Make the first column use TH cells\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [ {\n     *          \"targets\": [ 0 ],\n     *          \"cellType\": \"th\"\n     *        } ]\n     *      } );\n     *    } );\n     */\n    \"sCellType\": \"td\",\n\n    /**\n     * Class to give to each cell in this column.\n     *  @type string\n     *  @default <i>Empty string</i>\n     *\n     *  @name DataTable.defaults.column.class\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"class\": \"my_class\" },\n     *          null,\n     *          null,\n     *          null,\n     *          null\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"sClass\": \"\",\n\n    /**\n     * When DataTables calculates the column widths to assign to each column,\n     * it finds the longest string in each column and then constructs a\n     * temporary table and reads the widths from that. The problem with this\n     * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n     * string - thus the calculation can go wrong (doing it properly and putting\n     * it into an DOM object and measuring that is horribly(!) slow). Thus as\n     * a \"work around\" we provide this option. It will append its value to the\n     * text that is found to be the longest string for the column - i.e. padding.\n     * Generally you shouldn't need this!\n     *  @type string\n     *  @default <i>Empty string<i>\n     *\n     *  @name DataTable.defaults.column.contentPadding\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          null,\n     *          null,\n     *          null,\n     *          {\n     *            \"contentPadding\": \"mmm\"\n     *          }\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"sContentPadding\": \"\",\n\n    /**\n     * Allows a default value to be given for a column's data, and will be used\n     * whenever a null data source is encountered (this can be because `data`\n     * is set to null, or because the data source itself is null).\n     *  @type string\n     *  @default null\n     *\n     *  @name DataTable.defaults.column.defaultContent\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          {\n     *            \"data\": null,\n     *            \"defaultContent\": \"Edit\",\n     *            \"targets\": [ -1 ]\n     *          }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          null,\n     *          null,\n     *          null,\n     *          {\n     *            \"data\": null,\n     *            \"defaultContent\": \"Edit\"\n     *          }\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"sDefaultContent\": null,\n\n    /**\n     * This parameter is only used in DataTables' server-side processing. It can\n     * be exceptionally useful to know what columns are being displayed on the\n     * client side, and to map these to database fields. When defined, the names\n     * also allow DataTables to reorder information from the server if it comes\n     * back in an unexpected order (i.e. if you switch your columns around on the\n     * client-side, your server-side code does not also need updating).\n     *  @type string\n     *  @default <i>Empty string</i>\n     *\n     *  @name DataTable.defaults.column.name\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n     *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n     *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n     *          { \"name\": \"version\", \"targets\": [ 3 ] },\n     *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"name\": \"engine\" },\n     *          { \"name\": \"browser\" },\n     *          { \"name\": \"platform\" },\n     *          { \"name\": \"version\" },\n     *          { \"name\": \"grade\" }\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"sName\": \"\",\n\n    /**\n     * Defines a data source type for the ordering which can be used to read\n     * real-time information from the table (updating the internally cached\n     * version) prior to ordering. This allows ordering to occur on user\n     * editable elements such as form inputs.\n     *  @type string\n     *  @default std\n     *\n     *  @name DataTable.defaults.column.orderDataType\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n     *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n     *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n     *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          null,\n     *          null,\n     *          { \"orderDataType\": \"dom-text\" },\n     *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n     *          { \"orderDataType\": \"dom-select\" },\n     *          { \"orderDataType\": \"dom-checkbox\" }\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"sSortDataType\": \"std\",\n\n    /**\n     * The title of this column.\n     *  @type string\n     *  @default null <i>Derived from the 'TH' value for this column in the\n     *    original HTML table.</i>\n     *\n     *  @name DataTable.defaults.column.title\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"title\": \"My column title\" },\n     *          null,\n     *          null,\n     *          null,\n     *          null\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"sTitle\": null,\n\n    /**\n     * The type allows you to specify how the data for this column will be\n     * ordered. Four types (string, numeric, date and html (which will strip\n     * HTML tags before ordering)) are currently available. Note that only date\n     * formats understood by Javascript's Date() object will be accepted as type\n     * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n     * 'numeric', 'date' or 'html' (by default). Further types can be adding\n     * through plug-ins.\n     *  @type string\n     *  @default null <i>Auto-detected from raw data</i>\n     *\n     *  @name DataTable.defaults.column.type\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"type\": \"html\", \"targets\": [ 0 ] }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"type\": \"html\" },\n     *          null,\n     *          null,\n     *          null,\n     *          null\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"sType\": null,\n\n    /**\n     * Defining the width of the column, this parameter may take any CSS value\n     * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n     * been given a specific width through this interface ensuring that the table\n     * remains readable.\n     *  @type string\n     *  @default null <i>Automatic</i>\n     *\n     *  @name DataTable.defaults.column.width\n     *  @dtopt Columns\n     *\n     *  @example\n     *    // Using `columnDefs`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columnDefs\": [\n     *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n     *        ]\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Using `columns`\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"columns\": [\n     *          { \"width\": \"20%\" },\n     *          null,\n     *          null,\n     *          null,\n     *          null\n     *        ]\n     *      } );\n     *    } );\n     */\n    \"sWidth\": null\n  };\n\n  _fnHungarianMap(DataTable.defaults.column);\n  /**\n   * DataTables settings object - this holds all the information needed for a\n   * given table, including configuration, data and current application of the\n   * table options. DataTables does not have a single instance for each DataTable\n   * with the settings attached to that instance, but rather instances of the\n   * DataTable \"class\" are created on-the-fly as needed (typically by a\n   * $().dataTable() call) and the settings object is then applied to that\n   * instance.\n   *\n   * Note that this object is related to {@link DataTable.defaults} but this\n   * one is the internal data store for DataTables's cache of columns. It should\n   * NOT be manipulated outside of DataTables. Any configuration should be done\n   * through the initialisation options.\n   *  @namespace\n   *  @todo Really should attach the settings object to individual instances so we\n   *    don't need to create new instances on each $().dataTable() call (if the\n   *    table already exists). It would also save passing oSettings around and\n   *    into every single function. However, this is a very significant\n   *    architecture change for DataTables and will almost certainly break\n   *    backwards compatibility with older installations. This is something that\n   *    will be done in 2.0.\n   */\n\n\n  DataTable.models.oSettings = {\n    /**\n     * Primary features of DataTables and their enablement state.\n     *  @namespace\n     */\n    \"oFeatures\": {\n      /**\n       * Flag to say if DataTables should automatically try to calculate the\n       * optimum table and columns widths (true) or not (false).\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bAutoWidth\": null,\n\n      /**\n       * Delay the creation of TR and TD elements until they are actually\n       * needed by a driven page draw. This can give a significant speed\n       * increase for Ajax source and Javascript source data, but makes no\n       * difference at all for DOM and server-side processing tables.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bDeferRender\": null,\n\n      /**\n       * Enable filtering on the table or not. Note that if this is disabled\n       * then there is no filtering at all on the table, including fnFilter.\n       * To just remove the filtering input use sDom and remove the 'f' option.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bFilter\": null,\n\n      /**\n       * Table information element (the 'Showing x of y records' div) enable\n       * flag.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bInfo\": null,\n\n      /**\n       * Present a user control allowing the end user to change the page size\n       * when pagination is enabled.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bLengthChange\": null,\n\n      /**\n       * Pagination enabled or not. Note that if this is disabled then length\n       * changing must also be disabled.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bPaginate\": null,\n\n      /**\n       * Processing indicator enable flag whenever DataTables is enacting a\n       * user request - typically an Ajax request for server-side processing.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bProcessing\": null,\n\n      /**\n       * Server-side processing enabled flag - when enabled DataTables will\n       * get all data from the server for every draw - there is no filtering,\n       * sorting or paging done on the client-side.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bServerSide\": null,\n\n      /**\n       * Sorting enablement flag.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bSort\": null,\n\n      /**\n       * Multi-column sorting\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bSortMulti\": null,\n\n      /**\n       * Apply a class to the columns which are being sorted to provide a\n       * visual highlight or not. This can slow things down when enabled since\n       * there is a lot of DOM interaction.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bSortClasses\": null,\n\n      /**\n       * State saving enablement flag.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bStateSave\": null\n    },\n\n    /**\n     * Scrolling settings for a table.\n     *  @namespace\n     */\n    \"oScroll\": {\n      /**\n       * When the table is shorter in height than sScrollY, collapse the\n       * table container down to the height of the table (when true).\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type boolean\n       */\n      \"bCollapse\": null,\n\n      /**\n       * Width of the scrollbar for the web-browser's platform. Calculated\n       * during table initialisation.\n       *  @type int\n       *  @default 0\n       */\n      \"iBarWidth\": 0,\n\n      /**\n       * Viewport width for horizontal scrolling. Horizontal scrolling is\n       * disabled if an empty string.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type string\n       */\n      \"sX\": null,\n\n      /**\n       * Width to expand the table to when using x-scrolling. Typically you\n       * should not need to use this.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type string\n       *  @deprecated\n       */\n      \"sXInner\": null,\n\n      /**\n       * Viewport height for vertical scrolling. Vertical scrolling is disabled\n       * if an empty string.\n       * Note that this parameter will be set by the initialisation routine. To\n       * set a default use {@link DataTable.defaults}.\n       *  @type string\n       */\n      \"sY\": null\n    },\n\n    /**\n     * Language information for the table.\n     *  @namespace\n     *  @extends DataTable.defaults.oLanguage\n     */\n    \"oLanguage\": {\n      /**\n       * Information callback function. See\n       * {@link DataTable.defaults.fnInfoCallback}\n       *  @type function\n       *  @default null\n       */\n      \"fnInfoCallback\": null\n    },\n\n    /**\n     * Browser support parameters\n     *  @namespace\n     */\n    \"oBrowser\": {\n      /**\n       * Indicate if the browser incorrectly calculates width:100% inside a\n       * scrolling element (IE6/7)\n       *  @type boolean\n       *  @default false\n       */\n      \"bScrollOversize\": false,\n\n      /**\n       * Determine if the vertical scrollbar is on the right or left of the\n       * scrolling container - needed for rtl language layout, although not\n       * all browsers move the scrollbar (Safari).\n       *  @type boolean\n       *  @default false\n       */\n      \"bScrollbarLeft\": false,\n\n      /**\n       * Flag for if `getBoundingClientRect` is fully supported or not\n       *  @type boolean\n       *  @default false\n       */\n      \"bBounding\": false,\n\n      /**\n       * Browser scrollbar width\n       *  @type integer\n       *  @default 0\n       */\n      \"barWidth\": 0\n    },\n    \"ajax\": null,\n\n    /**\n     * Array referencing the nodes which are used for the features. The\n     * parameters of this object match what is allowed by sDom - i.e.\n     *   <ul>\n     *     <li>'l' - Length changing</li>\n     *     <li>'f' - Filtering input</li>\n     *     <li>'t' - The table!</li>\n     *     <li>'i' - Information</li>\n     *     <li>'p' - Pagination</li>\n     *     <li>'r' - pRocessing</li>\n     *   </ul>\n     *  @type array\n     *  @default []\n     */\n    \"aanFeatures\": [],\n\n    /**\n     * Store data information - see {@link DataTable.models.oRow} for detailed\n     * information.\n     *  @type array\n     *  @default []\n     */\n    \"aoData\": [],\n\n    /**\n     * Array of indexes which are in the current display (after filtering etc)\n     *  @type array\n     *  @default []\n     */\n    \"aiDisplay\": [],\n\n    /**\n     * Array of indexes for display - no filtering\n     *  @type array\n     *  @default []\n     */\n    \"aiDisplayMaster\": [],\n\n    /**\n     * Map of row ids to data indexes\n     *  @type object\n     *  @default {}\n     */\n    \"aIds\": {},\n\n    /**\n     * Store information about each column that is in use\n     *  @type array\n     *  @default []\n     */\n    \"aoColumns\": [],\n\n    /**\n     * Store information about the table's header\n     *  @type array\n     *  @default []\n     */\n    \"aoHeader\": [],\n\n    /**\n     * Store information about the table's footer\n     *  @type array\n     *  @default []\n     */\n    \"aoFooter\": [],\n\n    /**\n     * Store the applied global search information in case we want to force a\n     * research or compare the old search to a new one.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @namespace\n     *  @extends DataTable.models.oSearch\n     */\n    \"oPreviousSearch\": {},\n\n    /**\n     * Store the applied search for each column - see\n     * {@link DataTable.models.oSearch} for the format that is used for the\n     * filtering information for each column.\n     *  @type array\n     *  @default []\n     */\n    \"aoPreSearchCols\": [],\n\n    /**\n     * Sorting that is applied to the table. Note that the inner arrays are\n     * used in the following manner:\n     * <ul>\n     *   <li>Index 0 - column number</li>\n     *   <li>Index 1 - current sorting direction</li>\n     * </ul>\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type array\n     *  @todo These inner arrays should really be objects\n     */\n    \"aaSorting\": null,\n\n    /**\n     * Sorting that is always applied to the table (i.e. prefixed in front of\n     * aaSorting).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type array\n     *  @default []\n     */\n    \"aaSortingFixed\": [],\n\n    /**\n     * Classes to use for the striping of a table.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type array\n     *  @default []\n     */\n    \"asStripeClasses\": null,\n\n    /**\n     * If restoring a table - we should restore its striping classes as well\n     *  @type array\n     *  @default []\n     */\n    \"asDestroyStripes\": [],\n\n    /**\n     * If restoring a table - we should restore its width\n     *  @type int\n     *  @default 0\n     */\n    \"sDestroyWidth\": 0,\n\n    /**\n     * Callback functions array for every time a row is inserted (i.e. on a draw).\n     *  @type array\n     *  @default []\n     */\n    \"aoRowCallback\": [],\n\n    /**\n     * Callback functions for the header on each draw.\n     *  @type array\n     *  @default []\n     */\n    \"aoHeaderCallback\": [],\n\n    /**\n     * Callback function for the footer on each draw.\n     *  @type array\n     *  @default []\n     */\n    \"aoFooterCallback\": [],\n\n    /**\n     * Array of callback functions for draw callback functions\n     *  @type array\n     *  @default []\n     */\n    \"aoDrawCallback\": [],\n\n    /**\n     * Array of callback functions for row created function\n     *  @type array\n     *  @default []\n     */\n    \"aoRowCreatedCallback\": [],\n\n    /**\n     * Callback functions for just before the table is redrawn. A return of\n     * false will be used to cancel the draw.\n     *  @type array\n     *  @default []\n     */\n    \"aoPreDrawCallback\": [],\n\n    /**\n     * Callback functions for when the table has been initialised.\n     *  @type array\n     *  @default []\n     */\n    \"aoInitComplete\": [],\n\n    /**\n     * Callbacks for modifying the settings to be stored for state saving, prior to\n     * saving state.\n     *  @type array\n     *  @default []\n     */\n    \"aoStateSaveParams\": [],\n\n    /**\n     * Callbacks for modifying the settings that have been stored for state saving\n     * prior to using the stored values to restore the state.\n     *  @type array\n     *  @default []\n     */\n    \"aoStateLoadParams\": [],\n\n    /**\n     * Callbacks for operating on the settings object once the saved state has been\n     * loaded\n     *  @type array\n     *  @default []\n     */\n    \"aoStateLoaded\": [],\n\n    /**\n     * Cache the table ID for quick access\n     *  @type string\n     *  @default <i>Empty string</i>\n     */\n    \"sTableId\": \"\",\n\n    /**\n     * The TABLE node for the main table\n     *  @type node\n     *  @default null\n     */\n    \"nTable\": null,\n\n    /**\n     * Permanent ref to the thead element\n     *  @type node\n     *  @default null\n     */\n    \"nTHead\": null,\n\n    /**\n     * Permanent ref to the tfoot element - if it exists\n     *  @type node\n     *  @default null\n     */\n    \"nTFoot\": null,\n\n    /**\n     * Permanent ref to the tbody element\n     *  @type node\n     *  @default null\n     */\n    \"nTBody\": null,\n\n    /**\n     * Cache the wrapper node (contains all DataTables controlled elements)\n     *  @type node\n     *  @default null\n     */\n    \"nTableWrapper\": null,\n\n    /**\n     * Indicate if when using server-side processing the loading of data\n     * should be deferred until the second draw.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     *  @default false\n     */\n    \"bDeferLoading\": false,\n\n    /**\n     * Indicate if all required information has been read in\n     *  @type boolean\n     *  @default false\n     */\n    \"bInitialised\": false,\n\n    /**\n     * Information about open rows. Each object in the array has the parameters\n     * 'nTr' and 'nParent'\n     *  @type array\n     *  @default []\n     */\n    \"aoOpenRows\": [],\n\n    /**\n     * Dictate the positioning of DataTables' control elements - see\n     * {@link DataTable.model.oInit.sDom}.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type string\n     *  @default null\n     */\n    \"sDom\": null,\n\n    /**\n     * Search delay (in mS)\n     *  @type integer\n     *  @default null\n     */\n    \"searchDelay\": null,\n\n    /**\n     * Which type of pagination should be used.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type string\n     *  @default two_button\n     */\n    \"sPaginationType\": \"two_button\",\n\n    /**\n     * The state duration (for `stateSave`) in seconds.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type int\n     *  @default 0\n     */\n    \"iStateDuration\": 0,\n\n    /**\n     * Array of callback functions for state saving. Each array element is an\n     * object with the following parameters:\n     *   <ul>\n     *     <li>function:fn - function to call. Takes two parameters, oSettings\n     *       and the JSON string to save that has been thus far created. Returns\n     *       a JSON string to be inserted into a json object\n     *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n     *     <li>string:sName - name of callback</li>\n     *   </ul>\n     *  @type array\n     *  @default []\n     */\n    \"aoStateSave\": [],\n\n    /**\n     * Array of callback functions for state loading. Each array element is an\n     * object with the following parameters:\n     *   <ul>\n     *     <li>function:fn - function to call. Takes two parameters, oSettings\n     *       and the object stored. May return false to cancel state loading</li>\n     *     <li>string:sName - name of callback</li>\n     *   </ul>\n     *  @type array\n     *  @default []\n     */\n    \"aoStateLoad\": [],\n\n    /**\n     * State that was saved. Useful for back reference\n     *  @type object\n     *  @default null\n     */\n    \"oSavedState\": null,\n\n    /**\n     * State that was loaded. Useful for back reference\n     *  @type object\n     *  @default null\n     */\n    \"oLoadedState\": null,\n\n    /**\n     * Source url for AJAX data for the table.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type string\n     *  @default null\n     */\n    \"sAjaxSource\": null,\n\n    /**\n     * Property from a given object from which to read the table data from. This\n     * can be an empty string (when not server-side processing), in which case\n     * it is  assumed an an array is given directly.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type string\n     */\n    \"sAjaxDataProp\": null,\n\n    /**\n     * The last jQuery XHR object that was used for server-side data gathering.\n     * This can be used for working with the XHR information in one of the\n     * callbacks\n     *  @type object\n     *  @default null\n     */\n    \"jqXHR\": null,\n\n    /**\n     * JSON returned from the server in the last Ajax request\n     *  @type object\n     *  @default undefined\n     */\n    \"json\": undefined,\n\n    /**\n     * Data submitted as part of the last Ajax request\n     *  @type object\n     *  @default undefined\n     */\n    \"oAjaxData\": undefined,\n\n    /**\n     * Function to get the server-side data.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type function\n     */\n    \"fnServerData\": null,\n\n    /**\n     * Functions which are called prior to sending an Ajax request so extra\n     * parameters can easily be sent to the server\n     *  @type array\n     *  @default []\n     */\n    \"aoServerParams\": [],\n\n    /**\n     * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n     * required).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type string\n     */\n    \"sServerMethod\": null,\n\n    /**\n     * Format numbers for display.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type function\n     */\n    \"fnFormatNumber\": null,\n\n    /**\n     * List of options that can be used for the user selectable length menu.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type array\n     *  @default []\n     */\n    \"aLengthMenu\": null,\n\n    /**\n     * Counter for the draws that the table does. Also used as a tracker for\n     * server-side processing\n     *  @type int\n     *  @default 0\n     */\n    \"iDraw\": 0,\n\n    /**\n     * Indicate if a redraw is being done - useful for Ajax\n     *  @type boolean\n     *  @default false\n     */\n    \"bDrawing\": false,\n\n    /**\n     * Draw index (iDraw) of the last error when parsing the returned data\n     *  @type int\n     *  @default -1\n     */\n    \"iDrawError\": -1,\n\n    /**\n     * Paging display length\n     *  @type int\n     *  @default 10\n     */\n    \"_iDisplayLength\": 10,\n\n    /**\n     * Paging start point - aiDisplay index\n     *  @type int\n     *  @default 0\n     */\n    \"_iDisplayStart\": 0,\n\n    /**\n     * Server-side processing - number of records in the result set\n     * (i.e. before filtering), Use fnRecordsTotal rather than\n     * this property to get the value of the number of records, regardless of\n     * the server-side processing setting.\n     *  @type int\n     *  @default 0\n     *  @private\n     */\n    \"_iRecordsTotal\": 0,\n\n    /**\n     * Server-side processing - number of records in the current display set\n     * (i.e. after filtering). Use fnRecordsDisplay rather than\n     * this property to get the value of the number of records, regardless of\n     * the server-side processing setting.\n     *  @type boolean\n     *  @default 0\n     *  @private\n     */\n    \"_iRecordsDisplay\": 0,\n\n    /**\n     * The classes to use for the table\n     *  @type object\n     *  @default {}\n     */\n    \"oClasses\": {},\n\n    /**\n     * Flag attached to the settings object so you can check in the draw\n     * callback if filtering has been done in the draw. Deprecated in favour of\n     * events.\n     *  @type boolean\n     *  @default false\n     *  @deprecated\n     */\n    \"bFiltered\": false,\n\n    /**\n     * Flag attached to the settings object so you can check in the draw\n     * callback if sorting has been done in the draw. Deprecated in favour of\n     * events.\n     *  @type boolean\n     *  @default false\n     *  @deprecated\n     */\n    \"bSorted\": false,\n\n    /**\n     * Indicate that if multiple rows are in the header and there is more than\n     * one unique cell per column, if the top one (true) or bottom one (false)\n     * should be used for sorting / title by DataTables.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bSortCellsTop\": null,\n\n    /**\n     * Initialisation object that is used for the table\n     *  @type object\n     *  @default null\n     */\n    \"oInit\": null,\n\n    /**\n     * Destroy callback functions - for plug-ins to attach themselves to the\n     * destroy so they can clean up markup and events.\n     *  @type array\n     *  @default []\n     */\n    \"aoDestroyCallback\": [],\n\n    /**\n     * Get the number of records in the current record set, before filtering\n     *  @type function\n     */\n    \"fnRecordsTotal\": function fnRecordsTotal() {\n      return _fnDataSource(this) == 'ssp' ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;\n    },\n\n    /**\n     * Get the number of records in the current record set, after filtering\n     *  @type function\n     */\n    \"fnRecordsDisplay\": function fnRecordsDisplay() {\n      return _fnDataSource(this) == 'ssp' ? this._iRecordsDisplay * 1 : this.aiDisplay.length;\n    },\n\n    /**\n     * Get the display end point - aiDisplay index\n     *  @type function\n     */\n    \"fnDisplayEnd\": function fnDisplayEnd() {\n      var len = this._iDisplayLength,\n          start = this._iDisplayStart,\n          calc = start + len,\n          records = this.aiDisplay.length,\n          features = this.oFeatures,\n          paginate = features.bPaginate;\n\n      if (features.bServerSide) {\n        return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay);\n      } else {\n        return !paginate || calc > records || len === -1 ? records : calc;\n      }\n    },\n\n    /**\n     * The DataTables object for this table\n     *  @type object\n     *  @default null\n     */\n    \"oInstance\": null,\n\n    /**\n     * Unique identifier for each instance of the DataTables object. If there\n     * is an ID on the table node, then it takes that value, otherwise an\n     * incrementing internal counter is used.\n     *  @type string\n     *  @default null\n     */\n    \"sInstance\": null,\n\n    /**\n     * tabindex attribute value that is added to DataTables control elements, allowing\n     * keyboard navigation of the table and its controls.\n     */\n    \"iTabIndex\": 0,\n\n    /**\n     * DIV container for the footer scrolling table if scrolling\n     */\n    \"nScrollHead\": null,\n\n    /**\n     * DIV container for the footer scrolling table if scrolling\n     */\n    \"nScrollFoot\": null,\n\n    /**\n     * Last applied sort\n     *  @type array\n     *  @default []\n     */\n    \"aLastSort\": [],\n\n    /**\n     * Stored plug-in instances\n     *  @type object\n     *  @default {}\n     */\n    \"oPlugins\": {},\n\n    /**\n     * Function used to get a row's id from the row's data\n     *  @type function\n     *  @default null\n     */\n    \"rowIdFn\": null,\n\n    /**\n     * Data location where to store a row's id\n     *  @type string\n     *  @default null\n     */\n    \"rowId\": null\n  };\n  /**\n   * Extension object for DataTables that is used to provide all extension\n   * options.\n   *\n   * Note that the `DataTable.ext` object is available through\n   * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n   * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n   *  @namespace\n   *  @extends DataTable.models.ext\n   */\n\n  /**\n   * DataTables extensions\n   * \n   * This namespace acts as a collection area for plug-ins that can be used to\n   * extend DataTables capabilities. Indeed many of the build in methods\n   * use this method to provide their own capabilities (sorting methods for\n   * example).\n   *\n   * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n   * reasons\n   *\n   *  @namespace\n   */\n\n  DataTable.ext = _ext = {\n    /**\n     * Buttons. For use with the Buttons extension for DataTables. This is\n     * defined here so other extensions can define buttons regardless of load\n     * order. It is _not_ used by DataTables core.\n     *\n     *  @type object\n     *  @default {}\n     */\n    buttons: {},\n\n    /**\n     * Element class names\n     *\n     *  @type object\n     *  @default {}\n     */\n    classes: {},\n\n    /**\n     * DataTables build type (expanded by the download builder)\n     *\n     *  @type string\n     */\n    builder: \"-source-\",\n\n    /**\n     * Error reporting.\n     * \n     * How should DataTables report an error. Can take the value 'alert',\n     * 'throw', 'none' or a function.\n     *\n     *  @type string|function\n     *  @default alert\n     */\n    errMode: \"alert\",\n\n    /**\n     * Feature plug-ins.\n     * \n     * This is an array of objects which describe the feature plug-ins that are\n     * available to DataTables. These feature plug-ins are then available for\n     * use through the `dom` initialisation option.\n     * \n     * Each feature plug-in is described by an object which must have the\n     * following properties:\n     * \n     * * `fnInit` - function that is used to initialise the plug-in,\n     * * `cFeature` - a character so the feature can be enabled by the `dom`\n     *   instillation option. This is case sensitive.\n     *\n     * The `fnInit` function has the following input parameters:\n     *\n     * 1. `{object}` DataTables settings object: see\n     *    {@link DataTable.models.oSettings}\n     *\n     * And the following return is expected:\n     * \n     * * {node|null} The element which contains your feature. Note that the\n     *   return may also be void if your plug-in does not require to inject any\n     *   DOM elements into DataTables control (`dom`) - for example this might\n     *   be useful when developing a plug-in which allows table control via\n     *   keyboard entry\n     *\n     *  @type array\n     *\n     *  @example\n     *    $.fn.dataTable.ext.features.push( {\n     *      \"fnInit\": function( oSettings ) {\n     *        return new TableTools( { \"oDTSettings\": oSettings } );\n     *      },\n     *      \"cFeature\": \"T\"\n     *    } );\n     */\n    feature: [],\n\n    /**\n     * Row searching.\n     * \n     * This method of searching is complimentary to the default type based\n     * searching, and a lot more comprehensive as it allows you complete control\n     * over the searching logic. Each element in this array is a function\n     * (parameters described below) that is called for every row in the table,\n     * and your logic decides if it should be included in the searching data set\n     * or not.\n     *\n     * Searching functions have the following input parameters:\n     *\n     * 1. `{object}` DataTables settings object: see\n     *    {@link DataTable.models.oSettings}\n     * 2. `{array|object}` Data for the row to be processed (same as the\n     *    original format that was passed in as the data source, or an array\n     *    from a DOM data source\n     * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n     *    can be useful to retrieve the `TR` element if you need DOM interaction.\n     *\n     * And the following return is expected:\n     *\n     * * {boolean} Include the row in the searched result set (true) or not\n     *   (false)\n     *\n     * Note that as with the main search ability in DataTables, technically this\n     * is \"filtering\", since it is subtractive. However, for consistency in\n     * naming we call it searching here.\n     *\n     *  @type array\n     *  @default []\n     *\n     *  @example\n     *    // The following example shows custom search being applied to the\n     *    // fourth column (i.e. the data[3] index) based on two input values\n     *    // from the end-user, matching the data in a certain range.\n     *    $.fn.dataTable.ext.search.push(\n     *      function( settings, data, dataIndex ) {\n     *        var min = document.getElementById('min').value * 1;\n     *        var max = document.getElementById('max').value * 1;\n     *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n     *\n     *        if ( min == \"\" && max == \"\" ) {\n     *          return true;\n     *        }\n     *        else if ( min == \"\" && version < max ) {\n     *          return true;\n     *        }\n     *        else if ( min < version && \"\" == max ) {\n     *          return true;\n     *        }\n     *        else if ( min < version && version < max ) {\n     *          return true;\n     *        }\n     *        return false;\n     *      }\n     *    );\n     */\n    search: [],\n\n    /**\n     * Selector extensions\n     *\n     * The `selector` option can be used to extend the options available for the\n     * selector modifier options (`selector-modifier` object data type) that\n     * each of the three built in selector types offer (row, column and cell +\n     * their plural counterparts). For example the Select extension uses this\n     * mechanism to provide an option to select only rows, columns and cells\n     * that have been marked as selected by the end user (`{selected: true}`),\n     * which can be used in conjunction with the existing built in selector\n     * options.\n     *\n     * Each property is an array to which functions can be pushed. The functions\n     * take three attributes:\n     *\n     * * Settings object for the host table\n     * * Options object (`selector-modifier` object type)\n     * * Array of selected item indexes\n     *\n     * The return is an array of the resulting item indexes after the custom\n     * selector has been applied.\n     *\n     *  @type object\n     */\n    selector: {\n      cell: [],\n      column: [],\n      row: []\n    },\n\n    /**\n     * Internal functions, exposed for used in plug-ins.\n     * \n     * Please note that you should not need to use the internal methods for\n     * anything other than a plug-in (and even then, try to avoid if possible).\n     * The internal function may change between releases.\n     *\n     *  @type object\n     *  @default {}\n     */\n    internal: {},\n\n    /**\n     * Legacy configuration options. Enable and disable legacy options that\n     * are available in DataTables.\n     *\n     *  @type object\n     */\n    legacy: {\n      /**\n       * Enable / disable DataTables 1.9 compatible server-side processing\n       * requests\n       *\n       *  @type boolean\n       *  @default null\n       */\n      ajax: null\n    },\n\n    /**\n     * Pagination plug-in methods.\n     * \n     * Each entry in this object is a function and defines which buttons should\n     * be shown by the pagination rendering method that is used for the table:\n     * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n     * buttons are displayed in the document, while the functions here tell it\n     * what buttons to display. This is done by returning an array of button\n     * descriptions (what each button will do).\n     *\n     * Pagination types (the four built in options and any additional plug-in\n     * options defined here) can be used through the `paginationType`\n     * initialisation parameter.\n     *\n     * The functions defined take two parameters:\n     *\n     * 1. `{int} page` The current page index\n     * 2. `{int} pages` The number of pages in the table\n     *\n     * Each function is expected to return an array where each element of the\n     * array can be one of:\n     *\n     * * `first` - Jump to first page when activated\n     * * `last` - Jump to last page when activated\n     * * `previous` - Show previous page when activated\n     * * `next` - Show next page when activated\n     * * `{int}` - Show page of the index given\n     * * `{array}` - A nested array containing the above elements to add a\n     *   containing 'DIV' element (might be useful for styling).\n     *\n     * Note that DataTables v1.9- used this object slightly differently whereby\n     * an object with two functions would be defined for each plug-in. That\n     * ability is still supported by DataTables 1.10+ to provide backwards\n     * compatibility, but this option of use is now decremented and no longer\n     * documented in DataTables 1.10+.\n     *\n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    // Show previous, next and current page buttons only\n     *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n     *      return [ 'previous', page, 'next' ];\n     *    };\n     */\n    pager: {},\n    renderer: {\n      pageButton: {},\n      header: {}\n    },\n\n    /**\n     * Ordering plug-ins - custom data source\n     * \n     * The extension options for ordering of data available here is complimentary\n     * to the default type based ordering that DataTables typically uses. It\n     * allows much greater control over the the data that is being used to\n     * order a column, but is necessarily therefore more complex.\n     * \n     * This type of ordering is useful if you want to do ordering based on data\n     * live from the DOM (for example the contents of an 'input' element) rather\n     * than just the static string that DataTables knows of.\n     * \n     * The way these plug-ins work is that you create an array of the values you\n     * wish to be ordering for the column in question and then return that\n     * array. The data in the array much be in the index order of the rows in\n     * the table (not the currently ordering order!). Which order data gathering\n     * function is run here depends on the `dt-init columns.orderDataType`\n     * parameter that is used for the column (if any).\n     *\n     * The functions defined take two parameters:\n     *\n     * 1. `{object}` DataTables settings object: see\n     *    {@link DataTable.models.oSettings}\n     * 2. `{int}` Target column index\n     *\n     * Each function is expected to return an array:\n     *\n     * * `{array}` Data for the column to be ordering upon\n     *\n     *  @type array\n     *\n     *  @example\n     *    // Ordering using `input` node values\n     *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n     *    {\n     *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n     *        return $('input', td).val();\n     *      } );\n     *    }\n     */\n    order: {},\n\n    /**\n     * Type based plug-ins.\n     *\n     * Each column in DataTables has a type assigned to it, either by automatic\n     * detection or by direct assignment using the `type` option for the column.\n     * The type of a column will effect how it is ordering and search (plug-ins\n     * can also make use of the column type if required).\n     *\n     * @namespace\n     */\n    type: {\n      /**\n       * Type detection functions.\n       *\n       * The functions defined in this object are used to automatically detect\n       * a column's type, making initialisation of DataTables super easy, even\n       * when complex data is in the table.\n       *\n       * The functions defined take two parameters:\n       *\n          *  1. `{*}` Data from the column cell to be analysed\n          *  2. `{settings}` DataTables settings object. This can be used to\n          *     perform context specific type detection - for example detection\n          *     based on language settings such as using a comma for a decimal\n          *     place. Generally speaking the options from the settings will not\n          *     be required\n       *\n       * Each function is expected to return:\n       *\n       * * `{string|null}` Data type detected, or null if unknown (and thus\n       *   pass it on to the other type detection functions.\n       *\n       *  @type array\n       *\n       *  @example\n       *    // Currency type detection plug-in:\n       *    $.fn.dataTable.ext.type.detect.push(\n       *      function ( data, settings ) {\n       *        // Check the numeric part\n       *        if ( ! data.substring(1).match(/[0-9]/) ) {\n       *          return null;\n       *        }\n       *\n       *        // Check prefixed by currency\n       *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n       *          return 'currency';\n       *        }\n       *        return null;\n       *      }\n       *    );\n       */\n      detect: [],\n\n      /**\n       * Type based search formatting.\n       *\n       * The type based searching functions can be used to pre-format the\n       * data to be search on. For example, it can be used to strip HTML\n       * tags or to de-format telephone numbers for numeric only searching.\n       *\n       * Note that is a search is not defined for a column of a given type,\n       * no search formatting will be performed.\n       * \n       * Pre-processing of searching data plug-ins - When you assign the sType\n       * for a column (or have it automatically detected for you by DataTables\n       * or a type detection plug-in), you will typically be using this for\n       * custom sorting, but it can also be used to provide custom searching\n       * by allowing you to pre-processing the data and returning the data in\n       * the format that should be searched upon. This is done by adding\n       * functions this object with a parameter name which matches the sType\n       * for that target column. This is the corollary of <i>afnSortData</i>\n       * for searching data.\n       *\n       * The functions defined take a single parameter:\n       *\n          *  1. `{*}` Data from the column cell to be prepared for searching\n       *\n       * Each function is expected to return:\n       *\n       * * `{string|null}` Formatted string that will be used for the searching.\n       *\n       *  @type object\n       *  @default {}\n       *\n       *  @example\n       *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n       *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n       *    }\n       */\n      search: {},\n\n      /**\n       * Type based ordering.\n       *\n       * The column type tells DataTables what ordering to apply to the table\n       * when a column is sorted upon. The order for each type that is defined,\n       * is defined by the functions available in this object.\n       *\n       * Each ordering option can be described by three properties added to\n       * this object:\n       *\n       * * `{type}-pre` - Pre-formatting function\n       * * `{type}-asc` - Ascending order function\n       * * `{type}-desc` - Descending order function\n       *\n       * All three can be used together, only `{type}-pre` or only\n       * `{type}-asc` and `{type}-desc` together. It is generally recommended\n       * that only `{type}-pre` is used, as this provides the optimal\n       * implementation in terms of speed, although the others are provided\n       * for compatibility with existing Javascript sort functions.\n       *\n       * `{type}-pre`: Functions defined take a single parameter:\n       *\n          *  1. `{*}` Data from the column cell to be prepared for ordering\n       *\n       * And return:\n       *\n       * * `{*}` Data to be sorted upon\n       *\n       * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n       * functions, taking two parameters:\n       *\n          *  1. `{*}` Data to compare to the second parameter\n          *  2. `{*}` Data to compare to the first parameter\n       *\n       * And returning:\n       *\n       * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n       *   than the second parameter, ===0 if the two parameters are equal and\n       *   >0 if the first parameter should be sorted height than the second\n       *   parameter.\n       * \n       *  @type object\n       *  @default {}\n       *\n       *  @example\n       *    // Numeric ordering of formatted numbers with a pre-formatter\n       *    $.extend( $.fn.dataTable.ext.type.order, {\n       *      \"string-pre\": function(x) {\n       *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n       *        return parseFloat( a );\n       *      }\n       *    } );\n       *\n       *  @example\n       *    // Case-sensitive string ordering, with no pre-formatting method\n       *    $.extend( $.fn.dataTable.ext.order, {\n       *      \"string-case-asc\": function(x,y) {\n       *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n       *      },\n       *      \"string-case-desc\": function(x,y) {\n       *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n       *      }\n       *    } );\n       */\n      order: {}\n    },\n\n    /**\n     * Unique DataTables instance counter\n     *\n     * @type int\n     * @private\n     */\n    _unique: 0,\n    //\n    // Depreciated\n    // The following properties are retained for backwards compatibility only.\n    // The should not be used in new projects and will be removed in a future\n    // version\n    //\n\n    /**\n     * Version check function.\n     *  @type function\n     *  @depreciated Since 1.10\n     */\n    fnVersionCheck: DataTable.fnVersionCheck,\n\n    /**\n     * Index for what 'this' index API functions should use\n     *  @type int\n     *  @deprecated Since v1.10\n     */\n    iApiIndex: 0,\n\n    /**\n     * jQuery UI class container\n     *  @type object\n     *  @deprecated Since v1.10\n     */\n    oJUIClasses: {},\n\n    /**\n     * Software version\n     *  @type string\n     *  @deprecated Since v1.10\n     */\n    sVersion: DataTable.version\n  }; //\n  // Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n  //\n\n  $.extend(_ext, {\n    afnFiltering: _ext.search,\n    aTypes: _ext.type.detect,\n    ofnSearch: _ext.type.search,\n    oSort: _ext.type.order,\n    afnSortData: _ext.order,\n    aoFeatures: _ext.feature,\n    oApi: _ext.internal,\n    oStdClasses: _ext.classes,\n    oPagination: _ext.pager\n  });\n  $.extend(DataTable.ext.classes, {\n    \"sTable\": \"dataTable\",\n    \"sNoFooter\": \"no-footer\",\n\n    /* Paging buttons */\n    \"sPageButton\": \"paginate_button\",\n    \"sPageButtonActive\": \"current\",\n    \"sPageButtonDisabled\": \"disabled\",\n\n    /* Striping classes */\n    \"sStripeOdd\": \"odd\",\n    \"sStripeEven\": \"even\",\n\n    /* Empty row */\n    \"sRowEmpty\": \"dataTables_empty\",\n\n    /* Features */\n    \"sWrapper\": \"dataTables_wrapper\",\n    \"sFilter\": \"dataTables_filter\",\n    \"sInfo\": \"dataTables_info\",\n    \"sPaging\": \"dataTables_paginate paging_\",\n\n    /* Note that the type is postfixed */\n    \"sLength\": \"dataTables_length\",\n    \"sProcessing\": \"dataTables_processing\",\n\n    /* Sorting */\n    \"sSortAsc\": \"sorting_asc\",\n    \"sSortDesc\": \"sorting_desc\",\n    \"sSortable\": \"sorting\",\n\n    /* Sortable in both directions */\n    \"sSortableAsc\": \"sorting_desc_disabled\",\n    \"sSortableDesc\": \"sorting_asc_disabled\",\n    \"sSortableNone\": \"sorting_disabled\",\n    \"sSortColumn\": \"sorting_\",\n\n    /* Note that an int is postfixed for the sorting order */\n\n    /* Filtering */\n    \"sFilterInput\": \"\",\n\n    /* Page length */\n    \"sLengthSelect\": \"\",\n\n    /* Scrolling */\n    \"sScrollWrapper\": \"dataTables_scroll\",\n    \"sScrollHead\": \"dataTables_scrollHead\",\n    \"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n    \"sScrollBody\": \"dataTables_scrollBody\",\n    \"sScrollFoot\": \"dataTables_scrollFoot\",\n    \"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n    /* Misc */\n    \"sHeaderTH\": \"\",\n    \"sFooterTH\": \"\",\n    // Deprecated\n    \"sSortJUIAsc\": \"\",\n    \"sSortJUIDesc\": \"\",\n    \"sSortJUI\": \"\",\n    \"sSortJUIAscAllowed\": \"\",\n    \"sSortJUIDescAllowed\": \"\",\n    \"sSortJUIWrapper\": \"\",\n    \"sSortIcon\": \"\",\n    \"sJUIHeader\": \"\",\n    \"sJUIFooter\": \"\"\n  });\n  var extPagination = DataTable.ext.pager;\n\n  function _numbers(page, pages) {\n    var numbers = [],\n        buttons = extPagination.numbers_length,\n        half = Math.floor(buttons / 2),\n        i = 1;\n\n    if (pages <= buttons) {\n      numbers = _range(0, pages);\n    } else if (page <= half) {\n      numbers = _range(0, buttons - 2);\n      numbers.push('ellipsis');\n      numbers.push(pages - 1);\n    } else if (page >= pages - 1 - half) {\n      numbers = _range(pages - (buttons - 2), pages);\n      numbers.splice(0, 0, 'ellipsis'); // no unshift in ie6\n\n      numbers.splice(0, 0, 0);\n    } else {\n      numbers = _range(page - half + 2, page + half - 1);\n      numbers.push('ellipsis');\n      numbers.push(pages - 1);\n      numbers.splice(0, 0, 'ellipsis');\n      numbers.splice(0, 0, 0);\n    }\n\n    numbers.DT_el = 'span';\n    return numbers;\n  }\n\n  $.extend(extPagination, {\n    simple: function simple(page, pages) {\n      return ['previous', 'next'];\n    },\n    full: function full(page, pages) {\n      return ['first', 'previous', 'next', 'last'];\n    },\n    numbers: function numbers(page, pages) {\n      return [_numbers(page, pages)];\n    },\n    simple_numbers: function simple_numbers(page, pages) {\n      return ['previous', _numbers(page, pages), 'next'];\n    },\n    full_numbers: function full_numbers(page, pages) {\n      return ['first', 'previous', _numbers(page, pages), 'next', 'last'];\n    },\n    first_last_numbers: function first_last_numbers(page, pages) {\n      return ['first', _numbers(page, pages), 'last'];\n    },\n    // For testing and plug-ins to use\n    _numbers: _numbers,\n    // Number of number buttons (including ellipsis) to show. _Must be odd!_\n    numbers_length: 7\n  });\n  $.extend(true, DataTable.ext.renderer, {\n    pageButton: {\n      _: function _(settings, host, idx, buttons, page, pages) {\n        var classes = settings.oClasses;\n        var lang = settings.oLanguage.oPaginate;\n        var aria = settings.oLanguage.oAria.paginate || {};\n        var btnDisplay,\n            btnClass,\n            counter = 0;\n\n        var attach = function attach(container, buttons) {\n          var i, ien, node, button, tabIndex;\n          var disabledClass = classes.sPageButtonDisabled;\n\n          var clickHandler = function clickHandler(e) {\n            _fnPageChange(settings, e.data.action, true);\n          };\n\n          for (i = 0, ien = buttons.length; i < ien; i++) {\n            button = buttons[i];\n\n            if (Array.isArray(button)) {\n              var inner = $('<' + (button.DT_el || 'div') + '/>').appendTo(container);\n              attach(inner, button);\n            } else {\n              btnDisplay = null;\n              btnClass = button;\n              tabIndex = settings.iTabIndex;\n\n              switch (button) {\n                case 'ellipsis':\n                  container.append('<span class=\"ellipsis\">&#x2026;</span>');\n                  break;\n\n                case 'first':\n                  btnDisplay = lang.sFirst;\n\n                  if (page === 0) {\n                    tabIndex = -1;\n                    btnClass += ' ' + disabledClass;\n                  }\n\n                  break;\n\n                case 'previous':\n                  btnDisplay = lang.sPrevious;\n\n                  if (page === 0) {\n                    tabIndex = -1;\n                    btnClass += ' ' + disabledClass;\n                  }\n\n                  break;\n\n                case 'next':\n                  btnDisplay = lang.sNext;\n\n                  if (pages === 0 || page === pages - 1) {\n                    tabIndex = -1;\n                    btnClass += ' ' + disabledClass;\n                  }\n\n                  break;\n\n                case 'last':\n                  btnDisplay = lang.sLast;\n\n                  if (pages === 0 || page === pages - 1) {\n                    tabIndex = -1;\n                    btnClass += ' ' + disabledClass;\n                  }\n\n                  break;\n\n                default:\n                  btnDisplay = settings.fnFormatNumber(button + 1);\n                  btnClass = page === button ? classes.sPageButtonActive : '';\n                  break;\n              }\n\n              if (btnDisplay !== null) {\n                node = $('<a>', {\n                  'class': classes.sPageButton + ' ' + btnClass,\n                  'aria-controls': settings.sTableId,\n                  'aria-label': aria[button],\n                  'data-dt-idx': counter,\n                  'tabindex': tabIndex,\n                  'id': idx === 0 && typeof button === 'string' ? settings.sTableId + '_' + button : null\n                }).html(btnDisplay).appendTo(container);\n\n                _fnBindAction(node, {\n                  action: button\n                }, clickHandler);\n\n                counter++;\n              }\n            }\n          }\n        }; // IE9 throws an 'unknown error' if document.activeElement is used\n        // inside an iframe or frame. Try / catch the error. Not good for\n        // accessibility, but neither are frames.\n\n\n        var activeEl;\n\n        try {\n          // Because this approach is destroying and recreating the paging\n          // elements, focus is lost on the select button which is bad for\n          // accessibility. So we want to restore focus once the draw has\n          // completed\n          activeEl = $(host).find(document.activeElement).data('dt-idx');\n        } catch (e) {}\n\n        attach($(host).empty(), buttons);\n\n        if (activeEl !== undefined) {\n          $(host).find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n        }\n      }\n    }\n  }); // Built in type detection. See model.ext.aTypes for information about\n  // what is required from this methods.\n\n  $.extend(DataTable.ext.type.detect, [// Plain numbers - first since V8 detects some plain numbers as dates\n  // e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n  function (d, settings) {\n    var decimal = settings.oLanguage.sDecimal;\n    return _isNumber(d, decimal) ? 'num' + decimal : null;\n  }, // Dates (only those recognised by the browser's Date.parse)\n  function (d, settings) {\n    // V8 tries _very_ hard to make a string passed into `Date.parse()`\n    // valid, so we need to use a regex to restrict date formats. Use a\n    // plug-in for anything other than ISO8601 style strings\n    if (d && !(d instanceof Date) && !_re_date.test(d)) {\n      return null;\n    }\n\n    var parsed = Date.parse(d);\n    return parsed !== null && !isNaN(parsed) || _empty(d) ? 'date' : null;\n  }, // Formatted numbers\n  function (d, settings) {\n    var decimal = settings.oLanguage.sDecimal;\n    return _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null;\n  }, // HTML numeric\n  function (d, settings) {\n    var decimal = settings.oLanguage.sDecimal;\n    return _htmlNumeric(d, decimal) ? 'html-num' + decimal : null;\n  }, // HTML numeric, formatted\n  function (d, settings) {\n    var decimal = settings.oLanguage.sDecimal;\n    return _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null;\n  }, // HTML (this is strict checking - there must be html)\n  function (d, settings) {\n    return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1 ? 'html' : null;\n  }]); // Filter formatting functions. See model.ext.ofnSearch for information about\n  // what is required from these methods.\n  // \n  // Note that additional search methods are added for the html numbers and\n  // html formatted numbers by `_addNumericSort()` when we know what the decimal\n  // place is\n\n  $.extend(DataTable.ext.type.search, {\n    html: function html(data) {\n      return _empty(data) ? data : typeof data === 'string' ? data.replace(_re_new_lines, \" \").replace(_re_html, \"\") : '';\n    },\n    string: function string(data) {\n      return _empty(data) ? data : typeof data === 'string' ? data.replace(_re_new_lines, \" \") : data;\n    }\n  });\n\n  var __numericReplace = function __numericReplace(d, decimalPlace, re1, re2) {\n    if (d !== 0 && (!d || d === '-')) {\n      return -Infinity;\n    } // If a decimal place other than `.` is used, it needs to be given to the\n    // function so we can detect it and replace with a `.` which is the only\n    // decimal place Javascript recognises - it is not locale aware.\n\n\n    if (decimalPlace) {\n      d = _numToDecimal(d, decimalPlace);\n    }\n\n    if (d.replace) {\n      if (re1) {\n        d = d.replace(re1, '');\n      }\n\n      if (re2) {\n        d = d.replace(re2, '');\n      }\n    }\n\n    return d * 1;\n  }; // Add the numeric 'deformatting' functions for sorting and search. This is done\n  // in a function to provide an easy ability for the language options to add\n  // additional methods if a non-period decimal place is used.\n\n\n  function _addNumericSort(decimalPlace) {\n    $.each({\n      // Plain numbers\n      \"num\": function num(d) {\n        return __numericReplace(d, decimalPlace);\n      },\n      // Formatted numbers\n      \"num-fmt\": function numFmt(d) {\n        return __numericReplace(d, decimalPlace, _re_formatted_numeric);\n      },\n      // HTML numeric\n      \"html-num\": function htmlNum(d) {\n        return __numericReplace(d, decimalPlace, _re_html);\n      },\n      // HTML numeric, formatted\n      \"html-num-fmt\": function htmlNumFmt(d) {\n        return __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric);\n      }\n    }, function (key, fn) {\n      // Add the ordering method\n      _ext.type.order[key + decimalPlace + '-pre'] = fn; // For HTML types add a search formatter that will strip the HTML\n\n      if (key.match(/^html\\-/)) {\n        _ext.type.search[key + decimalPlace] = _ext.type.search.html;\n      }\n    });\n  } // Default sort methods\n\n\n  $.extend(_ext.type.order, {\n    // Dates\n    \"date-pre\": function datePre(d) {\n      var ts = Date.parse(d);\n      return isNaN(ts) ? -Infinity : ts;\n    },\n    // html\n    \"html-pre\": function htmlPre(a) {\n      return _empty(a) ? '' : a.replace ? a.replace(/<.*?>/g, \"\").toLowerCase() : a + '';\n    },\n    // string\n    \"string-pre\": function stringPre(a) {\n      // This is a little complex, but faster than always calling toString,\n      // http://jsperf.com/tostring-v-check\n      return _empty(a) ? '' : typeof a === 'string' ? a.toLowerCase() : !a.toString ? '' : a.toString();\n    },\n    // string-asc and -desc are retained only for compatibility with the old\n    // sort methods\n    \"string-asc\": function stringAsc(x, y) {\n      return x < y ? -1 : x > y ? 1 : 0;\n    },\n    \"string-desc\": function stringDesc(x, y) {\n      return x < y ? 1 : x > y ? -1 : 0;\n    }\n  }); // Numeric sorting types - order doesn't matter here\n\n  _addNumericSort('');\n\n  $.extend(true, DataTable.ext.renderer, {\n    header: {\n      _: function _(settings, cell, column, classes) {\n        // No additional mark-up required\n        // Attach a sort listener to update on sort - note that using the\n        // `DT` namespace will allow the event to be removed automatically\n        // on destroy, while the `dt` namespaced event is the one we are\n        // listening for\n        $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n          if (settings !== ctx) {\n            // need to check this this is the host\n            return; // table, not a nested one\n          }\n\n          var colIdx = column.idx;\n          cell.removeClass(classes.sSortAsc + ' ' + classes.sSortDesc).addClass(columns[colIdx] == 'asc' ? classes.sSortAsc : columns[colIdx] == 'desc' ? classes.sSortDesc : column.sSortingClass);\n        });\n      },\n      jqueryui: function jqueryui(settings, cell, column, classes) {\n        $('<div/>').addClass(classes.sSortJUIWrapper).append(cell.contents()).append($('<span/>').addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI)).appendTo(cell); // Attach a sort listener to update on sort\n\n        $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n          if (settings !== ctx) {\n            return;\n          }\n\n          var colIdx = column.idx;\n          cell.removeClass(classes.sSortAsc + \" \" + classes.sSortDesc).addClass(columns[colIdx] == 'asc' ? classes.sSortAsc : columns[colIdx] == 'desc' ? classes.sSortDesc : column.sSortingClass);\n          cell.find('span.' + classes.sSortIcon).removeClass(classes.sSortJUIAsc + \" \" + classes.sSortJUIDesc + \" \" + classes.sSortJUI + \" \" + classes.sSortJUIAscAllowed + \" \" + classes.sSortJUIDescAllowed).addClass(columns[colIdx] == 'asc' ? classes.sSortJUIAsc : columns[colIdx] == 'desc' ? classes.sSortJUIDesc : column.sSortingClassJUI);\n        });\n      }\n    }\n  });\n  /*\n   * Public helper functions. These aren't used internally by DataTables, or\n   * called by any of the options passed into DataTables, but they can be used\n   * externally by developers working with DataTables. They are helper functions\n   * to make working with DataTables a little bit easier.\n   */\n\n  var __htmlEscapeEntities = function __htmlEscapeEntities(d) {\n    if (Array.isArray(d)) {\n      d = d.join(',');\n    }\n\n    return typeof d === 'string' ? d.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') : d;\n  };\n  /**\n   * Helpers for `columns.render`.\n   *\n   * The options defined here can be used with the `columns.render` initialisation\n   * option to provide a display renderer. The following functions are defined:\n   *\n   * * `number` - Will format numeric data (defined by `columns.data`) for\n   *   display, retaining the original unformatted data for sorting and filtering.\n   *   It takes 5 parameters:\n   *   * `string` - Thousands grouping separator\n   *   * `string` - Decimal point indicator\n   *   * `integer` - Number of decimal points to show\n   *   * `string` (optional) - Prefix.\n   *   * `string` (optional) - Postfix (/suffix).\n   * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n   *   parameters.\n   *\n   * @example\n   *   // Column definition using the number renderer\n   *   {\n   *     data: \"salary\",\n   *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n   *   }\n   *\n   * @namespace\n   */\n\n\n  DataTable.render = {\n    number: function number(thousands, decimal, precision, prefix, postfix) {\n      return {\n        display: function display(d) {\n          if (typeof d !== 'number' && typeof d !== 'string') {\n            return d;\n          }\n\n          var negative = d < 0 ? '-' : '';\n          var flo = parseFloat(d); // If NaN then there isn't much formatting that we can do - just\n          // return immediately, escaping any HTML (this was supposed to\n          // be a number after all)\n\n          if (isNaN(flo)) {\n            return __htmlEscapeEntities(d);\n          }\n\n          flo = flo.toFixed(precision);\n          d = Math.abs(flo);\n          var intPart = parseInt(d, 10);\n          var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : ''; // If zero, then can't have a negative prefix\n\n          if (intPart === 0 && parseFloat(floatPart) === 0) {\n            negative = '';\n          }\n\n          return negative + (prefix || '') + intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) + floatPart + (postfix || '');\n        }\n      };\n    },\n    text: function text() {\n      return {\n        display: __htmlEscapeEntities,\n        filter: __htmlEscapeEntities\n      };\n    }\n  };\n  /*\n   * This is really a good bit rubbish this method of exposing the internal methods\n   * publicly... - To be fixed in 2.0 using methods on the prototype\n   */\n\n  /**\n   * Create a wrapper function for exporting an internal functions to an external API.\n   *  @param {string} fn API function name\n   *  @returns {function} wrapped function\n   *  @memberof DataTable#internal\n   */\n\n  function _fnExternApiFunc(fn) {\n    return function () {\n      var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));\n      return DataTable.ext.internal[fn].apply(this, args);\n    };\n  }\n  /**\n   * Reference to internal functions for use by plug-in developers. Note that\n   * these methods are references to internal functions and are considered to be\n   * private. If you use these methods, be aware that they are liable to change\n   * between versions.\n   *  @namespace\n   */\n\n\n  $.extend(DataTable.ext.internal, {\n    _fnExternApiFunc: _fnExternApiFunc,\n    _fnBuildAjax: _fnBuildAjax,\n    _fnAjaxUpdate: _fnAjaxUpdate,\n    _fnAjaxParameters: _fnAjaxParameters,\n    _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n    _fnAjaxDataSrc: _fnAjaxDataSrc,\n    _fnAddColumn: _fnAddColumn,\n    _fnColumnOptions: _fnColumnOptions,\n    _fnAdjustColumnSizing: _fnAdjustColumnSizing,\n    _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n    _fnColumnIndexToVisible: _fnColumnIndexToVisible,\n    _fnVisbleColumns: _fnVisbleColumns,\n    _fnGetColumns: _fnGetColumns,\n    _fnColumnTypes: _fnColumnTypes,\n    _fnApplyColumnDefs: _fnApplyColumnDefs,\n    _fnHungarianMap: _fnHungarianMap,\n    _fnCamelToHungarian: _fnCamelToHungarian,\n    _fnLanguageCompat: _fnLanguageCompat,\n    _fnBrowserDetect: _fnBrowserDetect,\n    _fnAddData: _fnAddData,\n    _fnAddTr: _fnAddTr,\n    _fnNodeToDataIndex: _fnNodeToDataIndex,\n    _fnNodeToColumnIndex: _fnNodeToColumnIndex,\n    _fnGetCellData: _fnGetCellData,\n    _fnSetCellData: _fnSetCellData,\n    _fnSplitObjNotation: _fnSplitObjNotation,\n    _fnGetObjectDataFn: _fnGetObjectDataFn,\n    _fnSetObjectDataFn: _fnSetObjectDataFn,\n    _fnGetDataMaster: _fnGetDataMaster,\n    _fnClearTable: _fnClearTable,\n    _fnDeleteIndex: _fnDeleteIndex,\n    _fnInvalidate: _fnInvalidate,\n    _fnGetRowElements: _fnGetRowElements,\n    _fnCreateTr: _fnCreateTr,\n    _fnBuildHead: _fnBuildHead,\n    _fnDrawHead: _fnDrawHead,\n    _fnDraw: _fnDraw,\n    _fnReDraw: _fnReDraw,\n    _fnAddOptionsHtml: _fnAddOptionsHtml,\n    _fnDetectHeader: _fnDetectHeader,\n    _fnGetUniqueThs: _fnGetUniqueThs,\n    _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n    _fnFilterComplete: _fnFilterComplete,\n    _fnFilterCustom: _fnFilterCustom,\n    _fnFilterColumn: _fnFilterColumn,\n    _fnFilter: _fnFilter,\n    _fnFilterCreateSearch: _fnFilterCreateSearch,\n    _fnEscapeRegex: _fnEscapeRegex,\n    _fnFilterData: _fnFilterData,\n    _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n    _fnUpdateInfo: _fnUpdateInfo,\n    _fnInfoMacros: _fnInfoMacros,\n    _fnInitialise: _fnInitialise,\n    _fnInitComplete: _fnInitComplete,\n    _fnLengthChange: _fnLengthChange,\n    _fnFeatureHtmlLength: _fnFeatureHtmlLength,\n    _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n    _fnPageChange: _fnPageChange,\n    _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n    _fnProcessingDisplay: _fnProcessingDisplay,\n    _fnFeatureHtmlTable: _fnFeatureHtmlTable,\n    _fnScrollDraw: _fnScrollDraw,\n    _fnApplyToChildren: _fnApplyToChildren,\n    _fnCalculateColumnWidths: _fnCalculateColumnWidths,\n    _fnThrottle: _fnThrottle,\n    _fnConvertToWidth: _fnConvertToWidth,\n    _fnGetWidestNode: _fnGetWidestNode,\n    _fnGetMaxLenString: _fnGetMaxLenString,\n    _fnStringToCss: _fnStringToCss,\n    _fnSortFlatten: _fnSortFlatten,\n    _fnSort: _fnSort,\n    _fnSortAria: _fnSortAria,\n    _fnSortListener: _fnSortListener,\n    _fnSortAttachListener: _fnSortAttachListener,\n    _fnSortingClasses: _fnSortingClasses,\n    _fnSortData: _fnSortData,\n    _fnSaveState: _fnSaveState,\n    _fnLoadState: _fnLoadState,\n    _fnImplementState: _fnImplementState,\n    _fnSettingsFromNode: _fnSettingsFromNode,\n    _fnLog: _fnLog,\n    _fnMap: _fnMap,\n    _fnBindAction: _fnBindAction,\n    _fnCallbackReg: _fnCallbackReg,\n    _fnCallbackFire: _fnCallbackFire,\n    _fnLengthOverflow: _fnLengthOverflow,\n    _fnRenderer: _fnRenderer,\n    _fnDataSource: _fnDataSource,\n    _fnRowAttributes: _fnRowAttributes,\n    _fnExtend: _fnExtend,\n    _fnCalculateEnd: function _fnCalculateEnd() {} // Used by a lot of plug-ins, but redundant\n    // in 1.10, so this dead-end function is\n    // added to prevent errors\n\n  }); // jQuery access\n\n  $.fn.dataTable = DataTable; // Provide access to the host jQuery object (circular reference)\n\n  DataTable.$ = $; // Legacy aliases\n\n  $.fn.dataTableSettings = DataTable.settings;\n  $.fn.dataTableExt = DataTable.ext; // With a capital `D` we return a DataTables API instance rather than a\n  // jQuery object\n\n  $.fn.DataTable = function (opts) {\n    return $(this).dataTable(opts).api();\n  }; // All properties that are available to $.fn.dataTable should also be\n  // available on $.fn.DataTable\n\n\n  $.each(DataTable, function (prop, val) {\n    $.fn.DataTable[prop] = val;\n  });\n  return DataTable;\n});"],"sourceRoot":""}